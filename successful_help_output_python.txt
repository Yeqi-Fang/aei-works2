=================================================
--- Help output for: lal_cache
=================================================


=================================================
--- Help output for: lal_fftw_wisdom
=================================================


=================================================
--- Help output for: lal_fftwf_wisdom
=================================================


=================================================
--- Help output for: lal_path2cache
=================================================
Usage: lal_path2cache [options]

Example:
	ls *.xml | lal_path2cache

Options:
  -h, --help            show this help message and exit
  -a, --include-all     Include all files in output.  Unparseable file names
                        are assigned empty metadata.
  -f, --force           Ignore errors.  Unparseable file names are removed
                        from the output.  This has no effect if --include-all
                        is given.
  -i filename, --input=filename
                        Read input from this file (default = stdin).
  -o filename, --output=filename
                        Write output to this file (default = stdout).
  -v, --verbose         Be verbose.


=================================================
--- Help output for: lal_searchsum2cache
=================================================
Usage: lal_searchsum2cache [options] filenames ...

Generates a LAL format cache file describing a collection of LIGO light-weight
XML files.  The cache is constructed by parsing the search_summary table in
each file to extract the instruments and time each file spans.  To allow long
file lists to be processed, the filenames are interpreted as shell patterns
(wildcard expansion is performed).

Options:
  -h, --help            show this help message and exit
  --description=string  Set all descriptions to this string.  Use "-" for no
                        description.  If not given then the description will
                        be extracted from the search summary rows, and if the
                        search summary rows do not provide a unique
                        description an error is raised.
  --observatory=string  Set all observatories to this string.  Use "-" for no
                        observatory.  If not given then the union of the
                        instruments from the search summary rows will be used
                        to construct an "observatory" string.
  -v, --verbose         Be verbose.
  -o filename, --output=filename
                        Write output to this file (default = stdout).
  -p name, --program=name
                        Obtain instruments, starts, durations, and
                        descriptions from the search summary rows for this
                        program (default = use all search summary rows).  Can
                        be given multiple times to select rows from more than
                        one program.


=================================================
--- Help output for: lal_simd_detect
=================================================


=================================================
--- Help output for: lal_tconvert
=================================================
Name:
	lal_tconvert

Synopsis:
	lal_tconvert [OPTIONS] DATE_STRING
	lal_tconvert [OPTIONS] TIMER_SECONDS

Description:
        Convert between various representations of time.

Options:

        -d, --date
                output a date string [default when input is timer seconds]
        
        -fFORMAT, --format=FORMAT
                output format for date string [see date(1)]
        
        -G, --gps-epoch
                use GPS epoch for timer (1980-01-06 00:00:00 UTC) [default]
        
        -I, --iso-8601
                output date string in ISO 8601 format
        
        -j, --jd, --julian-day
                output Julian day (in UTC time system)
        
        -l, --leap-seconds
                output number of leap seconds (TAI-UTC)
        
        -L, --local
                date strings formatted for local time (current TZ setting)        
        -m, --mjd, --modified-julian-day
                output modified Julian day (in UTC time system)
        
        -R, --rfc-2822
                output RFC-2822 compliant date string
        
        -s, --sidereal-time[= HMS|RAD]
                print Greenwich mean sidreal time [default format HH:MM:SS]
        
        -S, --stdin
                read from standard input
        
        -t, --timer
                output timer seconds [default when input is a date string]
        
        -u, --utc
                date strings formatted for Coordinated Universal Time [default]
        
        -U, --unix-epoch
                use Unix epoch for timer (1970-01-01 00:00:00 UTC)
        
        -zTZ, --zone=TZ
                set time zone to TZ (use with --local)
        
        -ZSITE, --site=SITE
                set site to SITE which is [valid sites: LHO | LLO]
        
        --help  display this help and exit
        
        --version
                output version information and exit

Environment Variables:
        TZ      The timezone to use when parsing or displaying dates.

Examples:
        Get current time in GPS seconds:
        
                lal_tconvert now
        
        Get local time corresponding to GPS time 800000000 in RFC 2822 format:
        
                lal_tconvert --rfc-2822 --local 800000000
        
        Find the local sidereal time at LHO three hours ago:
        
                lal_tconvert --sidereal-time --site=LHO 3 hours ago
        
        Get the Julian day(UTC) of Y2K (UTC is default unless --local is used):
        
                lal_tconvert --julian-day Jan 1, 2000
        
        Find out all about now:
        
                lal_tconvert --verbose
        


=================================================
--- Help output for: lal_version
=================================================


=================================================
--- Help output for: lalapps_ComputeAntennaPattern
=================================================


=================================================
--- Help output for: lalapps_ComputeFstatBenchmark
=================================================


=================================================
--- Help output for: lalapps_ComputeFstatLatticeCount
=================================================


=================================================
--- Help output for: lalapps_ComputeFstatMCUpperLimit
=================================================


=================================================
--- Help output for: lalapps_ComputeFstatistic_v2
=================================================


=================================================
--- Help output for: lalapps_ComputePSD
=================================================


=================================================
--- Help output for: lalapps_CopySFTs
=================================================


=================================================
--- Help output for: lalapps_DistanceVsMass
=================================================


=================================================
--- Help output for: lalapps_DriveHoughMulti
=================================================


=================================================
--- Help output for: lalapps_FstatMetric_v2
=================================================


=================================================
--- Help output for: lalapps_HierarchSearchGCT
=================================================


=================================================
--- Help output for: lalapps_HierarchicalSearch
=================================================


=================================================
--- Help output for: lalapps_MakeSFTDAG
=================================================


=================================================
--- Help output for: lalapps_MakeSFTs
=================================================


=================================================
--- Help output for: lalapps_Makefakedata_v4
=================================================


=================================================
--- Help output for: lalapps_Makefakedata_v5
=================================================


=================================================
--- Help output for: lalapps_PredictFstat
=================================================


=================================================
--- Help output for: lalapps_PrintDetectorState
=================================================


=================================================
--- Help output for: lalapps_SFTclean
=================================================


=================================================
--- Help output for: lalapps_SFTvalidate
=================================================


=================================================
--- Help output for: lalapps_StringAddFrame
=================================================
main(): usage: lalapps_StringAddFrame [gps_start] [gps_end] [outdir]
    There should be the H1 and H2 cache files ready in [outdir] named H1.cache and H2.cache


=================================================
--- Help output for: lalapps_StringSearch
=================================================
All arguments are required except -n, -h, -w, -g, -o, -x, -y, -z, -b, -r -a, -l, -p, -T  and -i. One of -k or -c must be specified. They are:
	--sample-rate (-s)		FLOAT	 Desired sample rate (Hz).
	--bank-lowest-hifreq-cutoff (-H)	FLOAT	 Template bank lowest high frequency cut-off.
	--max-mismatch (-M)	FLOAT	 Maximal mismatch allowed from 1 template to the next.
	--bank-freq-start (-L)	FLOAT	 Template bank low frequency cut-off.
	--threshold (-t)		FLOAT	 SNR threshold.
	--frame-cache (-F)		STRING	 Name of frame cache file.
	--channel (-C)		STRING	 Name of channel.
	--injection-file (-i)		STRING	 Name of xml injection file.
	--template-bank (-K)		STRING	 Name of txt template file.
	--output (-o)		STRING	 Name of xml output file.
	--gps-start-time (-S)		INTEGER	 GPS start time.
	--gps-end-time (-E)		INTEGER	 GPS end time.
	--settling-time (-T)		INTEGER	 Number of seconds to truncate filter.
	--trig-start-time (-g)		INTEGER	 GPS start time of triggers to consider.
	--pad (-p)		INTEGER	 Pad the data with these many seconds at beginning and end.
	--chi2par0 (-A)		FLOAT	 parameter[0] for the chi2 selection.
	--chi2par1 (-B)		FLOAT	 parameter[1] for the chi2 selection.
	--chi2par2 (-G)		FLOAT	 parameter[2] for the chi2 selection.
	--short-segment-duration (-d)		INTEGER	 Duration of short segments. They will overlap by 50%. 
	--kink-search (-k)		FLAG	 Specifies a search for string kinks.
	--cusp-search (-c)		FLAG	 Specifies a search for string cusps.
	--test-gaussian-data (-n)	FLAG	 Use unit variance fake gaussian noise.
	--test-white-spectrum (-w)	FLAG	 Use constant white noise (used only in combination with fake gaussian noise; otherwise ignored).
	--cluster-events (-l)	REAL4	 Cluster events with input timescale.
	--print-spectrum (-a)	FLAG	 Prints the spectrum to Spectrum.txt.
	--print-fd-filter (-b)	FLAG	 Prints the frequency domain filter to Filter-<template no>.txt.
	--print-td-filter (-r)	FLAG	 Prints the time domain filter to FIRFilter-<template no>.txt.
	--print-snr (-x)	FLAG	 Prints the snr to stdout.
	--print-data (-y)	FLAG	 Prints the post-processed (HP filtered, downsampled, padding removed, with injections) data to data.txt.
	--print-injection (-z)	FLAG	 Prints the injeciton data to injection.txt.
	--help (-h)			FLAG	 Print this message.
eg lalapps_StringSearch  --sample-rate 4096 --bank-freq-start 30 --bank-lowest-hifreq-cutoff 200 --settling-time 0.1 --short-segment-duration 4 --cusp-search --cluster-events 0.1 --pad 4 --threshold 4 --output ladida.xml --frame-cache cache/H-H1_RDS_C01_LX-795169179-795171015.cache --channel H1:LSC-STRAIN --gps-start-time 795170318 --gps-end-time 795170396


=================================================
--- Help output for: lalapps_Weave
=================================================


=================================================
--- Help output for: lalapps_WeaveCompare
=================================================


=================================================
--- Help output for: lalapps_WeaveConcat
=================================================


=================================================
--- Help output for: lalapps_WeaveSetup
=================================================


=================================================
--- Help output for: lalapps_WriteSFTsfromSFDBs
=================================================


=================================================
--- Help output for: lalapps_animate
=================================================


=================================================
--- Help output for: lalapps_binj
=================================================


=================================================
--- Help output for: lalapps_blindinj
=================================================


=================================================
--- Help output for: lalapps_cache
=================================================


=================================================
--- Help output for: lalapps_cafe
=================================================
Usage: lalapps_cafe --time-slides time_slides_filename [options] [filename ...]

lalapps_cafe is a generic coincidence analysis front-end for trigger-based
searches for gravitational wave events.  This program answers the question
"given that I have a collection of files containing event lists, and given
that I wish to perform a coincidence analysis by time-shifting the events to
simulate a background, what are the smallest groups of trigger files such that
if each group is analyzed separately no coincidences will be missed?"  The
inputs consist of one or more LAL cache files describing the collection of
trigger files to be analyzed, and a LIGO Light Weight XML file containing a
time_slide table describing the time shifts to be applied to the triggers.  If
no cache files are named on the command line, then the cache is read from
stdin.  The output is a collection of LAL cache files, one each for the file
groups identified from the input.  See also lalapps_ll2cache (a program that
constructs a LAL cache file from a list of LIGO Light Weight XML trigger files
by parsing each file's search_summary table), and ligolw_add (a program that
combines LIGO Light Weight XML trigger files, and is capable of reading its
input file list from a LAL cache).

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -s, --single-instrument
                        Select single instrument mode.  In this mode, after
                        grouping the files as usual, for each group a separate
                        LAL cache file is written for each instrument, rather
                        than a single cache listing all input files.
  -t filename, --time-slides=filename
                        Read the time slide table from this file.
  -v, --verbose         Be verbose.
  -b base, --base=base  Set base for output caches (default = "cafe_").


=================================================
--- Help output for: lalapps_calfacs
=================================================


=================================================
--- Help output for: lalapps_cbc_stochasticbank
=================================================
  --help                       display this message
  --version                    print version information and exit
  --user-tag STRING            set the process_params usertag to STRING

  --gps-start-time SEC         GPS second of data start time
  --gps-end-time SEC           GPS second of data end time
  --low-frequency-cutoff F     Compute tau parameters from F Hz
  --minimum-mass MASS          set minimum component mass of bank to MASS
  --maximum-mass MASS          set maximum component mass of bank to MASS
  --tries-factor N             test a factor N more points than templates retained
  --random-seed SEED           set random number seed for injections to SEED
                                 (urandom|integer)
  --write-compress             write a compressed xml file



=================================================
--- Help output for: lalapps_chirplen
=================================================


=================================================
--- Help output for: lalapps_coh_PTF_inspiral
=================================================


=================================================
--- Help output for: lalapps_coinj
=================================================


=================================================
--- Help output for: lalapps_combine_crosscorr_toplists
=================================================


=================================================
--- Help output for: lalapps_compareFstats
=================================================


=================================================
--- Help output for: lalapps_compareSFTs
=================================================


=================================================
--- Help output for: lalapps_cosmicstring_pipe
=================================================
Usage: lalapps_cosmicstring_pipe [options] ...

FIXME

Options:
  -h, --help            show this help message and exit
  -f filename, --config-file=filename
                        Use this configuration file (required).
  -l path, --log-path=path
                        Make condor put log files in this directory
                        (required).
  --background-time-slides=filename
                        Set the name of the file from which to obtain the time
                        slide table for use in the background branch of the
                        pipeline (required).  This option can be given
                        multiple times to parallelize the background analysis
                        across time slides.  You will want to make sure the
                        time slide files have distinct vectors to not repeat
                        the same analysis multiple times, and in particular
                        you'll want to make sure only one of them has a zero-
                        lag vector in it.
  --injection-time-slides=filename
                        Set the name of the file from which to obtain the time
                        slide table for use in the injection branch of the
                        pipeline (required).
  --segments-file=filename
                        Set the name of the LIGO Light-Weight XML file from
                        which to obtain segment lists (required).  See
                        ligolw_segments and ligolw_segment_query for more
                        information on constructing an XML-format segments
                        file.  See also --segments-name.
  --segments-name=name  Set the name of the segment lists to retrieve from the
                        segments file (default = "segments").  See also
                        --segments-file.
  --vetoes-file=filename
                        Set the name of the LIGO Light-Weight XML file from
                        which to obtain veto segment lists (optional).  See
                        ligolw_segments and ligolw_segment_query for more
                        information on constructing an XML-format segments
                        file.  See also --vetos-name.
  --vetoes-name=name    Set the name of the segment lists to retrieve from the
                        veto segments file (default = "vetoes").  See also
                        --vetoes-file.
  -v, --verbose         Be verbose.


=================================================
--- Help output for: lalapps_create_time_correction_ephemeris
=================================================


=================================================
--- Help output for: lalapps_dumpSFT
=================================================


=================================================
--- Help output for: lalapps_effdist
=================================================


=================================================
--- Help output for: lalapps_exc_resp
=================================================


=================================================
--- Help output for: lalapps_fftw_wisdom
=================================================


=================================================
--- Help output for: lalapps_fftwf_wisdom
=================================================


=================================================
--- Help output for: lalapps_fits_header_getval
=================================================


=================================================
--- Help output for: lalapps_fits_header_list
=================================================


=================================================
--- Help output for: lalapps_fits_overview
=================================================


=================================================
--- Help output for: lalapps_fits_table_list
=================================================


=================================================
--- Help output for: lalapps_fr_ninja
=================================================
Usage: lalapps_fr_ninja [options
[--help                    display this message and exit]
[--version                 print version information and exit]
[--verbose                 display progress information]
[--format         FORMAT   metadata format, defaults to NINJA1]
[--double-precision        generate REAL8 files, default is REAL4]
 --nr-meta-file   FILE     file containing the details of the available
                           numerical relativity waveforms
 --nr-data-dir    DIR      directory containing the numerical relativity
                           waveforms
 --output         FILE     name of output frame file


=================================================
--- Help output for: lalapps_frextr
=================================================


=================================================
--- Help output for: lalapps_frinfo
=================================================


=================================================
--- Help output for: lalapps_frjoin
=================================================


=================================================
--- Help output for: lalapps_frread
=================================================


=================================================
--- Help output for: lalapps_frview
=================================================


=================================================
--- Help output for: lalapps_gwf2xml
=================================================
Usage: gwf2xml [options]

  --help                 display this message
  --input FILE           read input data from frame FILE
  --output FILE          write output data to xml FILE
  --snr-threshold SNR    set the minimum SNR of triggers (default 6)
  --ifo IFO              set the IFO from which the triggers have come


=================================================
--- Help output for: lalapps_heterodyne_pulsar
=================================================


=================================================
--- Help output for: lalapps_inspawgfile
=================================================


=================================================
--- Help output for: lalapps_inspfrinj
=================================================


=================================================
--- Help output for: lalapps_inspinj
=================================================


=================================================
--- Help output for: lalapps_inspiralDistance
=================================================


=================================================
--- Help output for: lalapps_knope
=================================================


=================================================
--- Help output for: lalapps_knope_automation_script
=================================================


=================================================
--- Help output for: lalapps_knope_collate_results
=================================================


=================================================
--- Help output for: lalapps_knope_result_page
=================================================


=================================================
--- Help output for: lalapps_makeblindinj
=================================================
Using your requested SNR of 
Chose NS-BH injection
lalapps_inspinj --seed 27278 --taper-injection start --gps-start-time --help --gps-end-time 0 --m-distr totalMass --min-mass1 2.0 --min-mass2 1.0 --max-mass1 30.0 --max-mass2 2.0 --max-mtotal 35 --min-mtotal 2.0 --d-distr uniform --i-distr uniform --min-distance 1000 --max-distance 30000 --waveform SpinTaylortwoPointFivePN --l-distr random --f-lower 30 --time-step 1 --band-pass-injection --max-spin1 1.0 --min-spin1 0.0 --max-spin2 0.2 --min-spin2 0.0 --enable-spin -o CBC_BLINDINJ_--help.xml
lalapps_coinj --input CBC_BLINDINJ_--help.xml --response-type etmy --frames --SNR 9.11614990234375000000
Generated waveforms

Mass 1 =  Msun
Mass 2 =  Msun
Distance =  Mpc
Right Ascension =  rads
Declination =  rads
tC at Geocentre = .
tC at Hanford = .
tC at Livingston = .
tC at Virgo = .
Network SNR = 9.11614990234375000000


=================================================
--- Help output for: lalapps_makeblindinj_himass
=================================================
Using your requested SNR of 
Generating high-mass injection, parameters in CBC_BLINDINJ_HIMASS_--help.xml
lalapps_inspinj --seed 15186 --taper-injection start --gps-start-time --help --gps-end-time 0 --m-distr totalMass --min-mass1 2.0 --min-mass2 2.0 --max-mass1 100 --max-mass2 100 --max-mtotal 200 --min-mtotal 2.0 --d-distr uniform --i-distr uniform --min-distance 10000 --max-distance 50000 --waveform EOBNRpseudoFourPN --l-distr random --f-lower 30 --time-step 1 --disable-spin -o CBC_BLINDINJ_HIMASS_--help.xml
lalapps_coinj --input CBC_BLINDINJ_HIMASS_--help.xml --response-type etmy --frames --SNR 8.53222656250000000000
Generated waveforms

Mass 1 =  Msun
Mass 2 =  Msun
Distance =  Mpc
Right Ascension =  rads
Declination =  rads
tC at Geocentre = .
tC at Hanford = .
tC at Livingston = .
tC at Virgo = .
Network SNR = 8.53222656250000000000


=================================================
--- Help output for: lalapps_ninja
=================================================

NAME
       lalapps_ninja

SYNOPSIS
       lalapps_ninja --help
           Display this help page.

       lalapps_ninja -h
           Display a short usage string of available options.

       lalapps_ninja -v|--version[=verbose]
           Display (verbose) version information.

       lalapps_ninja [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

OPTIONS
       -D, --datadir=<string> [required]
           Directory with NR data

       --pattern=<string> [default: NULL]
           Filename pattern

       -o, --outfile=<string> [default: "ninja_out.xml"]
           Output xml filename

       --format=<string> [default: "NINJA1"]
           Metadata format

       --min-mass-ratio=<8-byte real> [default: 1]
           Min. mass ratio

       --max-mass-ratio=<8-byte real> [default: 0]
           Max. mass ratio

       --min-sx1=<8-byte real> [default: -1]
           Min. x-spin of first BH

       --min-sx2=<8-byte real> [default: -1]
           Min. x-Spin of second BH

       --max-sx1=<8-byte real> [default: 1]
           Max. x-spin of first BH

       --max-sx2=<8-byte real> [default: 1]
           Max. x-spin of second BH

       --min-sy1=<8-byte real> [default: -1]
           Min. y-spin of first BH

       --min-sy2=<8-byte real> [default: -1]
           Min. y-Spin of second BH

       --max-sy1=<8-byte real> [default: 1]
           Max. y-spin of first BH

       --max-sy2=<8-byte real> [default: 1]
           Max. y-spin of second BH

       --min-sz1=<8-byte real> [default: -1]
           Min. z-spin of first BH

       --min-sz2=<8-byte real> [default: -1]
           Min. z-Spin of second BH

       --max-sz1=<8-byte real> [default: 1]
           Max. z-spin of first BH

       --max-sz2=<8-byte real> [default: 1]
           Max. z-spin of second BH

       --freq-lo=<8-byte real> [default: 40]
           Lower cutoff frequency

       --min-mode=<4-byte signed integer> [default: 2]
           Min mode value to be injected

       --max-mode=<4-byte signed integer> [default: 2]
           Max mode value to be injected

       --nr-group=<string> [default: NULL]
           NR group list (default=all)



=================================================
--- Help output for: lalapps_path2cache
=================================================


=================================================
--- Help output for: lalapps_power
=================================================


=================================================
--- Help output for: lalapps_power_likelihood_pipe
=================================================
Usage: lalapps_power_likelihood_pipe [options]

Constructs the likelihood-ratio based coincidence stage for an excess power
analysis.  The input consists of one or more LAL caches listing the sqlite
database trigger files, and a list of segments giving the time intervals that
should be considered to be independent.  The LAL caches list all trigger files
together, that is injections, time slides, and zero-lag.  The individual
trigger files are self-describing, so the analysis codes can autodetect their
type.  Each segment will be analyzed using the files that intersect it:  the
likelihood ratios will be constructed from the injections and time-lag
triggers contained in files that intersect the segment, and that data used to
assign likelihoods to the injections, time-lag, and zero-lag coincs in all
files that intersect the same segment.

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  --input-cache=filename
                        Add the contents of this cache file to the list of
                        files from which to draw statistics.
  --round-robin-cache=filename
                        Add the contents of this cache file to the list of
                        files from which to draw injection statistics in a
                        round-robin way.
  --condor-log-dir=path
                        Set the directory for Condor log files (default =
                        ".").
  --config-file=filename
                        Set .ini configuration file name (default =
                        "power.ini").
  --distribution-segments=filename
                        Read boundaries for distribution data intervals from
                        this segwizard format segments file (required).
  -v, --verbose         Be verbose.


=================================================
--- Help output for: lalapps_power_pipe
=================================================
Usage: lalapps_power_pipe [options]

lalapps_power_pipe builds an excess power pipeline DAG suitable for running at
the various LSC Data Grid sites.  The script requires a configuration file.
An example file can be found in the LALApps CVS.

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  --condor-log-dir=path
                        Set the directory for Condor log files (default =
                        ".").
  --config-file=filename
                        Set .ini configuration file name (default =
                        "power.ini").
  --full-segments       Analyze all data from segment lists, not just
                        coincident times.
  --minimum-gap=seconds
                        Merge jobs analyzing data from the same instrument if
                        the gap between them is less than this many seconds
                        (default = 60).
  --variant=[injections|noninjections|both]
                        Select the variant of the pipeline to construct.
                        "injections" produces a simulations-only version of
                        the pipeline, "noninjections" produces a version with
                        no simulation jobs, and "both" produces a full
                        pipeline with both simulation and non-simulation jobs.
  --background-time-slides=filename
                        Set file from which to obtain the time slide table for
                        use in the background branch of the pipeline (default
                        = "background_time_slides.xml.gz").  Provide this
                        argument multiple times to provide multiple time slide
                        files, each will result in a separate set of
                        lalburst_coinc jobs.
  --injection-time-slides=filename
                        Set file from which to obtain the time slide table for
                        use in the injection branch of the pipeline (default =
                        "injection_time_slides.xml.gz").
  -v, --verbose         Be verbose.


=================================================
--- Help output for: lalapps_pulsar_crosscorr_v2
=================================================


=================================================
--- Help output for: lalapps_pulsar_frequency_evolution
=================================================


=================================================
--- Help output for: lalapps_pulsar_parameter_estimation_nested
=================================================


=================================================
--- Help output for: lalapps_random_bank
=================================================


=================================================
--- Help output for: lalapps_randombank
=================================================
  --help                       display this message
  --version                    print version information and exit
  --user-tag STRING            set the process_params usertag to STRING

  --gps-start-time SEC         GPS second of data start time
  --gps-end-time SEC           GPS second of data end time
  --low-frequency-cutoff F     Compute tau parameters from F Hz
  --minimum-mass MASS          set minimum component mass of bank to MASS
  --maximum-mass MASS          set maximum component mass of bank to MASS
  --number-of-template N       create N random templatess of bank to MASS
  --random-seed SEED           set random number seed for injections to SEED
                                 (urandom|integer)
  --write-compress             write a compressed xml file



=================================================
--- Help output for: lalapps_run_pulsar_crosscorr_v2
=================================================


=================================================
--- Help output for: lalapps_searchsum2cache
=================================================


=================================================
--- Help output for: lalapps_spec_avg
=================================================


=================================================
--- Help output for: lalapps_spec_avg_long
=================================================


=================================================
--- Help output for: lalapps_spec_coherence
=================================================


=================================================
--- Help output for: lalapps_spininj
=================================================


=================================================
--- Help output for: lalapps_splitSFTs
=================================================


=================================================
--- Help output for: lalapps_splitbank
=================================================


=================================================
--- Help output for: lalapps_ssbtodetector
=================================================


=================================================
--- Help output for: lalapps_string_apply_vetoes
=================================================
Usage: lalapps_string_apply_vetoes [options] [filename ...]

lalapps_string_apply_vetoes constructs or clears and then populates the
string_vetoed_sngl table providing a list of the sngl_burst event_ids of
vetoed triggers.  This table is used by other post-processing tools like
lalapps_string_meas_likelihood to determine which triggers have been vetoed
and which haven't.

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -t path, --tmp-space=path
                        Path to a directory suitable for use as a work area
                        while manipulating the database file.  The database
                        file will be worked on in this directory, and then
                        moved to the final location when complete.  This
                        option is intended to improve performance when running
                        in a networked environment, where there might be a
                        local disk with higher bandwidth than is available to
                        the filesystem on which the final output will reside.
  -n name, --vetoes-name=name
                        Set the name of the segment lists to use as vetoes
                        (default = "vetoes").
  -v, --verbose         Be verbose.


=================================================
--- Help output for: lalapps_string_calc_likelihood
=================================================
Usage: lalapps_string_calc_likelihood [options]

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -c filename, --input-cache=filename
                        Also process the files named in this LAL cache.  See
                        lalapps_path2cache for information on how to produce a
                        LAL cache file.
  -l filename, --likelihood-file=filename
                        Set the name of the likelihood ratio data file to use.
                        Can be given more than once.
  --likelihood-cache=filename
                        Also load the likelihood ratio data files listsed in
                        this LAL cache.  See lalapps_path2cache for
                        information on how to produce a LAL cache file.
  -t path, --tmp-space=path
                        Path to a directory suitable for use as a work area
                        while manipulating the database file.  The database
                        file will be worked on in this directory, and then
                        moved to the final location when complete.  This
                        option is intended to improve performance when running
                        in a networked environment, where there might be a
                        local disk with higher bandwidth than is available to
                        the filesystem on which the final output will reside.
  --vetoes-name=name    Set the name of the segment lists to use as vetoes
                        (default = do not apply vetoes).
  -v, --verbose         Be verbose.


=================================================
--- Help output for: lalapps_string_contour_plotter
=================================================
Usage: lalapps_string_contour_plotter [options]

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -v, --verbose         Be verbose.
  -t LIVETIME, --live-time=LIVETIME
                        The total amount of live time in the run


=================================================
--- Help output for: lalapps_string_contour_plotter_largeloops
=================================================
Usage: lalapps_string_contour_plotter_largeloops [options]

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -v, --verbose         Be verbose.
  -t LIVETIME, --live-time=LIVETIME
                        The total amount of live time in the run


=================================================
--- Help output for: lalapps_string_cs_gamma
=================================================
Usage: lalapps_string_cs_gamma [options]

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -a FREQUENCY, --frequency=FREQUENCY
                        Lowest frequency.
  -b GMUSTART, --Gmustart=GMUSTART
                        Lowest Gmu.
  -c GMUEND, --Gmuend=GMUEND
                        Largest Gmu.
  -d NGMU, --nGmu=NGMU  Nubmer of Gmu bins to do.
  -e EPSILONSTART, --epsilonstart=EPSILONSTART
                        Lowest epsilon
  -f EPSILONEND, --epsilonend=EPSILONEND
                        Largest epsilon.
  -g NEPSILON, --nepsilon=NEPSILON
                        Number of epsilon bins to do
  -i INDEX, --index=INDEX
                        Index for alpha as function of Gmu
  -m EFFICIENCY_FILE, --efficiency-file=EFFICIENCY_FILE
                        File with efficiency values and errors.


=================================================
--- Help output for: lalapps_string_cs_gamma_largeloops
=================================================
Usage: lalapps_string_cs_gamma_largeloops [options]

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -a FREQUENCY, --frequency=FREQUENCY
                        Lowest frequency.
  -b GMUSTART, --Gmustart=GMUSTART
                        Lowest Gmu.
  -c GMUEND, --Gmuend=GMUEND
                        Largest Gmu.
  -d NGMU, --nGmu=NGMU  Number of Gmu bins to do.
  -e PSTART, --pstart=PSTART
                        Lowest p.
  -f PEND, --pend=PEND  Largest p.
  -g NP, --np=NP        Number of p bins to do.
  -m Siemens06|Blanco-Pillado14|Ringeval07, --model=Siemens06|Blanco-Pillado14|Ringeval07
                        Model of loop distribution. There are three models
                        that can be taken in this code, the 'Siemens06' model,
                        the 'Blanco-Pillado14' model, and the 'Ringeval07'
                        model. See arXiv:1712.01168 for details on each model.
  -n EFFICIENCY_FILE, --efficiency-file=EFFICIENCY_FILE
                        File with efficiency values and errors.


=================================================
--- Help output for: lalapps_string_final
=================================================
Usage: lalapps_string_final [options] [file ...]

lalapps_string_final performs the final, summary, stages of the upper-limit
string cusp search.  Input consists of a list of all sqlite format database
files produced by all injection and non-injection runs of the analysis
pipeline.  The file names can be given on the command line and/or provided in
a LAL cache file.

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  --cal-uncertainty=fraction
                        Set the fractional uncertainty in amplitude due to
                        calibration uncertainty (eg. 0.08).  This option is
                        required, use 0 to disable calibration uncertainty.
  --injections-bin-size=bins
                        Set bin width for injection efficiency curves (default
                        = 16.7).
  -c filename, --input-cache=filename
                        Also process the files named in this LAL cache.  See
                        lalapps_path2cache for information on how to produce a
                        LAL cache file.  This option can be given multiple
                        times.
  --import-dump=filename
                        Import additional rate vs. threshold or efficiency
                        data from this dump file.  Dump files are one of the
                        data products produced by this program.  Whether the
                        file provides rate vs. threshold data or efficiency
                        data will be determined automatically.  This option
                        can be given multiple times
  --image-formats=ext[,ext,...]
                        Set list of graphics formats to produce by providing a
                        comma-delimited list of the filename extensions
                        (default = "png,pdf").
  -p program, --live-time-program=program
                        Set the name, as it appears in the process table, of
                        the program whose search summary entries define the
                        search live time (default = StringSearch).
  -o, --open-box        Perform open-box analysis.  In a closed-box analysis
                        (the default), information about the events seen at
                        zero-lag is concealed:  the rate vs. threshold plot
                        only shows the rate of events seen in the background,
                        the detection threshold used to measure the efficiency
                        curves is obtained from n-th loudest background event
                        where n is (the integer closest to) the ratio of
                        background livetime to zero-lag livetime, and messages
                        to stdout and stderr that contain information about
                        event counts at zero-lag are silenced.
  -t path, --tmp-space=path
                        Path to a directory suitable for use as a work area
                        while manipulating the database file.  The database
                        file will be worked on in this directory, and then
                        moved to the final location when complete.  This
                        option is intended to improve performance when running
                        in a networked environment, where there might be a
                        local disk with higher bandwidth than is available to
                        the filesystem on which the final output will reside.
  --vetoes-name=name    Set the name of the segment lists to use as vetoes
                        (default = do not apply vetoes).
  --detection-threshold=log likelihood ratio
                        Override the detection threshold.  Only injection
                        files will be processed, and the efficiency curve
                        measured.
  --record-background=N
                        Set the number of background log likelihood ratios to
                        hold in memory for producing the rate vs. threshold
                        plot (default = 10000000).
  --record-candidates=N
                        Set the number of highest-ranked zero-lag candidates
                        to dump to the candidate file (default = 100).
  --threads=N           Set the maximum number of parallel threads to use for
                        processing files (default = 1).  Contention for the
                        global Python interpreter lock will throttle the true
                        number that can run.  The number of threads will be
                        automatically adjusted downwards if the number
                        requested exceeds the number of input files.
  -v, --verbose         Be verbose.


=================================================
--- Help output for: lalapps_string_meas_likelihood
=================================================
Usage: lalapps_string_meas_likelihood [options] [filename ...]

lalapps_string_meas_likelihood analyzes a collection of sqlite3 database files
containing lalburst_coinc outputs of string-cusp coincidence events, and
measures probability distributions for a variety of parameters computed from
those coincidences.  The distributions are written to a likelihood data file
in XML format, which can later be used by to assign likelihoods to the
coincidences.  The files to be processed can be named on the command line
and/or provided by a LAL cache file.

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -o filename, --output=filename
                        Set the name of the likelihood data file to write
                        (default = stdout).
  -c filename, --input-cache=filename
                        Also process the files named in this LAL cache.  See
                        lalapps_path2cache for information on how to produce a
                        LAL cache file.
  -t path, --tmp-space=path
                        Path to a directory suitable for use as a work area
                        while manipulating the database file.  The database
                        file will be worked on in this directory, and then
                        moved to the final location when complete.  This
                        option is intended to improve performance when running
                        in a networked environment, where there might be a
                        local disk with higher bandwidth than is available to
                        the filesystem on which the final output will reside.
  --T010150=description
                        Write the output to a file whose name is compatible
                        with the file name format described in
                        LIGO-T010150-00-E, "Naming Convention for Frame Files
                        which are to be Processed by LDAS".  The description
                        string will be used to form the second field in the
                        file name.
  --injection-reweight=off|astrophysical
                        Set the weight function to be applied to the
                        injections (default = "off").  When "off", the
                        injections are all given equal weight and so the
                        injection population is whatever was injected.  When
                        set to "astrophysical", the injections are reweighted
                        to simulate an amplitude^{-4} distribution.
  --injection-reweight-cutoff=amplitude
                        When using the astrophysical injection reweighting, do
                        not allow the weight assigned to arbitrarily low-
                        amplitude injections to grow without bound, instead
                        clip the weight assigned to injections to the weight
                        given to injections with this amplitude (default =
                        1e-20, 0 = disabled).  This option is ignored when
                        astrophysical reweighting is not being performed.
  --vetoes-name=name    Set the name of the segment lists to use as vetoes
                        (default = do not apply vetoes).
  -v, --verbose         Be verbose.


=================================================
--- Help output for: lalapps_string_plot_binj
=================================================
Usage: lalapps_string_plot_binj [options]

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -b base, --base=base  Set the prefix for output filenames (default =
                        "string_plotbinj_").
  -f format, --format=format
                        Set the output image format (default = "png").  Option
                        can be given multiple times to generate plots in
                        multiple formats.
  --amplitude-func=det|wave
                        Select the amplitude to show on the plots.  "det" =
                        the amplitude expected in the detector, "wave" = the
                        amplitude of the wave (default = "det").
  --input-cache=filename
                        Get list of files from this LAL cache.
  -l program, --live-time-program=program
                        Set the name of the program, as it appears in the
                        process table, whose search summary entries define the
                        search live time (default = "StringSearch").
  --plot=number         Generate the given plot number (default = make all
                        plots).
  -t path, --tmp-space=path
                        Path to a directory suitable for use as a work area
                        while manipulating the database file.  The database
                        file will be worked on in this directory, and then
                        moved to the final location when complete.  This
                        option is intended to improve performance when running
                        in a networked environment, where there might be a
                        local disk with higher bandwidth than is available to
                        the filesystem on which the final output will reside.
  -v, --verbose         Be verbose.


=================================================
--- Help output for: lalapps_string_plot_likelihood
=================================================
Usage: lalapps_string_plot_likelihood [options]

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -f extension, --format=extension
                        Set the image output format by setting the filename
                        extension (default = "png").  Can be given multiple
                        times to generate plots in multiple formats.
  --no-filter           Do not apply smoothing/normalization filters to data,
                        plot raw bin values.
  -v, --verbose         Be verbose.


=================================================
--- Help output for: lalapps_synthesizeBstatMC
=================================================


=================================================
--- Help output for: lalapps_synthesizeLVStats
=================================================


=================================================
--- Help output for: lalapps_synthesizeTransientStats
=================================================


=================================================
--- Help output for: lalapps_tconvert
=================================================


=================================================
--- Help output for: lalapps_tmpltbank
=================================================
  --help                       display this message
  --verbose                    print progress information
  --version                    print version information and exit
  --user-tag STRING            set the process_params usertag to STRING
  --ifo-tag STRING             set the ifotag to STRING - for file naming
  --comment STRING             set the process table comment to STRING
  --write-compress             write a compressed xml file

  NOTE: Data-related options not required when using a simulated PSD are labelled @

  --gps-start-time SEC         GPS second of data start time
  --gps-end-time SEC           GPS second of data end time
@ --pad-data T                 pad the data start and end time by T seconds

@ --glob-frame-data            glob *.gwf files in the pwd to obtain frame data
@ --frame-type TAG             input data is contained in frames of type TAG
@ --frame-cache                obtain frame data from LAL frame cache FILE
@ --calibration-cache FILE     obtain calibration from LAL frame cache FILE
@ --glob-calibration-data      obtain calibration by globbing in working dir

@ --channel-name CHAN          read data from interferometer channel CHAN
@ --calibrated-data TYPE       calibrated data of TYPE real_4 or real_8
@ --strain-high-pass-freq F    high pass REAL8 h(t) data above F Hz
@ --strain-high-pass-order O   set the order of the h(t) high pass filter to O
@ --strain-high-pass-atten A   set the attenuation of the high pass filter to A
@ --point-calibration          use the first point in the chunk to calibrate

  --sample-rate F              filter data at F Hz, downsampling if necessary
@ --resample-filter TYPE       set resample filter to TYPE [ldas|butterworth]

  --disable-high-pass          turn off the IIR highpass filter
@ --enable-high-pass F         high pass data above F Hz using an IIR filter
@ --high-pass-order O          set the order of the high pass filter to O
@ --high-pass-attenuation A    set the attenuation of the high pass filter to A
  --spectrum-type TYPE         use PSD estimator TYPE 
                               (mean|median|iLIGOSRD|eLIGOModel|GEOModel|
                               |aLIGONoSRMLoP|aLIGONoSRMHiP|aLIGOZDLoP|aLIGOZDHiP|
                               |iVirgoModel|aVirgoModel|KAGRAModel)
  --dynamic-range-exponent X   set dynamic range scaling to 2^X (eg X=69.0)

  --segment-length N           set data segment length to N points
@ --number-of-segments N       set number of data segments to N

  --td-follow-up FILE          follow up BCV events contained in FILE

  --standard-candle            compute a standard candle from the PSD
  --candle-snr SNR             signal-to-noise ratio of standard candle
  --candle-minmass M           minimum component mass for (equal-mass) candle binary
  --candle-maxmass M           maximum component mass for candle binary, default=50

  --low-frequency-cutoff F     do not filter below F Hz
  --high-frequency-cutoff F    upper frequency cutoff in Hz
  --disable-compute-moments    do not recompute the moments stored in the template bank. 

  --minimum-mass MASS          set minimum component mass of bank to MASS: required
  --maximum-mass MASS          set maximum component mass of bank to MASS
  --max-total-mass MASS        set maximum total mass of the bank to MASS. Will override --maximum-mass option
  --min-total-mass MASS        set minimum total mass of the bank to MASS: --max-total-mass must also be given
  --chirp-mass-cutoff MASS     set chirp mass cutoff to MASS
  --max-eta ETA                set maximum symmetric mass ratio of the bank to ETA
  --min-eta ETA                set minimum symmetric mass ratio of the bank to ETA

  --minimum-psi0 PSI0          set minimum range of BCV parameter psi0 to PSI0
  --maximum-psi0 PSI0          set maximum range of BCV parameter psi0 to PSI0
  --minimum-psi3 PSI3          set minimum range of BCV parameter psi3 to PSI3
  --maximum-psi3 PSI3          set maximum range of BCV parameter psi3 to PSI3
  --maximum-fcut-tmplts N      maximum number of tmplts in fcut direction is N
  --disable-polygon-fit        disable the polygon fitting for BCV bank
  --alpha ALPHA                set alpha for the BCV bank generation
  --minimum-beta BETA          set minimum BCV spin parameter beta to BETA
  --maximum-beta BETA          set maximum BCV spin parameter beta to BETA

  --minimum-spin1 SPIN1_MIN    set minimum value of chi for PTF to SPIN1_MIN (0.0)
  --maximum-spin1 SPIN1_MAX    set maximum value of chi for PTF to SPIN1_MAX (1.0)
  --minimum-kappa1 KAPPA1_MIN  set minimum value of kappa for PTF to KAPPA1_MIN (-1.0)
  --maximum-kappa1 KAPPA1_MAX  set maximum value of kappa for PTF to KAPPA1_MAX (1.0)
  --npoints-chi N-CHI          set number of points in the Chi direction for PTF template bank to N-CHI (3)
  --npoints-kappa N-KAPPA      set number of points in the Kappa direction for PTF template bank to N-KAPPA (5)

  --minimal-match M            generate bank with minimal match M

  --order ORDER                set post-Newtonian order of the waveform to ORDER
                                 (newtonian|oneHalfPN|onePN|onePointFivePN|
                                 twoPN|twoPointFive|threePN|threePointFivePN)
  --approximant APPROX         set approximant of the waveform to APPROX
                                 (TaylorT1|TaylorT2|TaylorT3|TaylorF1|TaylorF2|
                                 PadeT1|PadeT2|EOB|EOBNR|BCV|SpinTaylorT3|BCVSpin)
  --num-freq-cutoffs Ncut       create a template bank with Ncut different upper 
                                 frequency cutoffs (must be a positive integer) 
  --max-high-freq-cutoff MAX    formula to compute the largest high freq. cutoff
                                 possible choices in ascending order: (SchwarzISCO|BKLISCO|LightRing|FRD|ERD|LRD)
  --min-high-freq-cutoff MIN    formula to compute the smallest high freq. cutoff
                                 possible choices in ascending order: (SchwarzISCO|BKLISCO|LightRing|FRD|ERD|LRD)
  --space SPACE                grid up template bank with mass parameters SPACE
                                 (Tau0Tau2|Tau0Tau3|Psi0Psi3)
  --grid-spacing GRIDSPACING   grid up template bank with GRIDSPACING
                                 (Hexagonal|SquareNotOriented)

  --write-response             write the computed response function to a frame
  --write-spectrum             write the uncalibrated psd to a frame
  --write-strain-spectrum      write the calibrated strain psd to a text file


=================================================
--- Help output for: lalapps_version
=================================================


=================================================
--- Help output for: lalapps_xtefitstoframe
=================================================

NAME
       lalapps_xtefitstoframe

SYNOPSIS
       lalapps_xtefitstoframe --help
           Display this help page.

       lalapps_xtefitstoframe -h
           Display a short usage string of available options.

       lalapps_xtefitstoframe -v|--version[=verbose]
           Display (verbose) version information.

       lalapps_xtefitstoframe [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

OPTIONS
       -i, --inputfile=<string> [required]
           The input FITS file name

       -o, --outputdir=<string> [required]
           The output frame file directory name

       -t, --deltat=<8-byte real> [default: 0.000244140625]
           The output sampling time (in seconds)

       -b, --bary[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Output barycentered data



=================================================
--- Help output for: lalburst_cluster
=================================================
Usage: lalburst_cluster [options] [file ...]

Run a single-instrument burst clustering algorithm on the sngl_burst events
contained in LIGO Light Weight XML files.  Files can be listed on the command
line and/or in one or more LAL cache files.  If no files are named, then input
is read from stdin and written to stdout.

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  --comment=text        Set the comment string to be recorded in the process
                        table (default = None).
  -c [excesspower], --cluster-algorithm=[excesspower]
                        Set clustering method (required).
  -i filename, --input-cache=filename
                        Process the files listed in this LAL cache.
  -p name, --program=name
                        Set the name of the program that generated the events
                        as it appears in the process table (default =
                        "lalapps_power").
  -v, --verbose         Be verbose.


=================================================
--- Help output for: lalburst_coinc
=================================================
Usage: lalburst_coinc [options] [file ...]

lalburst_coinc implements the excess power and string cusp coincidence
algorithms for use in performing trigger-based multi-instrument searches for
gravitational wave events.  The LIGO Light Weight XML files listed on the
command line are processed one by one in order, and over-written with the
results.  If no files are named, then input is read from stdin and output
written to stdout.  Gzipped files will be autodetected on input, if a file's
name ends in ".gz" it will be gzip-compressed on output.

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -c text, --comment=text
                        Set comment string in process table (default = None).
  -f, --force           Process document even if it has already been
                        processed.
  -a [excesspower|stringcusp], --coincidence-algorithm=[excesspower|stringcusp]
                        Select the coincidence test algorithm to use
                        (required).
  -s start:end[,start:end,...], --coincidence-segments=start:end[,start:end,...]
                        Set the GPS segments in which to retain coincidences.
                        Multiple segments can be specified by separating them
                        with commas.  If either start or end is absent from a
                        segment then the interval is unbounded on that side,
                        for example "874000000:" causes all coincidences
                        starting at 874000000 to be retained.  The "time" of a
                        coincidence is ambiguous, and is different for
                        different search algorithms, but a deterministic
                        algorithm is used in all cases so the same coincidence
                        of events will always be assigned the same time.  This
                        feature is intended to allow large input files to be
                        analyzed;  the procedure is to make n copies of the
                        file and run n instances of burca specifying disjoint
                        --coincidence-segments for each.
  -m N, --min-instruments=N
                        Set the minimum number of instruments required to form
                        a coincidence (default = 2).
  -t threshold, --threshold=threshold
                        Set the coincidence algorithm's threshold.  For
                        excesspower this parameter is not used and must not be
                        set.  For stringcusp, this parameter sets the maximum
                        peak time difference in seconds not including light
                        travel time (which will be added internally).
  -v, --verbose         Be verbose.


=================================================
--- Help output for: lalburst_cut
=================================================
Usage: lalburst_cut [options] [file ...]

Removes sngl_burst events from XML files according to a variety of criteria.
Files named on the command line are read one-by-one, and over-written with the
new files.  If no files are named on the command line, input is read from
stdin and written to stdout.  Note that, for the most part, this program does
not understand coincidence information, and so if an injection or burst event
is removed that participates in a coincidence, this program simply deletes the
entire coincidence as well (before applying the --coinc-only cut).

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  --coinc-only          Discard events that are not participating in a
                        coincident event.
  --comment=text        Set the comment string to be recorded in the process
                        table for this job (default = None).
  --inj-made-only       Discard injections outside the search summary out
                        segments.
  --min-amplitude=value
                        Discard events below the given amplitude.
  --max-amplitude=value
                        Discard events above the given amplitude.
  --min-bandwidth=Hz    Discard events narrower than the given bandwidth.
  --max-bandwidth=Hz    Discard events wider than the given bandwidth.
  --min-central-freq=Hz
                        Discard events with central frequency lower than that
                        given.
  --max-central-freq=Hz
                        Discard events with central frequency higher than that
                        given.
  --min-confidence=value
                        Discard events below the given confidence.
  --max-confidence=value
                        Discard events above the given confidence.
  --min-duration=seconds
                        Discard events shorter than the given duration.
  --max-duration=seconds
                        Discard events longer than the given duration.
  --min-fhigh=Hz        Discard events with highest frequency below the given
                        frequency.
  --max-fhigh=Hz        Discard events with highest frequency above the given
                        frequency.
  --min-flow=Hz         Discard events with lowest frequency below the given
                        frequency.
  --max-flow=Hz         Discard events with loest frequency above the given
                        frequency.
  --min-hrss=value      Discard events with h_rss below the given value.
  --max-hrss=value      Discard events with h_rss above the given value.
  --cut-instrument=name
                        Discard events from given instrument.
  --min-peak-time=seconds
                        Discard events with peak time before the given GPS
                        time.
  --max-peak-time=seconds
                        Discard events with peak time after the given GPS
                        time.
  --min-start-time=seconds
                        Discard events starting before the given GPS time.
  --max-start-time=seconds
                        Discard events starting after the given GPS time.
  --min-stop-time=seconds
                        Discard events ending before the given GPS time.
  --max-stop-time=seconds
                        Discard events ending after the given GPS time.
  --min-snr=value       Discard events below the given SNR.
  --max-snr=value       Discard events above the given SNR.
  --program=name        Process events generated by the given program.
  --veto-file=filename  Veto events using the veto segment list extracted from
                        this XML file.  The file must contain segment tables,
                        and the veto list will be constructed from the
                        segments named "sngl_burst_veto".
  -v, --verbose         Be verbose.


=================================================
--- Help output for: lalburst_gen_timeslides
=================================================
Usage: lalburst_gen_timeslides [options] [filename ...]

lalburst_gen_timeslides constructs time_slide tables, writing the result to
one or more files.  The time slide table to be constructed is described by
specifying one or more ranges of offsets for each instrument.  If more than
one instrument and set of offsets is given, then the time slide table will
contain entries corresponding to all combinations of offsets, one each from
the different instuments.  If no file names are given on the command line,
output is written to stdout.  If more than one file name is given on the
command line, then the time slides are distributed uniformly between files
with each file being given a disjoint subset of the time slides.  Output files
whose names end in ".gz" will be gzip compressed.  Example:
lalburst_gen_timeslides --verbose --instrument H1=-100:+100:10 --instrument
L1=-100:+100:+10 time_slides.xml.gz

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -a filename, --add-to=filename
                        Add the time slides from this file to the newly-
                        generated time slides.  If the name ends in ".gz" it
                        will be gzip-decompressed on input.
  --comment=text        Set comment string in process table (default = None).
  -v, --verbose         Be verbose.
  -i name=first:last:step[,first:last:step[,...]], --instrument=name=first:last:step[,first:last:step[,...]]
                        Provide a description of the set of offsets to use for
                        a particular instrument.  The set of offsets is (first
                        + n * step) where n is an integer such that first <=
                        offset <= last.  More than one set of offsets can be
                        given for the same instrument, in which case the union
                        is used.  As a short-hand, the sets can be combined
                        into a single command line argument by separating the
                        first:last:step triples with commas.
  --inspiral-num-slides=count:instrument=offset[,instrument=offset...]
                        Generate a set of inspiral group style time slides.
                        The collection of instrument/offset pairs defines an
                        offset vector, and the time slides produced are
                        integer multiples of that vector n * {offsets} where n
                        is a non-zero integer in [-count, +count] (so if
                        count=50, you get 101 time slides).  If this option is
                        given more than once, then multiple sets of inspiral-
                        style time slides are generated.
  -n name=offset, --normalize=name=offset
                        Normalize the time slides so that this instrument has
                        the specified offset in all.  The other offsets in
                        each time slide are adjusted so that the relative
                        offsets are preserved.  Time slides that do not
                        involve this instrument are unaffected.  If this
                        option is given multiple times, then for each time
                        slide they are considered in alphabetical order by
                        instrument until the first is found that affects the
                        offsets of that time slide.
  --remove-zero-lag     Remove the time slide with offsets of 0 for all
                        instruments.


=================================================
--- Help output for: lalburst_inj_pic
=================================================
Usage: lalburst_inj_pic [options] filename

Convert an image into a LIGO Light-Weight XML file containing a list of sine-
Gaussian burst injections.  When injected into data, the injections will cause
a waterfall plot to display the image.

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -l Hz, --f-low=Hz     Set the low-frequency limit of the tiling in Hertz
                        (default = 64).
  -d Hz, --delta-f=Hz   Set the bandwidth of the pixels in Hertz (default =
                        16).  Must be > 0.  The product of --delta-f and
                        --delta-t must be at least 2/pi.
  -t s, --delta-t=s     Set the duration of the pixels in seconds (default =
                        1/16).  Must be > 0.  The product of --delta-f and
                        --delta-t must be at least 2/pi.
  -f fraction, --overlap-fraction=fraction
                        Set the fraction by which adjacent tiles overlap
                        (default = 0.25).  The pixels centres are spaced (1 -
                        --overlap-fraction) * --delta-f apart in the frequency
                        domain.  The value must be in the range [0, 1).
  -H pixels, --height=pixels
                        Set the number of pixles in the frequency domain
                        (default = 64).  The image will be scaled to this
                        vertical size, and the number of pixels in the time
                        domain (horizontal size) will be fixed by the image
                        aspect ratio.
  -o filename, --output=filename
                        Set the name of the output file (default = stdout).
  -s seconds, --gps-start-time=seconds
                        Set the start time of the tiling in GPS seconds
                        (required).
  --sample-rate=Hz      Set the sample rate in Hertz of the data into which
                        the injections will be placed (default = 16384).  This
                        information is required in order to normalize each
                        pixel accurately.  If the wrong value is used, the
                        result will be the addition of noise to the image.
                        The highest frequency pixel must have a centre
                        frequency < 1/2 this frequency.
  -n hrss, --hrss-scale=hrss
                        Set the single-pixel hrss (root-sum-square strain)
                        corresponding to "white" (default = 1e-20).
  -v, --verbose         Be verbose.
  -T filename, --time-slide-xml=filename
                        Associate injections with the first time slide ID in
                        this XML file (required).


=================================================
--- Help output for: lalburst_injfind
=================================================
Usage: lalburst_injfind [options] [file ...]

Accepts as input one or more LIGO Light Weight XML files, each containing
burst candidates and a list of injections, and adds entries to the coincidence
tables indicating which burst events match which injections.

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -f, --force           Process even if file has already been processed.
  --comment=text        Set the comment string to be written to the process
                        table (default = None).
  -c [stringcusp|excesspower|omega|waveburst], --match-algorithm=[stringcusp|excesspower|omega|waveburst]
                        Set the algorithm used to match burst candidates with
                        injections (required).
  -v, --verbose         Be verbose.


=================================================
--- Help output for: lalburst_plot_tisi
=================================================
Usage: lalburst_plot_tisi [options]

Plot projections of the time slides contained in the input files onto a two-
instrument cross section of the delay space.  One plot is generated for each
input file.

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -o filename, --output=filename
                        Set output file name (required).  If the string "%n"
                        occurs in the filename, it will be replaced with the
                        plot number starting from 0.  If the output filename
                        does not contain a "%n" in it and more than one plot
                        is generated then the plots will over-write one
                        another.
  -x instrument, --x-instrument=instrument
                        Plot this instrument's offsets along the x axis
                        (required).
  -y instrument, --y-instrument=instrument
                        Plot this instrument's offsets along the y axis
                        (required).
  -n instrument[,instrument...], --require-instruments=instrument[,instrument...]
                        Plot only time slides involving exactly these
                        instruments.
  -v, --verbose         Be verbose.


=================================================
--- Help output for: lalburst_power_calc_likelihood
=================================================
Usage: lalburst_power_calc_likelihood [options] [file ...]

lalburst_power_calc_likelihood uses likelihood ratio data stored in LIGO
Light-Weight XML files to compute likelihood ratio values for excess power
coincs in SQLite databases.

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -c text, --comment=text
                        Set comment string in process table (default = None).
  -p name, --program=name
                        Set the name of the program that generated the events
                        as it appears in the process table (required).  The
                        program name is used to extract live time information
                        from the search summary tables in the input files.
  --likelihood-data=filename
                        Read likelihood data from this XML file.  (use
                        lalburst_power_meas_likelihood to generate these
                        files)
  --likelihood-data-cache=filename
                        Read likelihood data from the XML files described by
                        this LAL cache.  For each trigger file, the live time
                        of the trigger file is established and all likelihood
                        data files whose segments intersect the trigger file's
                        live time are loaded and merged into a single
                        distribution data set.  (use
                        lalburst_power_meas_likelihood to generate these
                        files)
  --tmp-space=path      Path to a directory suitable for use as a work area
                        while manipulating the database file.  The database
                        file will be worked on in this directory, and then
                        moved to the final location when complete.  This
                        option is intended to improve performance when running
                        in a networked environment, where there might be a
                        local disk with higher bandwidth than is available to
                        the filesystem on which the final output will reside.
  -v, --verbose         Be verbose.


=================================================
--- Help output for: lalburst_power_final
=================================================
Usage: lalburst_power_final [options] -i|--injections-glob pattern -b|--background-glob pattern

lalburst_power_final performs the final, summary, stages of an upper-limit
excess power search for burst-like gravitational waves.

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -b pattern, --background-glob=pattern
                        Shell filename pattern for non-injection files
                        (required).
  -i pattern, --injections-glob=pattern
                        Shell filename pattern for injection files (required).
  -l program, --live-time-program=program
                        Set the name, as it appears in the process table, of
                        the program whose search summary "out" segments define
                        the search live time (default = "lalapps_power")
  --open-box            Open the box.  If this is not set, then instead of
                        setting a threshold based on the loudest zero-lag
                        coincidence, the threshold is set at the predicted
                        loudest-event amplitude as derived from the
                        background.
  --confidence-contour-slope=slope
                        Set the slope of the confidence-likelihood joint
                        threshold contours (default = -12.0).
  --dump-scatter-data   Instead of computing upper limit, dump data files for
                        confidence-likelihood scatter diagnostic scatter plot.
  --plot-scatter-data   Instead of computing upper limit, load data files for
                        confidence-likelihood scatter diagnostic scatter plot
                        and generate scatter plot.
  -t path, --tmp-space=path
                        Path to a directory suitable for use as a work area
                        while manipulating the database file.  The database
                        file will be worked on in this directory, and then
                        moved to the final location when complete.  This
                        option is intended to improve performance when running
                        in a networked environment, where there might be a
                        local disk with higher bandwidth than is available to
                        the filesystem on which the final output will reside.
  --upper-limit-confidence=percent
                        Set the confidence in percent of the upper limit to
                        derive (default = 90.0).
  --upper-limit-scale=E|hrss
                        Select the scale on which to measure the upper limit.
                        Allowed values are 'E' for an upper limit on rate of
                        bursts by energy, and 'hrss' for an upper limit on
                        rate of bursts by h_{rss}.  (default = 'E')
  --zero-lag-survivors=number
                        Set the final confidence-likelihood joint threshold so
                        that this many events survive at zero lag.  If n
                        survivors are requested, then the threshold is set at
                        exactly the amplitude of the n+1 loudest event, and
                        events are discarded if their amplitudes are <= the
                        threshold.  A "loudest-event" upper limit is obtained
                        by setting this to 0.  The default is 0.
  -v, --verbose         be verbose


=================================================
--- Help output for: lalburst_power_meas_likelihood
=================================================
Usage: lalburst_power_meas_likelihood [options] [filename ...]

lalburst_power_meas_likelihood analyzes a collection of SQLite3 database files
containing lalburst_coinc outputs, and measures probability distributions for
a variety of parameters computed from the coincidences therein.  The
distributions are written to a likelihood data file in XML format, which can
be used by lalburst_coinc for the excesspower2 algorithm in which a second
pass assigns likelihoods to each coincidence.  The command line arguments are
used to provide shell patterns for the files from which to obtain injection
and backgroun coincidences.  If file names are given on the command line
following the arguments, then likelihood data is loaded from those files and
added to the output.

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  --add-from=filename   Also add likelihood data from this XML file.
  --add-from-cache=filename
                        Also add likelihood data from all XML files listed in
                        this LAL cache.
  -o filename, --output=filename
                        Set the name of the likelihood control file to write
                        (default = stdout).
  -t path, --tmp-space=path
                        Path to a directory suitable for use as a work area
                        while manipulating the database file.  The database
                        file will be worked on in this directory, and then
                        moved to the final location when complete.  This
                        option is intended to improve performance when running
                        in a networked environment, where there might be a
                        local disk with higher bandwidth than is available to
                        the filesystem on which the final output will reside.
  --T010150=description
                        Write the output to a file whose name is compatible
                        with the file name format described in
                        LIGO-T010150-00-E, "Naming Convention for Frame Files
                        which are to be Processed by LDAS".  The description
                        string will be used to form the second field in the
                        file name.
  -p program, --live-time-program=program
                        Program from which to draw the livetime segments.
                        (Necessary in case of giving --T010150.
  -v, --verbose         Be verbose.


=================================================
--- Help output for: lalburst_power_plot_binj
=================================================
Usage: lalburst_power_plot_binj [options]

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  --made-only           Plot only injections that were made.
  -b base, --base=base  Set the prefix for output filenames (default =
                        "plotbinj_")
  -f format, --format=format
                        Set the output image format (default = "png")
  --amplitude-func=hrsswave|hrssdet|E
                        Select the amplitude to show on the plots.  "hrsswave"
                        = the h_rss of the wave, "hrssdet" = the h_rss in the
                        detector, "E" = the radiated energy over r^2.
  --input-cache=filename
                        Get list of trigger files from this LAL cache file.
  -l program, --live-time-program=program
                        Set the name, as it appears in the process table, of
                        the program whose search summary entries define the
                        search live time (default = "lalapps_power").
  --plot=number         Generate the given plot number (default = make all
                        plots).  Use "none" to disable plots.
  --coinc-plot=number   Generate the given coinc plot number (default = make
                        all coinc plots).  Use "none" to disable coinc plots.
  -t path, --tmp-space=path
                        Path to a directory suitable for use as a work area
                        while manipulating the database file.  The database
                        file will be worked on in this directory, and then
                        moved to the final location when complete.  This
                        option is intended to improve performance when running
                        in a networked environment, where there might be a
                        local disk with higher bandwidth than is available to
                        the filesystem on which the final output will reside.
  -v, --verbose         Be verbose.


=================================================
--- Help output for: lalburst_power_plot_binjtf
=================================================
Usage: lalburst_power_plot_binjtf [options]

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -b base, --base=base  set the prefix for output filenames (default =
                        plotbinj_)
  -f format, --format=format
                        set the output image format (default = png)
  -v, --verbose         be verbose


=================================================
--- Help output for: lalburst_version
=================================================


=================================================
--- Help output for: lalfr-cat
=================================================


=================================================
--- Help output for: lalfr-cksum
=================================================


=================================================
--- Help output for: lalfr-dump
=================================================


=================================================
--- Help output for: lalfr-fmt
=================================================


=================================================
--- Help output for: lalfr-paste
=================================================


=================================================
--- Help output for: lalfr-print
=================================================


=================================================
--- Help output for: lalfr-split
=================================================


=================================================
--- Help output for: lalfr-stat
=================================================


=================================================
--- Help output for: lalfr-stream
=================================================


=================================================
--- Help output for: lalfr-vis
=================================================


=================================================
--- Help output for: lalframe_version
=================================================


=================================================
--- Help output for: lalinference_bench
=================================================
lalinference_bench: Benchmark template and likelihood functions.
 Options:
    --Niter            : Number of calls to time (delfault 1000) 
    --bench-template   : Only benchmark template function
    --bench-likelihood : Only benchmark likelihood function
                         (defaults to benchmarking both)
 Example (for 1.0-1.0 binary with seglen 8, srate 4096): 
 $ ./lalinference_bench --psdlength 1000 --psdstart 1 --seglen 8 --srate 4096 --trigtime 0 --ifo H1 --H1-channel LALSimAdLIGO --H1-cache LALSimAdLIGO --dataseed 1324 --Niter 10000 --fix-chirpmass 1.218 --fix-q 1.0


    ----------------------------------------------
    --- Injection Arguments ----------------------
    ----------------------------------------------
    (--inj injections.xml) Injection XML file to use
    (--event N)            Event number from Injection XML file to use

    ----------------------------------------------
    --- Template Arguments -----------------------
    ----------------------------------------------
    (--use-eta)            Jump in symmetric mass ratio eta, instead of q=m1/m2 (m1>m2)
    (--approx)             Specify a template approximant and phase order to use
                         (default TaylorF2threePointFivePN). Available approximants:
                         default modeldomain="time": GeneratePPN, TaylorT1, TaylorT2,
                                                       TaylorT3, TaylorT4, EOB, EOBNR,
                                                       EOBNRv2, EOBNRv2HM, SEOBNRv1,
                                                       SpinTaylor, SpinQuadTaylor, 
                                                       SpinTaylorFrameless, SpinTaylorT4,
                                                       PhenSpinTaylorRD, NumRel.
                         default modeldomain="frequency": TaylorF1, TaylorF2, TaylorF2RedSpin,
                                                       TaylorF2RedSpinTidal, IMRPhenomA,
                                                       IMRPhenomB, IMRPhenomP, IMRPhenomPv2.
    (--amporder PNorder)            Specify a PN order in amplitude to use (defaults: LALSimulation: max available; LALInspiral: newtownian).
    (--fref f_ref)                  Specify a reference frequency at which parameters are defined (default 100).
    (--tidal)                   Enables tidal corrections, only with LALSimulation.
    (--tidalT)                  Enables reparmeterized tidal corrections, only with LALSimulation.
    (--4PolyEOS)                Enables 4-piece polytropic EOS parmeterization, only with LALSimulation.
    (--4SpectralDecomp)         Enables 4-coeff. spectral decomposition EOS parmeterization, only with LALSimulation.
    (--eos   EOS)               Fix the neutron star EOS. Use "--eos help" for allowed names
    (--BinaryLove)              Enable the Binary Neutron Star common EoS tidal model, expressed through EOS-insensitive relations
    (--spinOrder PNorder)           Specify twice the PN order (e.g. 5 <==> 2.5PN) of spin effects to use, only for LALSimulation (default: -1 <==> Use all spin effects).
    (--tidalOrder PNorder)          Specify twice the PN order (e.g. 10 <==> 5PN) of tidal effects to use, only for LALSimulation (default: -1 <==> Use all tidal effects).
    (--numreldata FileName)         Location of NR data file for NR waveforms (with NR_hdf5 approx).
    (--modeldomain)                 domain the waveform template will be computed in ("time" or "frequency"). If not given will use LALSim to decide
    (--spinAligned or --aligned-spin)  template will assume spins aligned with the orbital angular momentum.
    (--singleSpin)                  template will assume only the spin of the most massive binary component exists.
    (--noSpin, --disable-spin)      template will assume no spins (giving this will void spinOrder!=0) 
    (--no-detector-frame)              model will NOT use detector-centred coordinates and instead RA,dec
    (--nonGR_alpha value) this is a LIV parameter which should only be passed when log10lambda_eff/lambda_eff is passed as a grtest-parameter for LIV test
    (--LIV_A_sign) this is a LIV parameter determining if +A or -A is being tested; A occurs in the modified dispersion relation. LIV_A_sign has to be either +1 or -1 
    (--liv) this flag is now needed for launching a LIV run
    (--grtest-parameters dchi0,..,dxi1,..,dalpha1,..) template will assume deformations in the corresponding phase coefficients.
    (--generic-fd-correction) enables the generic frequency domain corrections to the template phase. 
    (--generic-fd-correction-hm) apply generic frequency domain corrections to higher-modes waveform. 
    (--generic-fd-correction-window) sets the fraction of the peak frequency up to which the generic phase corrections are applied (default=1). 
    (--generic-fd-correction-ncycles) sets the number of  cycles for the tapering of the generic phase corrections (default=1). 
    (--ppe-parameters aPPE1,....     template will assume the presence of an arbitrary number of PPE parameters. They must be paired correctly.
    (--modeList lm,l-m...,lm,l-m)           List of modes to be used by the model. The chosen modes ('lm') should be passed as a ',' seperated list.
    (--phenomXHMMband float)     Threshold parameter for the Multibanding of the non-precessing hlm modes in IMRPhenomXHM and IMRPhenomXPHM. If set to 0 then do not use multibanding.
                                 Options and default values can be found in https://lscsoft.docs.ligo.org/lalsuite/lalsimulation/group___l_a_l_sim_i_m_r_phenom_x__c.html
    (--phenomXPHMMband float)    Threshold parameter for the Multibanding of the Euler angles in IMRPhenomXPHM. If set to 0 then do not use multibanding.
                                 Options and default values can be found in https://lscsoft.docs.ligo.org/lalsuite/lalsimulation/group___l_a_l_sim_i_m_r_phenom_x__c.html
    (--phenomXPFinalSpinMod int) Change version for the final spin model used in IMRPhenomXP/IMRPhenomXPHM.
                                 Options and default values can be found in https://lscsoft.docs.ligo.org/lalsuite/lalsimulation/group___l_a_l_sim_i_m_r_phenom_x__c.html
    (--phenomXPrecVersion int)   Change version of the Euler angles for the twisting-up of IMRPhenomXP/IMRPhenomXPHM.
                                 Options and default values can be found in https://lscsoft.docs.ligo.org/lalsuite/lalsimulation/group___l_a_l_sim_i_m_r_phenom_x__c.html

    ----------------------------------------------
    --- Starting Parameters ----------------------
    ----------------------------------------------
    You can generally have MCMC chains to start from a given parameter value by using --parname VALUE. Names currently known to the code are:
     time                         Waveform time (overrides random about trigtime).
     chirpmass                    Chirpmass
     eta                          Symmetric massratio (needs --use-eta)
     q                            Asymmetric massratio (a.k.a. q=m2/m1 with m1>m2)
     phase                        Coalescence phase.
     costheta_jn                  Cosine of angle between J and line of sight [rads]
     logdistance                  Log Distance (requires --use-logdistance)
     rightascension               Rightascensions
     declination                  Declination.
     polarisation                 Polarisation angle.
    * Spin Parameters:
     a_spin1                      Spin1 magnitude
     a_spin2                      Spin2 magnitude
     tilt_spin1                   Angle between spin1 and orbital angular momentum
     tilt_spin2                   Angle between spin2 and orbital angular momentum 
     phi_12                       Difference between spins' azimuthal angles 
     phi_jl                       Difference between total and orbital angular momentum azimuthal angles
    * Equation of State parameters:
     (requires --tidal)
     lambda1                      lambda1.
     lambda2                      lambda2.
     (requires --tidalT)
     lambdaT                      lambdaT.
     dLambdaT                     dLambdaT.
     (requires --4PolyEOS)
     logp1                        logp1.
     gamma1                       gamma1.
     gamma2                       gamma2.
     gamma3                       gamma3.
     (requires --BinaryLove)
     lambdaS                      Symmetric tidal deformability.
     (requires --4SpectralDecomp):
     SDgamma0                     SDgamma0.
     SDgamma1                     SDgamma1.
     SDgamma2                     SDgamma2.
     SDgamma3                     SDgamma3.
    * 
    * Spin-induced quadrupole moment test parameters:
     (requires --dQuadMon12)
     dQuadMon1                      dQuadMon1.
     dQuadMon2                      dQuadMon2.
     (requires --dQuadMonSA) 
     dQuadMonS                      dQuadMonS.
     dQuadMonA                      dQuadMonA.
    (dQuadMonS and dQuadMonA are the symmetric and antisymmetric combinations of dQuadMon1 and dQuadMon2).
    ----------------------------------------------
    --- Prior Ranges -----------------------------
    ----------------------------------------------
    You can generally use --paramname-min MIN --paramname-max MAX to set the prior range for the parameter paramname
    The names known to the code are listed below.
    Component masses, total mass and time have dedicated options listed here:

    (--trigtime time)                       Center of the prior for the time variable.
    (--comp-min min)                        Minimum component mass (1.0).
    (--comp-max max)                        Maximum component mass (100.0).
    (--mass1-min min, --mass1-max max)      Min and max for mass1 (default: same as comp-min,comp-max, will over-ride these.
    (--mass2-min min, --mass2-max max)      Min and max for mass2 (default: same as comp-min,comp-max, will over-ride these.
    (--mtotal-min min)                      Minimum total mass (2.0).
    (--mtotal-max max)                      Maximum total mass (200.0).
    (--dt time)                             Width of time prior, centred around trigger (0.2s).

    (--ns-max-mass)                          Maximum observed NS mass used for EOS prior (none).
    (--varyFlow, --flowMin, --flowMax)       Allow the lower frequency bound of integration to vary in given range.
    (--pinparams)                            List of parameters to set to injected values [mchirp,asym_massratio,etc].
    ----------------------------------------------
    --- Fix Parameters ---------------------------
    ----------------------------------------------
    You can generally fix a parameter to be fixed to a given values by using --fix-paramname VALUE
    where the known names have been listed above.

    ----------------------------------------------
    --- Likelihood Arguments ---------------------
    ----------------------------------------------
    (--zeroLogLike)                  Use flat, null likelihood
    (--studentTLikelihood)           Use the Student-T Likelihood that marginalizes over noise
    (--correlatedGaussianLikelihood) Use analytic, correlated Gaussian for Likelihood Z=-21.3
    (--bimodalGaussianLikelihood)    Use analytic, bimodal correlated Gaussian for Likelihood Z=-25.9
    (--rosenbrockLikelihood)         Use analytic, Rosenbrock banana for Likelihood
    (--noiseonly)                    Using noise-only likelihood
    (--margphi)                      Using marginalised phase likelihood
    (--margtime)                     Using marginalised time likelihood
    (--margtimephi)                  Using marginalised in time and phase likelihood
    (--margdist)                     Using marginalisation in distance with d^2 prior (compatible with --margphi and --margtimephi)
    (--margdist-comoving)            Using marginalisation in distance with uniform-in-comoving-volume prior (compatible with --margphi and --margtimephi)
    


=================================================
--- Help output for: lalinference_burst
=================================================
  LALInferenceNest:
  Bayesian analysis tool using Nested Sampling algorithm
  for Burst analysis. Uses LALInference library for back-end.

  Arguments for each section follow:



=================================================
--- Help output for: lalinference_burst_pp_pipe
=================================================
Usage:  lalinference_burst_pp_pipe [options] config.ini
Setup a DAG to run an end-to-end lalinference test:
 1) Generate samples from prior
 2) Analyse a set of injections drawn from the prior
 3) Run P vs P test on results


Options:
  -h, --help            show this help message and exit
  -r RUNDIR, --run-path=RUNDIR
                        Directory to run pipeline in (default: $PWD)
  -p LOGDIR, --daglog-path=LOGDIR
                        Path to directory to contain DAG log file. SHOULD BE
                        LOCAL TO SUBMIT NODE
  -I injections.xml, --injections=injections.xml
                        Path to injection file, will bypass the prior-sampling
                        stage
  -N NUM, --trials=NUM  Number of prior samples to analyse


=================================================
--- Help output for: lalinference_coherence_test
=================================================
Usage: lalinference_coherence_test [options] coherent_B.txt incoherent1_B.txt incoherent2_B.txt ... incoherentN_B.txt
lalinference_coherence_test takes a list of arguments which specify FIRST the coherent B.txt file, followed by all the
B.txt files from the individual runs on each IFO. The coherent file must be specified first.

The code will then perform either the test of coherent vs incoherent signal models, i.e.
B_{CI} = Z_co / Z_1 * Z_2 * Z_3

or a test of coherent vs incoherent
B_{CIN} = Z_co / (Z_1 * Z_2 * Z_3 + N_{123})

or the test of coherent vs ( incoherent signal or noise ) models, i.e.
B_{CIN} = Z_co / Z_{inc OR noise}
with Z_{inc OR noise} = sum over all permutations of the signal and noise hypotheses in each detector
e.g. for 2 detectors:
Z_{inc OR noise} =
see also https://dcc.ligo.org/LIGO-T1600068

Output will be written to stdout, and to a text file specified by the --outfile option.



Options:
  -h, --help            show this help message and exit
  -c, --coherent-incoherent
                        Perform coherence test of Coherent signal vs
                        incoherent signal
  -n, --coherent-incoherent-noise
                        Perform coherence test of coherent signal vs
                        incoherent signal or noise
  -b, --new-coherent-incoherent-noise
                        Perform coherence test of coherent signal vs
                        incoherent signal or noise using the most inclusive
                        hypothesis
  -o OUTFILE.txt, --outfile=OUTFILE.txt
                        Optional output file name


=================================================
--- Help output for: lalinference_compute_roq_weights
=================================================
Usage: lalinference_compute_roq_weights [options]

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -d DATA_FILE, --data=DATA_FILE
                        data file
  -p PSD_FILE, --psd=PSD_FILE
                        psd file
  -t DT, --time_prior=DT
                        width of time prior
  -i IFOS, --ifo=IFOS   list of ifos
  -a APPROXIMANT, --approx=APPROXIMANT
                        approximant name
  -s SEGLEN, --seglen=SEGLEN
                        segment length
  -f FLOW, --fLow=FLOW  low frequency cut off
  -u FHIGH, --fHigh=FHIGH
                        high frequency cut off
  -T DELTA_TC, --delta_tc=DELTA_TC
                        width of tc subdomain
  -B B_MATRIX_DIRECTORY, --basis-set=B_MATRIX_DIRECTORY
                        B matrix directory
  -o OUTPATH, --out=OUTPATH
                        output path


=================================================
--- Help output for: lalinference_cpnest
=================================================


=================================================
--- Help output for: lalinference_datadump
=================================================


=================================================
--- Help output for: lalinference_evolve_spins_and_append_samples
=================================================
usage: lalinference_evolve_spins_and_append_samples [-h] --sample_file
                                                    SAMPLE_FILE
                                                    [--vfinal VFINAL]

Evolve the LALInference posterior samples of spins and append to HDF5 file of
samples

options:
  -h, --help            show this help message and exit
  --sample_file SAMPLE_FILE
                        path to the HDF5 posterior samples file
  --vfinal VFINAL       final orbital velocity for the evolution (default is
                        the Schwarzschild ISCO velocity 6**-0.5 ~= 0.408)


=================================================
--- Help output for: lalinference_injectedlike
=================================================
  LALInferenceInjectedLike:
  Print the injected values of parameters and (delta)LogL/P 


LALInference version:cdc4b6db616afcc7f066b979f5a240fb1bc22fc5,2025-05-20 23:07:05 +0000,None,Adam Mercer <adam.mercer@ligo.org>,CLEAN: All modifications committed


------------------------------------------------------------------------------------------------------------------
--- Calibration Errors Handling Arguments ------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------
(--AddCalibrationErrors) Adds calibration errors into the f domain datastream (that includes both noise and signal)
(--RandomCE) Add a random realization of phase and amplitude CE, using the S6/VSR2-3 error budget as an indication of the 1-sigma errors
(--ConstantCE) Assumes calibration errors are constant over the bandwidth (requires --IFO-constant_calamp and --IFO-constant_calpha for each ifo)
(--IFO-constant_calamp Constant amplitude CE for instrument IFO. 0.0 means no error, 0.1 means 10 percent
(--IFO-constant_calpha Constant phase CE for instrument IFO. 0.0 means no error, 5 means a  5 degree shift 
(--RandomLinearCE ) Assumes CE are given by a contant plateau plus a random jittering of a few percent.
		 After a given frequency f CE increase linearly with a given slope (requires --IFO-calamp_plateau, --IFO-calamp_knee, --IFO-calamp_slope AND similar with calamp<->calpha. Phase Errors in degree, Amp errors are relative (0.05=5%) 
(--IFO-calamp_plateau, --IFO-calamp_knee, --IFO-calamp_slope) Add on the i-th IFO's stream amplitude errors on the form (IFOi_c + jitter) for f<IFOi_f and (IFOi_c-f)*IFOi_slope for f>IFOi_f
(--IFO-calpha_plateau, --IFO-calpha_knee, --IFO-calpha_slope) Add on the i-th IFO's stream phase errors on the form (IFOi_c + jitter) for f<IFOi_f and (IFOi_c-f)*IFOi_slope for f>IFOi_f
 * Constant Calibration Model 
  (--MarginalizeConstantCalAmp ) If given, will add a constant value of Amplitude CE per each IFO on the top of the CBC parameters.
  (--MarginalizeConstantCalPha ) If given, will add a constant value of Phase CE per each IFO on the top of the CBC parameters.
  (--constcal_ampsigma ) If given, will use gaussian prior on the constant amplitude error with this sigma (e.g. 0.05=5%) .
  (--constcal_phasigma ) If given, will use gaussian prior on the constant phase error with this sigma (e.g. 5=5degs).
 * Spline Calibration Model 
  (--enable-spline-calibration)            Enable cubic-spline calibration error model.
  (--spcal-nodes N)           Set the number of spline nodes per detector (default 5)
  (--IFO-spcal-amp-uncertainty X) Set the prior on relative amplitude uncertainty for the instrument IFO (mandatory with --enable-spline-calibration)
  (--IFO-spcal-phase-uncertainty X) Set the prior on phase uncertanity in degrees  for the instrument IFO (mandatory with --enable-spline-calibration)
  (--IFO-spcal-envelope F) Read amplitude and phase calibration uncertainty envelope from file F


    ----------------------------------------------
    --- Injection Arguments ----------------------
    ----------------------------------------------
    (--inj injections.xml) Injection XML file to use
    (--event N)            Event number from Injection XML file to use

    ----------------------------------------------
    --- Template Arguments -----------------------
    ----------------------------------------------
    (--use-eta)            Jump in symmetric mass ratio eta, instead of q=m1/m2 (m1>m2)
    (--approx)             Specify a template approximant and phase order to use
                         (default TaylorF2threePointFivePN). Available approximants:
                         default modeldomain="time": GeneratePPN, TaylorT1, TaylorT2,
                                                       TaylorT3, TaylorT4, EOB, EOBNR,
                                                       EOBNRv2, EOBNRv2HM, SEOBNRv1,
                                                       SpinTaylor, SpinQuadTaylor, 
                                                       SpinTaylorFrameless, SpinTaylorT4,
                                                       PhenSpinTaylorRD, NumRel.
                         default modeldomain="frequency": TaylorF1, TaylorF2, TaylorF2RedSpin,
                                                       TaylorF2RedSpinTidal, IMRPhenomA,
                                                       IMRPhenomB, IMRPhenomP, IMRPhenomPv2.
    (--amporder PNorder)            Specify a PN order in amplitude to use (defaults: LALSimulation: max available; LALInspiral: newtownian).
    (--fref f_ref)                  Specify a reference frequency at which parameters are defined (default 100).
    (--tidal)                   Enables tidal corrections, only with LALSimulation.
    (--tidalT)                  Enables reparmeterized tidal corrections, only with LALSimulation.
    (--4PolyEOS)                Enables 4-piece polytropic EOS parmeterization, only with LALSimulation.
    (--4SpectralDecomp)         Enables 4-coeff. spectral decomposition EOS parmeterization, only with LALSimulation.
    (--eos   EOS)               Fix the neutron star EOS. Use "--eos help" for allowed names
    (--BinaryLove)              Enable the Binary Neutron Star common EoS tidal model, expressed through EOS-insensitive relations
    (--spinOrder PNorder)           Specify twice the PN order (e.g. 5 <==> 2.5PN) of spin effects to use, only for LALSimulation (default: -1 <==> Use all spin effects).
    (--tidalOrder PNorder)          Specify twice the PN order (e.g. 10 <==> 5PN) of tidal effects to use, only for LALSimulation (default: -1 <==> Use all tidal effects).
    (--numreldata FileName)         Location of NR data file for NR waveforms (with NR_hdf5 approx).
    (--modeldomain)                 domain the waveform template will be computed in ("time" or "frequency"). If not given will use LALSim to decide
    (--spinAligned or --aligned-spin)  template will assume spins aligned with the orbital angular momentum.
    (--singleSpin)                  template will assume only the spin of the most massive binary component exists.
    (--noSpin, --disable-spin)      template will assume no spins (giving this will void spinOrder!=0) 
    (--no-detector-frame)              model will NOT use detector-centred coordinates and instead RA,dec
    (--nonGR_alpha value) this is a LIV parameter which should only be passed when log10lambda_eff/lambda_eff is passed as a grtest-parameter for LIV test
    (--LIV_A_sign) this is a LIV parameter determining if +A or -A is being tested; A occurs in the modified dispersion relation. LIV_A_sign has to be either +1 or -1 
    (--liv) this flag is now needed for launching a LIV run
    (--grtest-parameters dchi0,..,dxi1,..,dalpha1,..) template will assume deformations in the corresponding phase coefficients.
    (--generic-fd-correction) enables the generic frequency domain corrections to the template phase. 
    (--generic-fd-correction-hm) apply generic frequency domain corrections to higher-modes waveform. 
    (--generic-fd-correction-window) sets the fraction of the peak frequency up to which the generic phase corrections are applied (default=1). 
    (--generic-fd-correction-ncycles) sets the number of  cycles for the tapering of the generic phase corrections (default=1). 
    (--ppe-parameters aPPE1,....     template will assume the presence of an arbitrary number of PPE parameters. They must be paired correctly.
    (--modeList lm,l-m...,lm,l-m)           List of modes to be used by the model. The chosen modes ('lm') should be passed as a ',' seperated list.
    (--phenomXHMMband float)     Threshold parameter for the Multibanding of the non-precessing hlm modes in IMRPhenomXHM and IMRPhenomXPHM. If set to 0 then do not use multibanding.
                                 Options and default values can be found in https://lscsoft.docs.ligo.org/lalsuite/lalsimulation/group___l_a_l_sim_i_m_r_phenom_x__c.html
    (--phenomXPHMMband float)    Threshold parameter for the Multibanding of the Euler angles in IMRPhenomXPHM. If set to 0 then do not use multibanding.
                                 Options and default values can be found in https://lscsoft.docs.ligo.org/lalsuite/lalsimulation/group___l_a_l_sim_i_m_r_phenom_x__c.html
    (--phenomXPFinalSpinMod int) Change version for the final spin model used in IMRPhenomXP/IMRPhenomXPHM.
                                 Options and default values can be found in https://lscsoft.docs.ligo.org/lalsuite/lalsimulation/group___l_a_l_sim_i_m_r_phenom_x__c.html
    (--phenomXPrecVersion int)   Change version of the Euler angles for the twisting-up of IMRPhenomXP/IMRPhenomXPHM.
                                 Options and default values can be found in https://lscsoft.docs.ligo.org/lalsuite/lalsimulation/group___l_a_l_sim_i_m_r_phenom_x__c.html

    ----------------------------------------------
    --- Starting Parameters ----------------------
    ----------------------------------------------
    You can generally have MCMC chains to start from a given parameter value by using --parname VALUE. Names currently known to the code are:
     time                         Waveform time (overrides random about trigtime).
     chirpmass                    Chirpmass
     eta                          Symmetric massratio (needs --use-eta)
     q                            Asymmetric massratio (a.k.a. q=m2/m1 with m1>m2)
     phase                        Coalescence phase.
     costheta_jn                  Cosine of angle between J and line of sight [rads]
     logdistance                  Log Distance (requires --use-logdistance)
     rightascension               Rightascensions
     declination                  Declination.
     polarisation                 Polarisation angle.
    * Spin Parameters:
     a_spin1                      Spin1 magnitude
     a_spin2                      Spin2 magnitude
     tilt_spin1                   Angle between spin1 and orbital angular momentum
     tilt_spin2                   Angle between spin2 and orbital angular momentum 
     phi_12                       Difference between spins' azimuthal angles 
     phi_jl                       Difference between total and orbital angular momentum azimuthal angles
    * Equation of State parameters:
     (requires --tidal)
     lambda1                      lambda1.
     lambda2                      lambda2.
     (requires --tidalT)
     lambdaT                      lambdaT.
     dLambdaT                     dLambdaT.
     (requires --4PolyEOS)
     logp1                        logp1.
     gamma1                       gamma1.
     gamma2                       gamma2.
     gamma3                       gamma3.
     (requires --BinaryLove)
     lambdaS                      Symmetric tidal deformability.
     (requires --4SpectralDecomp):
     SDgamma0                     SDgamma0.
     SDgamma1                     SDgamma1.
     SDgamma2                     SDgamma2.
     SDgamma3                     SDgamma3.
    * 
    * Spin-induced quadrupole moment test parameters:
     (requires --dQuadMon12)
     dQuadMon1                      dQuadMon1.
     dQuadMon2                      dQuadMon2.
     (requires --dQuadMonSA) 
     dQuadMonS                      dQuadMonS.
     dQuadMonA                      dQuadMonA.
    (dQuadMonS and dQuadMonA are the symmetric and antisymmetric combinations of dQuadMon1 and dQuadMon2).
    ----------------------------------------------
    --- Prior Ranges -----------------------------
    ----------------------------------------------
    You can generally use --paramname-min MIN --paramname-max MAX to set the prior range for the parameter paramname
    The names known to the code are listed below.
    Component masses, total mass and time have dedicated options listed here:

    (--trigtime time)                       Center of the prior for the time variable.
    (--comp-min min)                        Minimum component mass (1.0).
    (--comp-max max)                        Maximum component mass (100.0).
    (--mass1-min min, --mass1-max max)      Min and max for mass1 (default: same as comp-min,comp-max, will over-ride these.
    (--mass2-min min, --mass2-max max)      Min and max for mass2 (default: same as comp-min,comp-max, will over-ride these.
    (--mtotal-min min)                      Minimum total mass (2.0).
    (--mtotal-max max)                      Maximum total mass (200.0).
    (--dt time)                             Width of time prior, centred around trigger (0.2s).

    (--ns-max-mass)                          Maximum observed NS mass used for EOS prior (none).
    (--varyFlow, --flowMin, --flowMax)       Allow the lower frequency bound of integration to vary in given range.
    (--pinparams)                            List of parameters to set to injected values [mchirp,asym_massratio,etc].
    ----------------------------------------------
    --- Fix Parameters ---------------------------
    ----------------------------------------------
    You can generally fix a parameter to be fixed to a given values by using --fix-paramname VALUE
    where the known names have been listed above.

    ----------------------------------------------
    --- Prior Arguments --------------------------
    ----------------------------------------------
    (--distance-prior-uniform)       Impose uniform prior on distance and not volume (False)
    (--distance-prior-comoving-volume) Impose uniform prior on source-frame comoving volume (False)
    (--malmquistprior)               Impose selection effects on the prior (False)
    (--malmquist-loudest-snr)        Threshold SNR in the loudest detector (0.0)
    (--malmquist-second-loudest-snr) Threshold SNR in the second loudest detector (5.0)
    (--malmquist-network-snr)        Threshold network SNR (0.0)
    (--analyticnullprior)            Use analytic null prior
    (--nullprior)                    Use null prior in the sampled parameters
    (--alignedspin-zprior)           Use prior on z component of spin that corresponds to fully precessing model
    (--spin-volumetricprior)         Use prior on spin components that is uniform inside the sphere
    
    ----------------------------------------------
    --- Likelihood Arguments ---------------------
    ----------------------------------------------
    (--zeroLogLike)                  Use flat, null likelihood
    (--studentTLikelihood)           Use the Student-T Likelihood that marginalizes over noise
    (--correlatedGaussianLikelihood) Use analytic, correlated Gaussian for Likelihood Z=-21.3
    (--bimodalGaussianLikelihood)    Use analytic, bimodal correlated Gaussian for Likelihood Z=-25.9
    (--rosenbrockLikelihood)         Use analytic, Rosenbrock banana for Likelihood
    (--noiseonly)                    Using noise-only likelihood
    (--margphi)                      Using marginalised phase likelihood
    (--margtime)                     Using marginalised time likelihood
    (--margtimephi)                  Using marginalised in time and phase likelihood
    (--margdist)                     Using marginalisation in distance with d^2 prior (compatible with --margphi and --margtimephi)
    (--margdist-comoving)            Using marginalisation in distance with uniform-in-comoving-volume prior (compatible with --margphi and --margtimephi)
    


=================================================
--- Help output for: lalinference_merge_posteriors
=================================================
Usage: lalinference_merge_posteriors [-N NPOS]-o output.dat -p pos1.dat -w weight1 [-p pos2.dat -w weight2 ...]
lalinference_merge_posteriors takes a list of posterior files and weights and draws samples from the combined,
reweighted distribution


Options:
  -h, --help            show this help message and exit
  -o output.dat, --output=output.dat
                        output file
  -p pos.dat, --posterior=pos.dat
                        posterior input file
  -w NUM, --weight=NUM  weight of an input file
  -N NPOS, --npos=NPOS  Optional number of posterior samples to draw
  --verbose             Prints additional information


=================================================
--- Help output for: lalinference_mpi_wrapper
=================================================
--executable not set


=================================================
--- Help output for: lalinference_multi_pipe
=================================================
Usage:  lalinference_multi_pipe [options] config1.ini config2.ini ... configN.ini
Setup a Condor DAG file to run the LALInference pipeline based on
N config.ini files.

The user must specify either an injection file to analyse, with the --inj option,
a list of SnglInspiralTable or CoincInspiralTable triggers with the --<x>-triggers options,
or an ASCII list of GPS times with the --gps-time-file option.

The user must also specify and ini file which will contain the main analysis config.



Options:
  -h, --help            show this help message and exit
  -r RUNDIR, --run-path=RUNDIR
                        Directory to run pipeline in (default: $PWD)
  -p LOGDIR, --daglog-path=LOGDIR
                        Path to directory to contain DAG log file. SHOULD BE
                        LOCAL TO SUBMIT NODE
  -g TIMES.txt, --gps-time-file=TIMES.txt
                        Text file containing list of GPS times to analyse
  -t SNGL_FILE.xml, --single-triggers=SNGL_FILE.xml
                        SnglInspiralTable trigger list
  -C COINC_FILE.xml, --coinc-triggers=COINC_FILE.xml
                        CoinInspiralTable trigger list
  -L coinc_G0000.xml, --lvalert=coinc_G0000.xml
                        LVAlert coinc file
  --gid=GID             Optional GraceDB ID for submitting results
  -I INJFILE.xml, --injections=INJFILE.xml
                        List of injections to perform and analyse
  -P pipedown.sqlite, --pipedown-db=pipedown.sqlite
                        Pipedown database to read and analyse
  -F, --folder-names    Space separated list of folders that will be created,
                        corresponding to the TIGER parameters that are being
                        tested or GR. The order has to be the same used with
                        the ini files!
  --condor-submit       Automatically submit the condor dag


=================================================
--- Help output for: lalinference_nest
=================================================
  LALInferenceNest:
  Bayesian analysis tool using Nested Sampling algorithm
  for CBC analysis. Uses LALInference library for back-end.

  Arguments for each section follow:



LALInference version:cdc4b6db616afcc7f066b979f5a240fb1bc22fc5,2025-05-20 23:07:05 +0000,None,Adam Mercer <adam.mercer@ligo.org>,CLEAN: All modifications committed


------------------------------------------------------------------------------------------------------------------
--- Calibration Errors Handling Arguments ------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------
(--AddCalibrationErrors) Adds calibration errors into the f domain datastream (that includes both noise and signal)
(--RandomCE) Add a random realization of phase and amplitude CE, using the S6/VSR2-3 error budget as an indication of the 1-sigma errors
(--ConstantCE) Assumes calibration errors are constant over the bandwidth (requires --IFO-constant_calamp and --IFO-constant_calpha for each ifo)
(--IFO-constant_calamp Constant amplitude CE for instrument IFO. 0.0 means no error, 0.1 means 10 percent
(--IFO-constant_calpha Constant phase CE for instrument IFO. 0.0 means no error, 5 means a  5 degree shift 
(--RandomLinearCE ) Assumes CE are given by a contant plateau plus a random jittering of a few percent.
		 After a given frequency f CE increase linearly with a given slope (requires --IFO-calamp_plateau, --IFO-calamp_knee, --IFO-calamp_slope AND similar with calamp<->calpha. Phase Errors in degree, Amp errors are relative (0.05=5%) 
(--IFO-calamp_plateau, --IFO-calamp_knee, --IFO-calamp_slope) Add on the i-th IFO's stream amplitude errors on the form (IFOi_c + jitter) for f<IFOi_f and (IFOi_c-f)*IFOi_slope for f>IFOi_f
(--IFO-calpha_plateau, --IFO-calpha_knee, --IFO-calpha_slope) Add on the i-th IFO's stream phase errors on the form (IFOi_c + jitter) for f<IFOi_f and (IFOi_c-f)*IFOi_slope for f>IFOi_f
 * Constant Calibration Model 
  (--MarginalizeConstantCalAmp ) If given, will add a constant value of Amplitude CE per each IFO on the top of the CBC parameters.
  (--MarginalizeConstantCalPha ) If given, will add a constant value of Phase CE per each IFO on the top of the CBC parameters.
  (--constcal_ampsigma ) If given, will use gaussian prior on the constant amplitude error with this sigma (e.g. 0.05=5%) .
  (--constcal_phasigma ) If given, will use gaussian prior on the constant phase error with this sigma (e.g. 5=5degs).
 * Spline Calibration Model 
  (--enable-spline-calibration)            Enable cubic-spline calibration error model.
  (--spcal-nodes N)           Set the number of spline nodes per detector (default 5)
  (--IFO-spcal-amp-uncertainty X) Set the prior on relative amplitude uncertainty for the instrument IFO (mandatory with --enable-spline-calibration)
  (--IFO-spcal-phase-uncertainty X) Set the prior on phase uncertanity in degrees  for the instrument IFO (mandatory with --enable-spline-calibration)
  (--IFO-spcal-envelope F) Read amplitude and phase calibration uncertainty envelope from file F


    ----------------------------------------------
    --- Injection Arguments ----------------------
    ----------------------------------------------
    (--inj injections.xml) Injection XML file to use
    (--event N)            Event number from Injection XML file to use

    ----------------------------------------------
    --- Template Arguments -----------------------
    ----------------------------------------------
    (--use-eta)            Jump in symmetric mass ratio eta, instead of q=m1/m2 (m1>m2)
    (--approx)             Specify a template approximant and phase order to use
                         (default TaylorF2threePointFivePN). Available approximants:
                         default modeldomain="time": GeneratePPN, TaylorT1, TaylorT2,
                                                       TaylorT3, TaylorT4, EOB, EOBNR,
                                                       EOBNRv2, EOBNRv2HM, SEOBNRv1,
                                                       SpinTaylor, SpinQuadTaylor, 
                                                       SpinTaylorFrameless, SpinTaylorT4,
                                                       PhenSpinTaylorRD, NumRel.
                         default modeldomain="frequency": TaylorF1, TaylorF2, TaylorF2RedSpin,
                                                       TaylorF2RedSpinTidal, IMRPhenomA,
                                                       IMRPhenomB, IMRPhenomP, IMRPhenomPv2.
    (--amporder PNorder)            Specify a PN order in amplitude to use (defaults: LALSimulation: max available; LALInspiral: newtownian).
    (--fref f_ref)                  Specify a reference frequency at which parameters are defined (default 100).
    (--tidal)                   Enables tidal corrections, only with LALSimulation.
    (--tidalT)                  Enables reparmeterized tidal corrections, only with LALSimulation.
    (--4PolyEOS)                Enables 4-piece polytropic EOS parmeterization, only with LALSimulation.
    (--4SpectralDecomp)         Enables 4-coeff. spectral decomposition EOS parmeterization, only with LALSimulation.
    (--eos   EOS)               Fix the neutron star EOS. Use "--eos help" for allowed names
    (--BinaryLove)              Enable the Binary Neutron Star common EoS tidal model, expressed through EOS-insensitive relations
    (--spinOrder PNorder)           Specify twice the PN order (e.g. 5 <==> 2.5PN) of spin effects to use, only for LALSimulation (default: -1 <==> Use all spin effects).
    (--tidalOrder PNorder)          Specify twice the PN order (e.g. 10 <==> 5PN) of tidal effects to use, only for LALSimulation (default: -1 <==> Use all tidal effects).
    (--numreldata FileName)         Location of NR data file for NR waveforms (with NR_hdf5 approx).
    (--modeldomain)                 domain the waveform template will be computed in ("time" or "frequency"). If not given will use LALSim to decide
    (--spinAligned or --aligned-spin)  template will assume spins aligned with the orbital angular momentum.
    (--singleSpin)                  template will assume only the spin of the most massive binary component exists.
    (--noSpin, --disable-spin)      template will assume no spins (giving this will void spinOrder!=0) 
    (--no-detector-frame)              model will NOT use detector-centred coordinates and instead RA,dec
    (--nonGR_alpha value) this is a LIV parameter which should only be passed when log10lambda_eff/lambda_eff is passed as a grtest-parameter for LIV test
    (--LIV_A_sign) this is a LIV parameter determining if +A or -A is being tested; A occurs in the modified dispersion relation. LIV_A_sign has to be either +1 or -1 
    (--liv) this flag is now needed for launching a LIV run
    (--grtest-parameters dchi0,..,dxi1,..,dalpha1,..) template will assume deformations in the corresponding phase coefficients.
    (--generic-fd-correction) enables the generic frequency domain corrections to the template phase. 
    (--generic-fd-correction-hm) apply generic frequency domain corrections to higher-modes waveform. 
    (--generic-fd-correction-window) sets the fraction of the peak frequency up to which the generic phase corrections are applied (default=1). 
    (--generic-fd-correction-ncycles) sets the number of  cycles for the tapering of the generic phase corrections (default=1). 
    (--ppe-parameters aPPE1,....     template will assume the presence of an arbitrary number of PPE parameters. They must be paired correctly.
    (--modeList lm,l-m...,lm,l-m)           List of modes to be used by the model. The chosen modes ('lm') should be passed as a ',' seperated list.
    (--phenomXHMMband float)     Threshold parameter for the Multibanding of the non-precessing hlm modes in IMRPhenomXHM and IMRPhenomXPHM. If set to 0 then do not use multibanding.
                                 Options and default values can be found in https://lscsoft.docs.ligo.org/lalsuite/lalsimulation/group___l_a_l_sim_i_m_r_phenom_x__c.html
    (--phenomXPHMMband float)    Threshold parameter for the Multibanding of the Euler angles in IMRPhenomXPHM. If set to 0 then do not use multibanding.
                                 Options and default values can be found in https://lscsoft.docs.ligo.org/lalsuite/lalsimulation/group___l_a_l_sim_i_m_r_phenom_x__c.html
    (--phenomXPFinalSpinMod int) Change version for the final spin model used in IMRPhenomXP/IMRPhenomXPHM.
                                 Options and default values can be found in https://lscsoft.docs.ligo.org/lalsuite/lalsimulation/group___l_a_l_sim_i_m_r_phenom_x__c.html
    (--phenomXPrecVersion int)   Change version of the Euler angles for the twisting-up of IMRPhenomXP/IMRPhenomXPHM.
                                 Options and default values can be found in https://lscsoft.docs.ligo.org/lalsuite/lalsimulation/group___l_a_l_sim_i_m_r_phenom_x__c.html

    ----------------------------------------------
    --- Starting Parameters ----------------------
    ----------------------------------------------
    You can generally have MCMC chains to start from a given parameter value by using --parname VALUE. Names currently known to the code are:
     time                         Waveform time (overrides random about trigtime).
     chirpmass                    Chirpmass
     eta                          Symmetric massratio (needs --use-eta)
     q                            Asymmetric massratio (a.k.a. q=m2/m1 with m1>m2)
     phase                        Coalescence phase.
     costheta_jn                  Cosine of angle between J and line of sight [rads]
     logdistance                  Log Distance (requires --use-logdistance)
     rightascension               Rightascensions
     declination                  Declination.
     polarisation                 Polarisation angle.
    * Spin Parameters:
     a_spin1                      Spin1 magnitude
     a_spin2                      Spin2 magnitude
     tilt_spin1                   Angle between spin1 and orbital angular momentum
     tilt_spin2                   Angle between spin2 and orbital angular momentum 
     phi_12                       Difference between spins' azimuthal angles 
     phi_jl                       Difference between total and orbital angular momentum azimuthal angles
    * Equation of State parameters:
     (requires --tidal)
     lambda1                      lambda1.
     lambda2                      lambda2.
     (requires --tidalT)
     lambdaT                      lambdaT.
     dLambdaT                     dLambdaT.
     (requires --4PolyEOS)
     logp1                        logp1.
     gamma1                       gamma1.
     gamma2                       gamma2.
     gamma3                       gamma3.
     (requires --BinaryLove)
     lambdaS                      Symmetric tidal deformability.
     (requires --4SpectralDecomp):
     SDgamma0                     SDgamma0.
     SDgamma1                     SDgamma1.
     SDgamma2                     SDgamma2.
     SDgamma3                     SDgamma3.
    * 
    * Spin-induced quadrupole moment test parameters:
     (requires --dQuadMon12)
     dQuadMon1                      dQuadMon1.
     dQuadMon2                      dQuadMon2.
     (requires --dQuadMonSA) 
     dQuadMonS                      dQuadMonS.
     dQuadMonA                      dQuadMonA.
    (dQuadMonS and dQuadMonA are the symmetric and antisymmetric combinations of dQuadMon1 and dQuadMon2).
    ----------------------------------------------
    --- Prior Ranges -----------------------------
    ----------------------------------------------
    You can generally use --paramname-min MIN --paramname-max MAX to set the prior range for the parameter paramname
    The names known to the code are listed below.
    Component masses, total mass and time have dedicated options listed here:

    (--trigtime time)                       Center of the prior for the time variable.
    (--comp-min min)                        Minimum component mass (1.0).
    (--comp-max max)                        Maximum component mass (100.0).
    (--mass1-min min, --mass1-max max)      Min and max for mass1 (default: same as comp-min,comp-max, will over-ride these.
    (--mass2-min min, --mass2-max max)      Min and max for mass2 (default: same as comp-min,comp-max, will over-ride these.
    (--mtotal-min min)                      Minimum total mass (2.0).
    (--mtotal-max max)                      Maximum total mass (200.0).
    (--dt time)                             Width of time prior, centred around trigger (0.2s).

    (--ns-max-mass)                          Maximum observed NS mass used for EOS prior (none).
    (--varyFlow, --flowMin, --flowMax)       Allow the lower frequency bound of integration to vary in given range.
    (--pinparams)                            List of parameters to set to injected values [mchirp,asym_massratio,etc].
    ----------------------------------------------
    --- Fix Parameters ---------------------------
    ----------------------------------------------
    You can generally fix a parameter to be fixed to a given values by using --fix-paramname VALUE
    where the known names have been listed above.

    ----------------------------------------------
    --- Prior Arguments --------------------------
    ----------------------------------------------
    (--distance-prior-uniform)       Impose uniform prior on distance and not volume (False)
    (--distance-prior-comoving-volume) Impose uniform prior on source-frame comoving volume (False)
    (--malmquistprior)               Impose selection effects on the prior (False)
    (--malmquist-loudest-snr)        Threshold SNR in the loudest detector (0.0)
    (--malmquist-second-loudest-snr) Threshold SNR in the second loudest detector (5.0)
    (--malmquist-network-snr)        Threshold network SNR (0.0)
    (--analyticnullprior)            Use analytic null prior
    (--nullprior)                    Use null prior in the sampled parameters
    (--alignedspin-zprior)           Use prior on z component of spin that corresponds to fully precessing model
    (--spin-volumetricprior)         Use prior on spin components that is uniform inside the sphere
    
    ----------------------------------------------
    --- Nested Sampling Algorithm Parameters -----
    ----------------------------------------------
    --Nlive N                        Number of live points to use
    (--Nmcmc M)                      Over-ride auto chain length determination and use <M> MCMC samples
    (--maxmcmc M)                    Use at most M MCMC points when autodetermining the chain (5000)
    (--Nmcmcinitial M)               Use M MCMC points when initially resampling from the prior
                                     (otherwise default is to use maxmcmc)
    (--sloppyratio S)                Number of sub-samples of the prior for every sample from the
                                     limited prior
    (--Nruns R)                      Number of parallel samples from logt to use(1)
    (--tolerance dZ)                 Tolerance of nested sampling algorithm (0.1)
    (--randomseed seed)              Random seed of sampling distribution
    (--prior )                       Set the prior to use (InspiralNormalised,SkyLoc,malmquist)
                                     (default: InspiralNormalised)
    (--sampleprior N)                For Testing: Draw N samples from the prior, will not perform the
                                     nested sampling integral
    (--progress)                     Output some progress information at each iteration
    (--verbose)                      Output more info. N=1: errors, N=2 (default): warnings, N=3: info
    (--resume)                       Allow non-condor checkpointing every 4 hours. If given will check 
                                     or OUTFILE_resume and continue if possible
    (--checkpoint-exit-code N)       Exit with code N when checkpoint is complete.
                                     For use with condor's +SuccessCheckpointExitCode option
    
    ----------------------------------------------
    --- Likelihood Arguments ---------------------
    ----------------------------------------------
    (--zeroLogLike)                  Use flat, null likelihood
    (--studentTLikelihood)           Use the Student-T Likelihood that marginalizes over noise
    (--correlatedGaussianLikelihood) Use analytic, correlated Gaussian for Likelihood Z=-21.3
    (--bimodalGaussianLikelihood)    Use analytic, bimodal correlated Gaussian for Likelihood Z=-25.9
    (--rosenbrockLikelihood)         Use analytic, Rosenbrock banana for Likelihood
    (--noiseonly)                    Using noise-only likelihood
    (--margphi)                      Using marginalised phase likelihood
    (--margtime)                     Using marginalised time likelihood
    (--margtimephi)                  Using marginalised in time and phase likelihood
    (--margdist)                     Using marginalisation in distance with d^2 prior (compatible with --margphi and --margtimephi)
    (--margdist-comoving)            Using marginalisation in distance with uniform-in-comoving-volume prior (compatible with --margphi and --margtimephi)
    


=================================================
--- Help output for: lalinference_nest2pos
=================================================
Usage: lalinference_nest2pos [-N Nlive] [-p posterior.hdf5] [-H header.txt] [--npos Npos] [--non-strict-versions] datafile1.hdf5 [datafile2.hdf5 ...]

lalinference_nest2pos takes at least one nested sampling output file and outputs posterior
	samples. If more than one input file is specified, each file is converted,
	then posterior samples drawn according to the evidence of each.
	If the --npos option is used the algorithm
	will draw approximately that number of samples from the posterior. This may
	give repeated samples in the output file. By default, the non-repeating
	algorithm is used, but that may not produce enough samples.
	The input and output files may be in either HDF5 or ASCII format, with
	ASCII tables being deprecated. The type will be chosen based on the file extensions.


Options:
  -h, --help            show this help message and exit
  -N NUM, --Nlive=NUM   Number of live points in each chain loaded
  -p posterior.dat, --pos=posterior.dat
                        Output file for posterior samples
  --npos=NUM            Draw a specific number of posteriors samples. May give
                        repetitions. Disabled by default.
  -H file.dat_params.txt, --headers=file.dat_params.txt
                        Header file explaining columns in data file
  -d NUM, --prec=NUM    Number of decimal place required for output posterior
                        samples. Default is 14.
  -z, --gzip            Gzip compress the output posterior samples (this will
                        append .gz onto the posterior file). Default is no
                        compression.
  -v, --verbose         Print some additional information
  --non-strict-versions
                        Set this flag to allow combining of nested sample HDF5
                        files that do no necessarily have the same verion
                        information


=================================================
--- Help output for: lalinference_pipe
=================================================
Usage:  lalinference_pipe [options] config.ini
Setup a Condor DAG file to run the LALInference pipeline based on
the config.ini file.

The user can specify either an injection file to analyse, with the --inj option,
a list of SnglInspiralTable or CoincInspiralTable triggers with the --<x>-triggers options,
a GraceDB ID with the --gid option,
or an ASCII list of GPS times with the --gps-time-file option.

If none of the above options are given, the pipeline will analyse the entire
stretch of time between gps-start-time and gps-end-time, specified in the config.ini file.

The user must also specify and ini file which will contain the main analysis config.



Options:
  -h, --help            show this help message and exit
  -r RUNDIR, --run-path=RUNDIR
                        Directory to run pipeline in (default: $PWD)
  -p LOGDIR, --daglog-path=LOGDIR
                        Path to directory to contain DAG log file. SHOULD BE
                        LOCAL TO SUBMIT NODE
  -g TIMES.txt, --gps-time-file=TIMES.txt
                        Text file containing list of GPS times to analyse
  --gid=GID             GraceDB ID
  --coinc=COINC         Path to coinc.xml from GraceDB
  --psd=PSD             Path to psd.xml.gz from GraceDB
  --service-url=SERVICE_URL
                        GraceDB url from which xml files are downloaded
  -I INJFILE.xml, --injections=INJFILE.xml
                        List of injections to perform and analyse
  -B INJFILE.xml, --burst_injections=INJFILE.xml
                        SimBurst table for LIB injections
  -P pipedown.sqlite, --pipedown-db=pipedown.sqlite
                        Pipedown database to read and analyse
  --condor-submit       Automatically submit the condor dag


=================================================
--- Help output for: lalinference_pp_pipe
=================================================
Usage:  lalinference_pp_pipe [options] config.ini
Setup a DAG to run an end-to-end lalinference test:
 1) Generate samples from prior
 2) Analyse a set of injections drawn from the prior
 3) Run P vs P test on results


Options:
  -h, --help            show this help message and exit
  -r RUNDIR, --run-path=RUNDIR
                        Directory to run pipeline in (default: $PWD)
  -p LOGDIR, --daglog-path=LOGDIR
                        Path to directory to contain DAG log file. SHOULD BE
                        LOCAL TO SUBMIT NODE
  -I injections.xml, --injections=injections.xml
                        Path to injection file, will bypass the prior-sampling
                        stage
  -N NUM, --trials=NUM  Number of prior samples to analyse


=================================================
--- Help output for: lalinference_review_test
=================================================
usage: lalinference_review_test [-h] [-i [INI_FILE]]
                                [--bns-injection [BNS_INJECTION]] [--gracedb]
                                [--analytic-tests]
                                [--analytic-csv-dir ANALYTIC_CSV_DIR]
                                [--pptest] [--pp-approximant PP_APPROXIMANT]
                                [--bbh-injection [BBH_INJECTION]]
                                [-e [ENGINE]] [-o [OUTPUT]] [--condor-submit]

Runs review tests of lalinference using lalinference_pipe_example.ini.

options:
  -h, --help            show this help message and exit
  -i [INI_FILE], --ini_file [INI_FILE]
                        lalinference_pipe ini file to process.
  --bns-injection [BNS_INJECTION]
                        injection file for fiducial BNS analysis.
  --gracedb             Runs the analysis for the GraceDB test event T169545.
  --analytic-tests      Run on the unmodal and bimodial Gaussian and
                        Rosenbrock test functions.
  --analytic-csv-dir ANALYTIC_CSV_DIR
                        Directory containing the CSVs describing the analytic
                        tests.
  --pptest              Runs a P-P analysis. Must specify a single engine.
  --pp-approximant PP_APPROXIMANT
                        Approximant(s) used for the P-P analysis.
  --bbh-injection [BBH_INJECTION]
                        injection file for fiducial BBH analysis.
  -e [ENGINE], --engine [ENGINE]
                        lalinference engine to run with.
  -o [OUTPUT], --output [OUTPUT]
                        output directory.
  --condor-submit       submits the test suite.


=================================================
--- Help output for: lalinference_version
=================================================


=================================================
--- Help output for: lalinspiral_injfind
=================================================
Usage: lalinspiral_injfind [options] [file ...]

Accepts as input one or more LIGO Light Weight XML files, each containing CBC
candidates and a list of injections, and adds entries to the coincidence
tables indicating which events match which injections.

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -f, --force           Process even if file has already been processed.
  --comment=text        Set the comment string to be written to the process
                        table (default = None).
  -c [inspiral], --match-algorithm=[inspiral]
                        Set the algorithm used to match event candidates with
                        injections (default = "inspiral").
  -r, --revert          Revert a previously-processed XML file to its pre-
                        lalapps_inspinjfind state, allowing it to be re-
                        processed.  This is achieved by removing
                        lalapps_inspinjfind's entries from the process
                        metadata tables, removing injection-related entries
                        from the coinc_definer table, and removing all coincs
                        created by lalapps_inspinjfind.  NOTE:  generally this
                        is only possible if lalapps_inspinjfind was the last
                        transformation applied to the file, otherwise data
                        that has been added subsequently might be broken due
                        to dangling cross-references to deleted data.  It is
                        left as an exercise to the user to ensure that
                        reverting the file is sensible.
  -w seconds, --time-window=seconds
                        Set the time window used by the "inspiral" match
                        algorithm (default = 9.0).
  -v, --verbose         Be verbose.


=================================================
--- Help output for: lalinspiral_thinca
=================================================
Usage: lalinspiral_thinca [options] [file ...]

lalinspiral_thinca implements the inspiral coincidence algorithm for use in
performing trigger-based multi-instrument searches for gravitational wave
events.  The LIGO Light Weight XML files listed on the command line are
processed one by one in order, and over-written with the results.  If no files
are named, then input is read from stdin and output written to stdout.
Gzipped files will be autodetected on input, if a file's name ends in ".gz" it
will be gzip-compressed on output.

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -c text, --comment=text
                        Set comment string in process table (default = None).
  -f, --force           Process document even if it has already been
                        processed.
  -t float, --threshold=float
                        Set the coincidence window in seconds, not including
                        light travel time (required).  The value entered here
                        will be dilated by the light travel time between
                        detectors to define the coincidence window for each
                        detector pair.
  --min-instruments=number
                        Set the minimum number of instruments that must
                        participate in a coincidence (default = 2).  The value
                        must be greater than 0.
  --snr-segments-name=string
                        From the input document, use the segment list with
                        this name to define when each detector was operating
                        (default = "whitehtsegments").
  --vetoes-segments-name=string
                        From the input document, use the segment list with
                        this name to veto single-detector triggers before
                        considering them for coincidence (default = do not
                        apply vetoes.
  --coinc-end-time-segment=seg
                        The segment of time to retain coincident triggers
                        from.  Uses segmentUtils.from_range_strings() format
                        "START:END" for an interval of the form [START,END),
                        "START:" for an interval of the form [START,INF), and
                        ":END" for an interval of the form (-INF,END) (default
                        = retain all coincidences)
  -v, --verbose         Be verbose.


=================================================
--- Help output for: lalinspiral_version
=================================================


=================================================
--- Help output for: lalmetaio_version
=================================================


=================================================
--- Help output for: lalpulsar_ComputeAntennaPattern
=================================================

NAME
       lalpulsar_ComputeAntennaPattern

SYNOPSIS
       lalpulsar_ComputeAntennaPattern --help
           Display this help page.

       lalpulsar_ComputeAntennaPattern -h
           Display a short usage string of available options.

       lalpulsar_ComputeAntennaPattern -v|--version[=verbose]
           Display (verbose) version information.

       lalpulsar_ComputeAntennaPattern [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

OPTIONS
       -I, --IFOs=<string>,... [default: "H1"]
           Comma-separated list of detectors, eg. "H1,H2,L1,G1, ..." [only 1 detector supported at the moment] 

       -a, --Alpha=<8-byte real> [default: 0]
           single skyposition Alpha in radians, equatorial coords.

       -d, --Delta=<8-byte real> [default: 0]
           single skyposition Delta in radians, equatorial coords.

       -s, --skyGridFile=<string> [default: NULL]
           Alternatively: sky-grid file

       -t, --timeGPS=<string>,... [default: NULL]
           GPS time at which to compute detector states (separate multiple timestamps by commata)

       -T, --timeStampsFiles=<string>,... [default: NULL]
           Alternative: time-stamps file(s) (comma-separated list per IFO, or one for all)

       --Tsft=<4-byte signed integer> [default: 1800]
           Assumed length of one SFT in seconds; needed for timestamps offset consistency with F-stat based codes

       --noiseSqrtShX=<string>,... [default: NULL]
           Per-detector noise PSD sqrt(SX). Only ratios relevant to compute noise weights. Defaults to 1,1,...

       --singleIFOweighting[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Normalize single-IFO quantities by single-IFO SX instead of Stot

       --ephemEarth=<string> [default: "earth00-40-DE405.dat.gz"]
           Earth ephemeris file to use

       --ephemSun=<string> [default: "sun00-40-DE405.dat.gz"]
           Sun ephemeris file to use

       -o, --outab=<string> [default: NULL]
           output file for antenna pattern functions a(t), b(t) at each timestamp

       -O, --outABCD=<string> [default: NULL]
           output file for antenna pattern matrix elements A, B, C, D averaged over timestamps



=================================================
--- Help output for: lalpulsar_ComputeFstatBenchmark
=================================================

NAME
       lalpulsar_ComputeFstatBenchmark

SYNOPSIS
       lalpulsar_ComputeFstatBenchmark --help
           Display this help page.

       lalpulsar_ComputeFstatBenchmark -h
           Display a short usage string of available options.

       lalpulsar_ComputeFstatBenchmark -v|--version[=verbose]
           Display (verbose) version information.

       lalpulsar_ComputeFstatBenchmark [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

OPTIONS
       --FstatMethod=(DemodGeneric|DemodOptC|DemodSSE=DemodBest|ResampGeneric=ResampBest) [default: ResampBest]
           F-statistic method to use

       --Alpha=<start>[,<end>|/<band>|~<plus-minus>] where <>=<radians>|<hours>:<minutes>:<seconds> [default: 0,6.283185307179586]
           Skyposition [drawn isotropically]: Range in 'Alpha' = right ascension)

       --Delta=<start>[,<end>|/<band>|~<plus-minus>] where <>=<radians>|<degrees>:<minutes>:<seconds> [default: -1.570796326794897,1.570796326794897]
           Skyposition [drawn isotropically]: Range in 'Delta' = declination

       --Freq=<start>[,<end>|/<band>|~<plus-minus>] where <>=<8-byte real> [default: 100,1000]
           Search frequency in Hz [range to draw from]

       --f1dot=<start>[,<end>|/<band>|~<plus-minus>] where <>=<8-byte real> [default: -3e-09,0]
           Search 1st spindown f1dot in Hz/s [range to draw from]

       --f2dot=<start>[,<end>|/<band>|~<plus-minus>] where <>=<8-byte real> [default: 0,1e-16]
           Search 2nd spindown f2dot in Hz/s^2 [range to draw from]

       --FreqResolution=<start>[,<end>|/<band>|~<plus-minus>] where <>=<8-byte real> [default: 0.1,1]
           Frequency resolution 'R' in natural units 1/Tseg such that: dFreq = R/Tseg) [range to draw from]

       --orbitasini=<start>[,<end>|/<band>|~<plus-minus>] where <>=<8-byte real> [default: 0,0]
           Binary Orbit: Projected semi-major axis in light-seconds [range to draw from]

       --orbitPeriod=<start>[,<end>|/<band>|~<plus-minus>] where <>=<8-byte real> [default: 0,0]
           Binary Orbit: Period in seconds [range to draw from]

       --orbitTp=<start>[,<end>|/<band>|~<plus-minus>] where <>=<seconds>[.<frac-seconds>][GPS] | <days>[.<frac-days>]MJD [default: 0,0]
           Binary Orbit: (true) epoch of periapsis: use 'xx.yy[GPS|MJD]' format. [range to draw from]

       --orbitArgp=<start>[,<end>|/<band>|~<plus-minus>] where <>=<8-byte real> [default: 0,0]
           Binary Orbit: Orbital argument of periapse in radians [range to draw from]

       --orbitEcc=<start>[,<end>|/<band>|~<plus-minus>] where <>=<8-byte real> [default: 0,0]
           Binary Orbit: Orbital eccentricity [range to draw from]

       --startTime=<seconds>[.<frac-seconds>][GPS] | <days>[.<frac-days>]MJD [default: 711595934]
           Start time of first segment

       --Tseg=<start>[,<end>|/<band>|~<plus-minus>] where <>=<4-byte signed integer> [default: 36000,900000]
           Coherent segment length in seconds [range to draw from]

       --numSegments=<4-byte signed integer> [default: 90]
           Number of semi-coherent segments

       --numFreqBins=<start>[,<end>|/<band>|~<plus-minus>] where <>=<4-byte signed integer> [default: 1000,100000]
           Number of frequency bins to search [range to draw from]

       --IFOs=<string>,... [default: "H1"]
           IFOs to use [list]

       --numTrials=<4-byte signed integer> [default: 1]
           Number of repeated trials to run (with randomized parameters drawn from ranges)

       --sharedWorkspace[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: TRUE]
           Use workspace sharing across segments (only used in Resampling)

       --perSegmentSFTs[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: TRUE]
           Weave vs GCT: GCT determines and loads SFT frequency ranges globally, Weave does that per segment (more efficient)

       --resampFFTPowerOf2[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: TRUE]
           For Resampling methods: enforce FFT length to be a power of two (by rounding up)

       --Dterms=<4-byte signed integer> [default: 8]
           Number of kernel terms (single-sided) in
           a) Dirichlet kernel if FstatMethod=Demod*
           b) sinc-interpolation if FstatMethod=Resamp*

       --outputInfo=<string> [default: NULL]
           Append Resampling internal info into this file

DEVELOPER OPTIONS
       --Tsft=<8-byte real> [default: 1800]
           SFT length

       --ephemEarth=<string> [default: "earth00-40-DE405.dat.gz"]
           Earth ephemeris file to use

       --ephemSun=<string> [default: "sun00-40-DE405.dat.gz"]
           Sun ephemeris file to use

       --randSeed=<4-byte signed integer> [default: 1]
           Random seed to use for rand() to draw randomized parameters.



=================================================
--- Help output for: lalpulsar_ComputeFstatLatticeCount
=================================================

NAME
       lalpulsar_ComputeFstatLatticeCount

SYNOPSIS
       lalpulsar_ComputeFstatLatticeCount --help
           Display this help page.

       lalpulsar_ComputeFstatLatticeCount -h
           Display a short usage string of available options.

       lalpulsar_ComputeFstatLatticeCount -v|--version[=verbose]
           Display (verbose) version information.

       lalpulsar_ComputeFstatLatticeCount [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

OPTIONS
       -T, --time-span=<8-byte real> [required]
           Time-span of the data set (in seconds)

       --square=<8-byte real>,... [default: NULL]
           Square parameter space: start,width,...

       --age-braking=<8-byte real>,... [default: NULL]
           Age/braking index parameter space: alpha,delta,freq,freqband,age,minbrake,maxbrake

       -X, --max-mismatch=<8-byte real> [required]
           Maximum allowed mismatch between the templates

       -L, --lattice=(Zn=cubic|Ans=An-star=optimal) [required]
           Type of lattice to use

       -M, --metric=(spindown|eye) [default: spindown]
           Type of metric to use



=================================================
--- Help output for: lalpulsar_ComputeFstatMCUpperLimit
=================================================

NAME
       lalpulsar_ComputeFstatMCUpperLimit

SYNOPSIS
       lalpulsar_ComputeFstatMCUpperLimit --help
           Display this help page.

       lalpulsar_ComputeFstatMCUpperLimit -h
           Display a short usage string of available options.

       lalpulsar_ComputeFstatMCUpperLimit -v|--version[=verbose]
           Display (verbose) version information.

       lalpulsar_ComputeFstatMCUpperLimit [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

OPTIONS
       -a, --alpha=<8-byte real> [required]
           Right ascension in radians

       -z, --alpha-band=<8-byte real> [default: 0]
           Right ascension band

       -d, --delta=<8-byte real> [required]
           Declination in radians

       -c, --delta-band=<8-byte real> [default: 0]
           Declination band

       -f, --freq=<8-byte real> [required]
           Starting frequency

       -b, --freq-band=<8-byte real> [required]
           Frequency band

       -F, --loudest-2F=<8-byte real> [required]
           Loudest 2F value in this band

       -M, --mism-hist-file=<string> [default: NULL]
           File containing the mismatch PDF histogram

       -m, --max-mismatch=<8-byte real> [default: 0]
           Maximum mismatch to scale histogram to

       -D, --sft-patt=<string> [required]
           File pattern of the input SFTs. Possibilities are:
            - '<SFT file>;<SFT file>;...', where <SFT file> may contain wildcards
            - 'list:<file containing list of SFT files>'

       -E, --ephem-earth=<string> [default: "earth00-40-DE405.dat.gz"]
           Earth ephemeris file

       -S, --ephem-sun=<string> [default: "sun00-40-DE405.dat.gz"]
           Sun ephemeris file

       -k, --rng-med-win=<4-byte signed integer> [default: 101]
           Size of the running median window

       -e, --max-rel-err=<8-byte real> [default: 0.001]
           Maximum error in h0 relative to previous value

       -r, --h0-brake=<8-byte real> [default: 0.75]
           h0 cannot change by more than this fraction of itself

       -I, --init-MC-tri=<4-byte signed integer> [default: 1000000]
           Initial number of MC int. trials

       -i, --MC-tri-incr=<8-byte real> [default: 1.5]
           Multiply number of MC int. trials by this after each step

       -Z, --MC-tri-reset=<4-byte signed integer> [default: 500]
           Reset if no convergence after this ratio of initial MC int. trials

       -R, --false-dism=<8-byte real> [default: 0.05]
           Target false dismissal rate

       -o, --output-file=<string> [default: NULL]
           Output file for the upper limit and other info (defaults to stdout)

       -B, --2F-pdf-hist-binw=<8-byte real> [default: 1]
           Bin width of the histogram of the non-central 2F distribution

       -H, --2F-pdf-hist-file=<string> [default: NULL]
           Output file for the histogram of the non-central 2F distribution

DEVELOPER OPTIONS
       --initial-h0=<8-byte real> [default: 0]
           Initial guess of h0 (default: automatic)



=================================================
--- Help output for: lalpulsar_ComputeFstatistic_v2
=================================================

NAME
       lalpulsar_ComputeFstatistic_v2

SYNOPSIS
       lalpulsar_ComputeFstatistic_v2 --help
           Display this help page.

       lalpulsar_ComputeFstatistic_v2 -h
           Display a short usage string of available options.

       lalpulsar_ComputeFstatistic_v2 -v|--version[=verbose]
           Display (verbose) version information.

       lalpulsar_ComputeFstatistic_v2 [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

OPTIONS
       -a, --Alpha=<radians>|<hours>:<minutes>:<seconds> [default: 0]
           Sky: equatorial J2000 right ascension (in radians or hours:minutes:seconds)

       -d, --Delta=<radians>|<degrees>:<minutes>:<seconds> [default: 0]
           Sky: equatorial J2000 declination (in radians or degrees:minutes:seconds)

       -R, --skyRegion=<string> [default: NULL]
           ALTERNATIVE: Sky-region polygon '(Alpha1,Delta1),(Alpha2,Delta2),...' or 'allsky'

       -f, --Freq=<8-byte real> [default: 0]
           Starting search frequency Freq in Hz

       -s, --f1dot=<8-byte real> [default: 0]
           First spindown parameter  f1dot = dFreq/dt

       --f2dot=<8-byte real> [default: 0]
           Second spindown parameter f2dot = d^2Freq/dt^2

       --f3dot=<8-byte real> [default: 0]
           Third spindown parameter  f3dot = d^3Freq/dt^3

       -z, --AlphaBand=<radians>|<hours>:<minutes>:<seconds> [default: 0]
           Sky: search band from Alpha to Alpha+AlphaBand (in radians or h:m:s)

       -c, --DeltaBand=<radians>|<degrees>:<minutes>:<seconds> [default: 0]
           Sky: search band from Delta to Delta+DeltaBand (in radians or d:m:s)

       -b, --FreqBand=<8-byte real> [default: 0]
           Search band in frequency in Hz

       -m, --f1dotBand=<8-byte real> [default: 0]
           Search band in f1dot in Hz/s

       --f2dotBand=<8-byte real> [default: 0]
           Search band in f2dot in Hz/s^2

       --f3dotBand=<8-byte real> [default: 0]
           Search band in f3dot in Hz/s^3

       -l, --dAlpha=<radians>|<hours>:<minutes>:<seconds> [default: 0.001]
           Sky: stepsize in Alpha (in radians or h:m:s)

       -g, --dDelta=<radians>|<degrees>:<minutes>:<seconds> [default: 0.001]
           Sky: stepsize in Delta (in radians or d:m:s)

       -r, --dFreq=<8-byte real> [default: 0]
           Stepsize for frequency in Hz

       -e, --df1dot=<8-byte real> [default: 0]
           Stepsize for f1dot in Hz/s

       --df2dot=<8-byte real> [default: 0]
           Stepsize for f2dot in Hz/s^2

       --df3dot=<8-byte real> [default: 0]
           Stepsize for f3dot in Hz/s^3

       --orbitasini=<8-byte real> [default: 0]
           Binary Orbit: Projected semi-major axis in light-seconds [Default: 0.0]

       --orbitPeriod=<8-byte real> [default: 0]
           Binary Orbit: Period in seconds

       --orbitTp=<seconds>[.<frac-seconds>][GPS] | <days>[.<frac-days>]MJD [default: 0]
           Binary Orbit: (true) epoch of periapsis: use 'xx.yy[GPS|MJD]' format.

       --orbitArgp=<8-byte real> [default: 0]
           Binary Orbit: Orbital argument of periapse in radians

       --orbitEcc=<8-byte real> [default: 0]
           Binary Orbit: Orbital eccentricity

       --orbitasiniBand=<8-byte real> [default: 0]
           Binary Orbit: Band in Projected semi-major axis in light-seconds [Default: 0.0]

       --orbitPeriodBand=<8-byte real> [default: 0]
           Binary Orbit: Band in Period in seconds

       --orbitTpBand=<8-byte real> [default: 0]
           Binary Orbit: Band in (true) epoch of periapsis: use 'xx.yy[GPS|MJD]' format.

       --orbitArgpBand=<8-byte real> [default: 0]
           Binary Orbit: Band in Orbital argument of periapse in radians

       --orbitEccBand=<8-byte real> [default: 0]
           Binary Orbit: Band in Orbital eccentricity

       --dorbitasini=<8-byte real> [default: 0]
           Binary Orbit: Spacing in Projected semi-major axis in light-seconds [Default: 0.0]

       --dorbitPeriod=<8-byte real> [default: 0]
           Binary Orbit: Spacing in Period in seconds

       --dorbitTp=<8-byte real> [default: 0]
           Binary Orbit: Spacing in (true) epoch of periapsis: use 'xx.yy[GPS|MJD]' format.

       --dorbitArgp=<8-byte real> [default: 0]
           Binary Orbit: Spacing in Orbital argument of periapse in radians

       --dorbitEcc=<8-byte real> [default: 0]
           Binary Orbit: Spacing in Orbital eccentricity

       -D, --DataFiles=<string> [default: NULL]
           File-pattern specifying (also multi-IFO) input SFT-files. Possibilities are:
            - '<SFT file>;<SFT file>;...', where <SFT file> may contain wildcards
            - 'list:<file containing list of SFT files>'

       --assumeSqrtSX=<string>,... [default: NULL]
           Don't estimate noise-floors but assume (stationary) per-IFO sqrt{SX} (if single value: use for all IFOs).
           Note that, unlike the historic --SignalOnly flag, this option will not lead to explicitly adding a +4 'correction' for noiseless SFTs to the output F-statistic.

       -F, --TwoFthreshold=<8-byte real> [default: 0]
           Set the threshold for selection of 2F

       --gridType=<4-byte signed integer> [default: 0]
           Grid: 0=flat, 1=isotropic, 2=metric, 3=skygrid-file, 6=grid-file, 8=spin-square, 9=spin-age-brk

       -M, --metricType=<4-byte signed integer> [default: 0]
           Metric: 0=none,1=Ptole-analytic,2=Ptole-numeric, 3=exact

       -X, --metricMismatch=<8-byte real> [default: 0.02]
           Maximal allowed mismatch for metric tiling

       --outputLogfile=<string> [default: NULL]
           Name of log-file identifying the code + search performed

       --gridFile=<string> [default: NULL]
           Load grid from this file: sky-grid or full-grid depending on --gridType.

       --refTime=<seconds>[.<frac-seconds>][GPS] | <days>[.<frac-days>]MJD [default: 0]
           Reference SSB epoch for pulsar-parameters: use 'xx.yy[GPS|MJD]' format [Default: startTime]

       --outputFstat=<string> [default: NULL]
           Output-file for F-statistic field over the parameter-space

       --outputLoudest=<string> [default: NULL]
           Loudest F-statistic candidate + estimated MLE amplitudes

       --outputFstatHist=<string> [default: NULL]
           Output-file for a discrete histogram of all Fstatistic values

       --FstatHistBin=<8-byte real> [default: 0.1]
           Width of an Fstatistic histogram bin

       --NumCandidatesToKeep=<4-byte signed integer> [default: 0]
           Number of Fstat 'candidates' to keep. (0 = All)

       --FracCandidatesToKeep=<8-byte real> [default: 0]
           Fraction of Fstat 'candidates' to keep.

       --clusterOnScanline=<4-byte signed integer> [default: 0]
           Neighbors on each side for finding 1D local maxima on scanline

       --minStartTime=<seconds>[.<frac-seconds>][GPS] | <days>[.<frac-days>]MJD [default: 0]
           Only use SFTs with timestamps starting from (including) this epoch (format 'xx.yy[GPS|MJD]') 

       --maxStartTime=<seconds>[.<frac-seconds>][GPS] | <days>[.<frac-days>]MJD [default: 2147483647]
           Only use SFTs with timestamps up to (excluding) this epoch (format 'xx.yy[GPS|MJD]')

       --outputFstatAtoms=<string> [default: NULL]
           Output filename *base* for F-statistic 'atoms' {a,b,Fa,Fb}_alpha. One file per doppler-point.

       --outputSingleFstats[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           In multi-detector case, also output single-detector F-stats?

       --computeBSGL[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Compute and output line-robust statistic BSGL 

       --Fstar0=<8-byte real> [default: 0]
           BSGL: transition-scale parameter 'Fstar0'

       --oLGX=<string>,... [default: NULL]
           BSGL: prior per-detector line-vs-Gauss odds 'oLGX' (Defaults to oLGX=1/Ndet)

       --BSGLthreshold=<8-byte real> [default: -1.797693134862316e+308]
           BSGL threshold for candidate output

       --outputTransientStats=<string> [default: NULL]
           TransientCW: Output filename for transient-CW statistics.

       --transient-WindowType=<string> [default: "none"]
           TransientCW: Type of transient signal window to use. ('none', 'rect', 'exp').

       --transient-t0Epoch=<seconds>[.<frac-seconds>][GPS] | <days>[.<frac-days>]MJD [default: 0]
           TransientCW: Earliest start-time for transient window search, in seconds (format 'xx.yy[GPS|MJD]')

       --transient-t0Offset=<4-byte unsigned integer> [default: 0]
           TransientCW: Earliest start-time for transient window search, as offset in seconds from dataStartGPS

       --transient-t0Band=<4-byte unsigned integer> [default: 0]
           TransientCW: Range of GPS start-times to search in transient search, in seconds

       --transient-dt0=<4-byte signed integer> [default: 0]
           TransientCW: Step-size in transient-CW start-time in seconds [Default:Tsft]

       --transient-tau=<4-byte unsigned integer> [default: 0]
           TransientCW: Minimal transient-CW duration timescale, in seconds

       --transient-tauBand=<4-byte unsigned integer> [default: 0]
           TransientCW: Range of transient-CW duration timescales to search, in seconds

       --transient-dtau=<4-byte signed integer> [default: 0]
           TransientCW: Step-size in transient-CW duration timescale, in seconds [Default:Tsft]

       --FstatMethod=(DemodGeneric|DemodOptC|DemodSSE=DemodBest|ResampGeneric=ResampBest) [default: DemodBest]
           F-statistic method to use

       --countTemplates[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Count number of templates (if supported) instead of search

       --outputGrid=<string> [default: NULL]
           Output-file for parameter-space grid (without running a search!)

DEVELOPER OPTIONS
       --RankingStatistic=<string> [default: "F"]
           Rank toplist candidates according to 'F' or 'BSGL' statistic

       --BSGLlogcorr[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: TRUE]
           BSGL: include log-correction terms (slower) or not (faster)

       --outputTransientStatsAll=<string> [default: NULL]
           TransientCW: Output filename for transient-CW statistics -- including the whole (t0,tau) grid for each candidate -- WARNING: CAN BE HUGE!.

       -W, --UseNoiseWeights[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: TRUE]
           Use per-SFT noise weights

       --ephemEarth=<string> [default: "earth00-40-DE405.dat.gz"]
           Earth ephemeris file to use

       --ephemSun=<string> [default: "sun00-40-DE405.dat.gz"]
           Sun ephemeris file to use

       --SSBprecision=(newtonian|relativistic|relativisticopt|DMoff) [default: relativisticopt]
           Precision to use for time-transformation to SSB

       -k, --RngMedWindow=<4-byte signed integer> [default: 101]
           Running-Median window size

       -t, --Dterms=<4-byte signed integer> [default: 8]
           Number of kernel terms (single-sided) to use in
           a) Dirichlet kernel if FstatMethod=Demod*
           b) sinc-interpolation kernel if FstatMethod=Resamp*

       -w, --workingDir=<string> [default: "."]
           Directory to use as work directory.

       --timerCount=<8-byte real> [default: 10]
           N: Output progress/timer info every N seconds

       --projectMetric[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: TRUE]
           Use projected metric on Freq=const subspact

       --strictSpindownBounds[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           suppress spindown grid points outside the [fkdot,fkdotBand] ranges? (only supported for --gridType=8)

       --spindownAge=<8-byte real> [default: 0]
           Spindown age for --gridType=9

       --minBraking=<8-byte real> [default: 0]
           Minimum braking index for --gridType=9

       --maxBraking=<8-byte real> [default: 0]
           Maximum braking index for --gridType=9

       --transient-useFReg[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           FALSE: use 'standard' e^F for marginalization, if TRUE: use e^FReg = (1/D)*e^F (BAD)

       --outputTiming=<string> [default: NULL]
           Append timing measurements and parameters into this file

       --outputFstatTiming=<string> [default: NULL]
           Append F-statistic timing measurements and parameters into this file

       --resampFFTPowerOf2[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: TRUE]
           For Resampling methods: enforce FFT length to be a power of two (by rounding up)

       --allowedMismatchFromSFTLength=<8-byte real> [default: 0]
           Maximum allowed mismatch from SFTs being too long [Default: what's hardcoded in XLALFstatMaximumSFTLength]

       --injectionSources=<string>,... [default: NULL]
           Source parameters to inject for simulated signal(s).
           This is a comma-separated list of file patterns for configuration files,
           or else direct configuration strings in the following format:
             * Enclose with curly braces ('{}').
             * Give pulsar parameters as key=value pairs with a '=' separator.
             * Separate each key=value pair with a semicolon (';').
           Available parameters are:
             * Required parameters: Alpha, Delta, Freq, refTime
             * Optional parameters:
               - Injection amplitudes: either (h0, cosi) or (aPlus, aCross), psi, phi0
               - Higher-order spindowns: f1dot, f2dot, ... f6dot
               - Binary sources: orbitTp, orbitArgp, orbitasini, orbitEcc, orbitPeriod
               - Transient injections: transientWindowType, transientStartTime, transientTau
           Examples:
             * '{Alpha=0; Delta=0; Freq=50; f1dot=1e-11; f2dot=0; refTime=1000000000; h0=1.00000000e-23; cosi=0; psi=0; phi0=0;}'
             * 'file1.dat,someFiles*.txt,{Alpha=0;Delta=0;Freq=0;refTime=1000000000;},someOtherFiles[0-9].dat'

       --injectSqrtSX=<string>,... [default: NULL]
           Generate Gaussian Noise SFTs on-the-fly: CSV list of detectors' noise-floors sqrt{Sn}

       --IFOs=<string>,... [default: NULL]
           CSV list of detectors, eg. "H1,H2,L1,G1, ...", when no SFT files are specified

       --timestampsFiles=<string>,... [default: NULL]
           Files containing timestamps for the generated SFTs when using `--injectSqrtSX'. Arguments correspond to the detectors given by `--IFOs'; for example, if `--IFOs' is set to 'H1,L1', then an argument of 't1.txt,t2.txt' to this option will read H1 timestamps from the file 't1.txt', and L1 timestamps from the file 't2.txt'. The timebase of the generated SFTs is specified by `--Tsft'. 

       --Tsft=<8-byte real> [default: 1800]
           Generate SFTs with this timebase (in seconds) instead of loading from files. Requires --injectSqrtSX, --IFOs, --timestampsFiles

       --randSeed=<4-byte signed integer> [default: 0]
           Specify random-number seed for reproducible noise (0 means use /dev/urandom for seeding).



=================================================
--- Help output for: lalpulsar_ComputePSD
=================================================

NAME
       lalpulsar_ComputePSD

SYNOPSIS
       lalpulsar_ComputePSD --help
           Display this help page.

       lalpulsar_ComputePSD -h
           Display a short usage string of available options.

       lalpulsar_ComputePSD -v|--version[=verbose]
           Display (verbose) version information.

       lalpulsar_ComputePSD [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

OPTIONS
       -i, --inputData=<string> [required]
           Input SFT pattern. Possibilities are:
            - '<SFT file>;<SFT file>;...', where <SFT file> may contain wildcards
            - 'list:<file containing list of SFT files>'

       -o, --outputPSD=<string> [default: NULL]
           Output PSD into this file

       --outputQ=<string> [default: NULL]
           Output the 'data-quality factor' Q(f) into this file

       --outputSpectBname=<string> [default: NULL]
           Filename-base for (binary) spectrograms (one per IFO)

       --Freq=<8-byte real> [default: 0]
           physical start frequency to compute PSD for (excluding rngmed wings)

       --FreqBand=<8-byte real> [default: 0]
           physical frequency band to compute PSD for (excluding rngmed wings)

       -s, --startTime=<8-byte real> [default: 0]
           SFT timestamps must be >= this GPS timestamp

       -e, --endTime=<8-byte real> [default: 0]
           SFT timestamps must be < this GPS timestamp

       -t, --timeStampsFile=<string> [default: NULL]
           Time-stamps file

       --IFO=<string> [default: NULL]
           Detector filter

       -w, --blocksRngMed=<4-byte signed integer> [default: 101]
           Running Median window size

       -S, --PSDmthopSFTs=(arithsum|arithmean|arithmedian|harmsum|harmmean|powerminus2sum|powerminus2mean|min|max|0|1|2|3|4|5|6|7|8) [default: harmmean]
           For PSD, type of math. operation over SFTs, can be given by string names (preferred) or legacy numbers: 
           arithsum (0), arithmean (1), arithmedian (2), harmsum (3), harmmean (4), powerminus2sum (5), powerminus2mean (6), min (7), max (8)

       -I, --PSDmthopIFOs=(arithsum|arithmean|arithmedian|harmsum|harmmean|powerminus2sum|powerminus2mean|min|max|0|1|2|3|4|5|6|7|8) [default: harmsum]
           For PSD, type of math. op. over IFOs: see --PSDmthopSFTs

       -n, --outputNormSFT[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Output normalised SFT power to PSD file

       -N, --nSFTmthopSFTs=(arithsum|arithmean|arithmedian|harmsum|harmmean|powerminus2sum|powerminus2mean|min|max|0|1|2|3|4|5|6|7|8) [default: arithmean]
           For norm. SFT, type of math. op. over SFTs: see --PSDmthopSFTs

       -J, --nSFTmthopIFOs=(arithsum|arithmean|arithmedian|harmsum|harmmean|powerminus2sum|powerminus2mean|min|max|0|1|2|3|4|5|6|7|8) [default: max]
           For norm. SFT, type of math. op. over IFOs: see --PSDmthopSFTs

       --normalizeByTotalNumSFTs[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           For harmsum/powerminus2sum, apply normalization factor from total number of SFTs over all IFOs (mimics harmmean/powerminus2mean over a combined set of all SFTs)

       -z, --binSize=<4-byte signed integer> [default: 1]
           Bin the output into bins of size (in number of bins)

       -Z, --binSizeHz=<8-byte real> [default: 0]
           Bin the output into bins of size (in Hz)

       -A, --PSDmthopBins=(arithsum|arithmean|arithmedian|harmsum|harmmean|powerminus2sum|powerminus2mean|min|max|0|1|2|3|4|5|6|7|8) [default: arithmedian]
           If binning, for PSD type of math. op. over bins: see --PSDmthopSFTs

       -B, --nSFTmthopBins=(arithsum|arithmean|arithmedian|harmsum|harmmean|powerminus2sum|powerminus2mean|min|max|0|1|2|3|4|5|6|7|8) [default: max]
           If binning, for norm. SFT type of math. op. over bins: see --PSDmthopSFTs

       -p, --binStep=<4-byte signed integer> [default: 1]
           If binning, step size to move bin along (in number of bins, default is bin size)

       -P, --binStepHz=<8-byte real> [default: 0]
           If binning, step size to move bin along (in Hz, default is bin size)

       -E, --outFreqBinEnd[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Output the end frequency of each bin

       -m, --maxBinsClean=<4-byte signed integer> [default: 100]
           Maximum Cleaning Bins

       --linefiles=<string>,... [default: NULL]
           Comma separated list of linefiles (names must contain IFO name)

       -d, --dumpMultiPSDVector[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Output multi-PSD vector over IFOs, timestamps, and frequencies into file(s) '<outputPSD>-IFO'

DEVELOPER OPTIONS
       -f, --fStart=<8-byte real> [default: -1]
           Start Frequency to load from SFT and compute PSD, including rngmed wings (BETTER: use --Freq instead)

       -b, --fBand=<8-byte real> [default: 0]
           Frequency Band to load from SFT and compute PSD, including rngmed wings (BETTER: use --FreqBand instead)



=================================================
--- Help output for: lalpulsar_CopyPublicSFTs
=================================================
usage: lalpulsar_CopyPublicSFTs [-h] [-p PROCESSES] [-n] [--readme-md]
                                source_directory dest_directory

Copy SFTs between directories. The destination directory is organised
following the convention detailed in the SFT spec (T040164).

positional arguments:
  source_directory      SFT source directory
  dest_directory        SFT destination directory

options:
  -h, --help            show this help message and exit
  -p PROCESSES, --processes PROCESSES
                        number of copying processes
  -n, --no-validate     do not validate destination SFTs
  --readme-md           write README.md in the destination directory


=================================================
--- Help output for: lalpulsar_DriveHoughMulti
=================================================

NAME
       lalpulsar_DriveHoughMulti

SYNOPSIS
       lalpulsar_DriveHoughMulti --help
           Display this help page.

       lalpulsar_DriveHoughMulti -h
           Display a short usage string of available options.

       lalpulsar_DriveHoughMulti -v|--version[=verbose]
           Display (verbose) version information.

       lalpulsar_DriveHoughMulti [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

OPTIONS
       -f, --f0=<8-byte real> [default: 310]
           Start search frequency

       -b, --freqBand=<8-byte real> [default: 0.05]
           Search frequency band

       --startTime=<8-byte real> [default: 6.953271789467609e-310]
           GPS start time of observation (SFT timestamps must be >= this)

       --endTime=<8-byte real> [default: 6.951869724526864e-310]
           GPS end time of observation (SFT timestamps must be < this)

       --timeStampsFile=<string> [default: NULL]
           Input time-stamps file

       --skyRegion=<string> [default: NULL]
           sky-region polygon (or 'allsky')

       --dAlpha=<8-byte real> [default: 0.2]
           Resolution for flat or isotropic coarse grid (rad)

       --dDelta=<8-byte real> [default: 0.2]
           Resolution for flat or isotropic coarse grid (rad)

       --skyfile=<string> [default: "./skypatchfile"]
           Alternative: input skypatch file

       --peakThreshold=<8-byte real> [default: 1.6]
           Peak selection threshold

       --weighAM[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: TRUE]
           Use amplitude modulation weights

       --weighNoise[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: TRUE]
           Use SFT noise weights

       --keepBestSFTs=<4-byte signed integer> [default: 1]
           Number of best SFTs to use (default--keep all)

       --printLog[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Print Log file

       -E, --earthEphemeris=<string> [default: "/home/badkri/lscsoft/share/lal/earth05-09.dat"]
           Earth Ephemeris file

       -S, --sunEphemeris=<string> [default: "/home/badkri/lscsoft/share/lal/sun05-09.dat"]
           Sun Ephemeris file

       -D, --sftData=<string> [required]
           SFT filename pattern. Possibilities are:
            - '<SFT file>;<SFT file>;...', where <SFT file> may contain wildcards
            - 'list:<file containing list of SFT files>'

       -o, --dirnameOut=<string> [default: "./outMulti"]
           Output directory

       --fbasenameOut=<string> [default: "HM"]
           Output file basename

       --binsHisto=<4-byte signed integer> [default: 1000]
           No. of bins for histogram

       --linefiles=<string>,... [default: NULL]
           Comma separated List of linefiles (filenames must contain IFO name)

       --nfSizeCylinder=<4-byte signed integer> [default: 21]
           Size of cylinder of PHMDs

       --nfLUTvalidity=<4-byte signed integer> [default: 0]
           Frequency bins validity of LUT (default most restrictive value)

       --nSpinUp=<4-byte signed integer> [default: 0]
           Num of bins for Spin-up in PHMDs

       -p, --pixelFactor=<8-byte real> [default: 2]
           sky resolution=1/v*pixelFactor*f*Tcoh

       --numCand=<4-byte signed integer> [default: 1]
           No. of toplist candidates

       --printExtraInfo[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Print HoughMaps, HoughStatistics, expected number count stdev

       --chiSqBins=<4-byte signed integer> [default: 8]
           Number of chi-square bins for veto tests

       --enableChi2[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Print Chi2 value for each element in the Toplist

       --spindownJump=<4-byte signed integer> [default: 1]
           Jump to the next spin-down being analyzed (to avoid doing them all)

       --numSkyPartitions=<4-byte signed integer> [default: 0]
           Number of (equi-)partitions to split skygrid into

       --partitionIndex=<4-byte signed integer> [default: 0]
           Index [0,xnumSkyPartitions-1] of sky-partition to generate

       --refTime=<8-byte real> [default: 6.951869724526864e-310]
           GPS reference time of observation

       --deltaF1dot=<8-byte real> [default: 4.940656458412465e-324]
           (Step size for f1dot)*Tcoh [Default: 1/Tobs]

       --EnableToplistPatch[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Enables a toplist per Patch, requires to enableChi2

DEVELOPER OPTIONS
       --blocksRngMed=<4-byte signed integer> [default: 101]
           Running Median block size

       --maxBinsClean=<4-byte signed integer> [default: 100]
           Maximum number of bins in cleaning



=================================================
--- Help output for: lalpulsar_FstatMetric_v2
=================================================

NAME
       lalpulsar_FstatMetric_v2

SYNOPSIS
       lalpulsar_FstatMetric_v2 --help
           Display this help page.

       lalpulsar_FstatMetric_v2 -h
           Display a short usage string of available options.

       lalpulsar_FstatMetric_v2 -v|--version[=verbose]
           Display (verbose) version information.

       lalpulsar_FstatMetric_v2 [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

OPTIONS
       -I, --IFOs=<string>,... [default: "H1"]
           CSV list of detectors, eg. "H1,H2,L1,G1, ..." 

       --sqrtSX=<string>,... [default: NULL]
           [for F-metric weights] CSV list of detectors' noise-floors sqrt{Sn}

       -a, --Alpha=<radians>|<hours>:<minutes>:<seconds> [default: 0]
           Sky: equatorial J2000 right ascension (in radians or hours:minutes:seconds)

       -d, --Delta=<radians>|<degrees>:<minutes>:<seconds> [default: 0]
           Sky: equatorial J2000 declination (in radians or degrees:minutes:seconds)

       -f, --Freq=<8-byte real> [default: 100]
           Target frequency

       -s, --f1dot=<8-byte real> [default: 0]
           First spindown-value df/dt

       --f2dot=<8-byte real> [default: 0]
           Second spindown-value d2f/dt2

       --f3dot=<8-byte real> [default: 0]
           Third spindown-value d3f/dt3

       --orbitasini=<8-byte real> [default: 0]
           Target projected semimajor axis of binary orbit (Units: light seconds)

       --orbitPeriod=<8-byte real> [default: 0]
           Target period of binary orbit (Units: s).

       --orbitTp=<seconds>[.<frac-seconds>][GPS] | <days>[.<frac-days>]MJD [default: 0]
           Target time of periapse passage of the CW source in a binary orbit (Units: GPS seconds)

       --orbitArgp=<8-byte real> [default: 0]
           Target argument of periapse of binary orbit (Units: rad)

       --orbitEcc=<8-byte real> [default: 0]
           Target eccentricity of binary orbit (Units: none)

       --refTime=<seconds>[.<frac-seconds>][GPS] | <days>[.<frac-days>]MJD [default: -1]
           Reference epoch for phase-evolution parameters (format 'xx.yy[GPS|MJD]'). [0=startTime, default=mid-time]

       -t, --startTime=<seconds>[.<frac-seconds>][GPS] | <days>[.<frac-days>]MJD [default: 714180733]
           Start time of observation (format 'xx.yy[GPS|MJD]')

       -T, --duration=<8-byte real> [default: 36000]
           Duration of observation in seconds

       -N, --Nseg=<4-byte signed integer> [default: 1]
           Compute semi-coherent metric for this number of segments within 'duration'

       --segmentList=<string> [default: NULL]
           ALTERNATIVE: specify segment file with format: repeated lines <startGPS endGPS duration[h] NumSFTs>

       --ephemEarth=<string> [default: "earth00-40-DE405.dat.gz"]
           Earth ephemeris file to use

       --ephemSun=<string> [default: "sun00-40-DE405.dat.gz"]
           Sun ephemeris file to use

       --h0=<8-byte real> [default: 1]
           GW amplitude h0

       --cosi=<8-byte real> [default: 0]
           Pulsar orientation-angle cos(iota) [-1,1]

       --psi=<8-byte real> [default: 0]
           Wave polarization-angle psi [0, pi]

       --phi0=<8-byte real> [default: 0]
           GW initial phase phi_0 [0, 2pi]

       --metricType=<4-byte signed integer> [default: 0]
           type of metric to compute: 0=phase-metric, 1=F-metric(s), 2=both

       -o, --outputMetric=<string> [default: NULL]
           Output the metric components (in octave format) into this file.

       --projection=<4-byte signed integer> [default: 0]
           Project onto subspace orthogonal to this axis: 0=none, 1=1st-coord, 2=2nd-coord etc

       -c, --coords=<string>,... [default: "freq","alpha","delta","f1dot"]
           Doppler-coordinates to compute metric in (see --coordsHelp)

       --coordsHelp[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           output help-string explaining all the possible Doppler-coordinate names for --coords

DEVELOPER OPTIONS
       --detMotionStr=<string> [default: "spin+orbit"]
           Detector-motion string: S|O|S+O where S=spin|spinz|spinxy and O=orbit|ptoleorbit

       --approxPhase[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Use an approximate phase-model, neglecting Roemer delay in spindown coordinates (or orders >= 1)



=================================================
--- Help output for: lalpulsar_HierarchSearchGCT
=================================================

NAME
       lalpulsar_HierarchSearchGCT

SYNOPSIS
       lalpulsar_HierarchSearchGCT --help
           Display this help page.

       lalpulsar_HierarchSearchGCT -h
           Display a short usage string of available options.

       lalpulsar_HierarchSearchGCT -v|--version[=verbose]
           Display (verbose) version information.

       lalpulsar_HierarchSearchGCT [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

OPTIONS
       --log[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Write log file

       --semiCohToplist[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: TRUE]
           Print toplist of semicoherent candidates

       --DataFiles1=<string> [required]
           1st SFT file pattern. Possibilities are:
            - '<SFT file>;<SFT file>;...', where <SFT file> may contain wildcards
            - 'list:<file containing list of SFT files>'

       --skyRegion=<string> [default: "allsky"]
           sky-region polygon (or 'allsky')

       --numSkyPartitions=<4-byte signed integer> [default: 0]
           No. of (equi-)partitions to split skygrid into

       --partitionIndex=<4-byte signed integer> [default: 0]
           Index [0,numSkyPartitions-1] of sky-partition to generate

       --skyGridFile=<string> [default: NULL]
           sky-grid file

       --dAlpha=<8-byte real> [default: 0.001]
           Resolution for flat or isotropic coarse grid

       --dDelta=<8-byte real> [default: 0.001]
           Resolution for flat or isotropic coarse grid

       -f, --Freq=<8-byte real> [default: 100]
           Start search frequency

       --dFreq=<8-byte real> [default: 0]
           Frequency resolution (required if nonzero FreqBand)

       -b, --FreqBand=<8-byte real> [default: 0]
           Search frequency band

       --f1dot=<8-byte real> [default: 0]
           Spindown parameter

       --df1dot=<8-byte real> [default: 0]
           Spindown resolution (required if nonzero f1dotBand)

       --f1dotBand=<8-byte real> [default: 0]
           Spindown Range

       --f2dot=<8-byte real> [default: 0]
           2nd spindown parameter

       --df2dot=<8-byte real> [default: 0]
           2nd spindown resolution (required if nonzero f2dotBand)

       --f2dotBand=<8-byte real> [default: 0]
           2nd spindown Range

       --f3dot=<8-byte real> [default: 0]
           3rd spindown parameter

       --df3dot=<8-byte real> [default: 0]
           3rd spindown resolution (required if nonzero f3dotBand)

       --f3dotBand=<8-byte real> [default: 0]
           3rd spindown Range

       --peakThrF=<8-byte real> [default: 2.6]
           Fstat Threshold

       -m, --mismatch1=<8-byte real> [default: 0.3]
           1st stage mismatch

       --gridType1=<4-byte signed integer> [default: 2]
           0=flat, 1=isotropic, 2=metric, 3=file

       --metricType1=<4-byte signed integer> [default: 1]
           0=none, 1=Ptole-analytic, 2=Ptole-numeric, 3=exact

       -g, --gammaRefine=<4-byte signed integer> [default: 1]
           Refinement of fine grid (default: use segment times)

       -G, --gamma2Refine=<4-byte signed integer> [default: 1]
           Refinement of f2dot fine grid (default: use segment times, -1=use gammaRefine)

       -o, --fnameout=<string> [default: "./HS_GCT.out"]
           Output filename

       --fnameChkPoint=<string> [default: NULL]
           Checkpoint filename

       -n, --nCand1=<4-byte signed integer> [default: 10]
           No. of candidates to output

       --printCand1[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Print 1st stage candidates

       --refTime=<8-byte real> [default: 0]
           Ref. time for pulsar pars [Default: mid-time]

       --ephemEarth=<string> [default: "earth00-40-DE405.dat.gz"]
           Location of Earth ephemeris file

       --ephemSun=<string> [default: "sun00-40-DE405.dat.gz"]
           Location of Sun ephemeris file

       --minStartTime1=<8-byte real> [default: 0]
           1st stage: Only use SFTs with timestamps starting from (including) this GPS time

       --maxStartTime1=<8-byte real> [default: 2147483647]
           1st stage: Only use SFTs with timestamps up to (excluding) this GPS time

       --printFstat1[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Print 1st stage Fstat vectors

       --assumeSqrtSX=<string>,... [default: NULL]
           Don't estimate noise-floors but assume (stationary) per-IFO sqrt{SX} (if single value: use for all IFOs)

       --nStacksMax=<4-byte signed integer> [default: 1]
           Maximum No. of segments

       -T, --tStack=<8-byte real> [default: 0]
           Duration of segments (sec)

       --segmentList=<string> [default: NULL]
           ALTERNATIVE: file containing a segment list: lines of form <startGPS endGPS duration[h] NumSFTs>

       --recalcToplistStats[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Additional analysis for toplist candidates, recalculate 2F, 2FX at finegrid

       --loudestSegOutput[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Output extra info about loudest segment; (requires --recalcToplistStats)

       --computeBSGL[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Compute and output line-robust statistic (BSGL)

       --Fstar0sc=<8-byte real> [default: 0]
           BSGL: semi-coh transition-scale parameter 'Fstar0sc=Nseg*Fstar0coh'

       --oLGX=<string>,... [default: NULL]
           BSGL: prior per-detector line-vs-Gauss odds 'oLGX' (Defaults to oLGX=1/Ndet)

       --getMaxFperSeg[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Compute and output maximum F and FX over segments

       --SortToplist=<4-byte signed integer> [default: 0]
           Sort toplist by: 0=Fstat, 1=nc, 2=B_S/GL, 3='Fstat + B_S/GL', 4=B_S/GLtL, 5=B_tS/GLtL, 6='B_S/GL + B_S/GLtL + B_tS/GLtL', 7='Fstat + B_S/GLtL + B_tS/GLtL' 

       --FstatMethod=(DemodGeneric|DemodOptC|DemodSSE=DemodBest|ResampGeneric=ResampBest) [default: DemodBest]
           F-statistic method to use

       --FstatMethodRecalc=(DemodGeneric|DemodOptC|DemodSSE=DemodBest|ResampGeneric=ResampBest) [default: DemodBest]
           F-statistic method to use for recalc

DEVELOPER OPTIONS
       --BSGLlogcorr[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           BSGL: include log-correction terms (slower) or not (faster)

       --blocksRngMed=<4-byte signed integer> [default: 101]
           RngMed block size

       --SSBprecision=(newtonian|relativistic|relativisticopt|DMoff) [default: relativisticopt]
           Precision for SSB transform

       --Dterms=<4-byte signed integer> [default: 8]
           Number of kernel terms (single-sided) to use in
           a) Dirichlet kernel if FstatMethod=Demod*
           b) sinc-interpolation kernel if FstatMethod=Resamp*

       --DtermsRecalc=<4-byte signed integer> [default: 8]
           Same as 'Dterms', applies to 'Recalc' step

       --skyPointIndex=<4-byte signed integer> [default: -1]
           Only analyze this skypoint in grid

       --outputTiming=<string> [default: NULL]
           Append timing information into this file

       --outputTimingDetails=<string> [default: NULL]
           Append detailed averaged F-stat timing information to this file

       --loudestTwoFPerSeg[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Output loudest per-segment Fstat values into file '_loudestTwoFPerSeg'

       --injectionSources=<string>,... [default: NULL]
           Source parameters to inject for simulated signal(s).
           This is a comma-separated list of file patterns for configuration files,
           or else direct configuration strings in the following format:
             * Enclose with curly braces ('{}').
             * Give pulsar parameters as key=value pairs with a '=' separator.
             * Separate each key=value pair with a semicolon (';').
           Available parameters are:
             * Required parameters: Alpha, Delta, Freq, refTime
             * Optional parameters:
               - Injection amplitudes: either (h0, cosi) or (aPlus, aCross), psi, phi0
               - Higher-order spindowns: f1dot, f2dot, ... f6dot
               - Binary sources: orbitTp, orbitArgp, orbitasini, orbitEcc, orbitPeriod
               - Transient injections: transientWindowType, transientStartTime, transientTau
           Examples:
             * '{Alpha=0; Delta=0; Freq=50; f1dot=1e-11; f2dot=0; refTime=1000000000; h0=1.00000000e-23; cosi=0; psi=0; phi0=0;}'
             * 'file1.dat,someFiles*.txt,{Alpha=0;Delta=0;Freq=0;refTime=1000000000;},someOtherFiles[0-9].dat'



=================================================
--- Help output for: lalpulsar_HierarchicalSearch
=================================================

NAME
       lalpulsar_HierarchicalSearch

SYNOPSIS
       lalpulsar_HierarchicalSearch --help
           Display this help page.

       lalpulsar_HierarchicalSearch -h
           Display a short usage string of available options.

       lalpulsar_HierarchicalSearch -v|--version[=verbose]
           Display (verbose) version information.

       lalpulsar_HierarchicalSearch [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

OPTIONS
       --log[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Write log file

       --method=<4-byte signed integer> [default: -1]
           0=Hough, 1=stackslide, -1=fstat

       --semiCohToplist[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Print semicoh toplist?

       --useWeights[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Weight each stack using noise and AM?

       --DataFiles1=<string> [required]
           1st SFT file pattern. Possibilities are:
            - '<SFT file>;<SFT file>;...', where <SFT file> may contain wildcards
            - 'list:<file containing list of SFT files>'

       --skyRegion=<string> [default: "allsky"]
           Sky-region by polygon of form '(ra1,dec1),(ra2,dec2),(ra3,dec3),...' or 'allsky'

       --numSkyPartitions=<4-byte signed integer> [default: 0]
           Number of (equi-)partitions to split skygrid into

       --partitionIndex=<4-byte signed integer> [default: 0]
           Index [0,numSkyPartitions-1] of sky-partition to generate

       -f, --Freq=<8-byte real> [default: 310]
           Start search frequency

       --dFreq=<8-byte real> [default: 0]
           Frequency resolution (default=1/Tstack)

       -b, --FreqBand=<8-byte real> [default: 0.01]
           Search frequency band

       --f1dot=<8-byte real> [default: 0]
           Spindown parameter

       --df1dot=<8-byte real> [default: 0]
           Spindown resolution (default=1/Tstack^2)

       --f1dotBand=<8-byte real> [default: 0]
           Spindown Range

       --nf1dotRes=<4-byte signed integer> [default: 1]
           No.of residual fdot values (default=nStacks)

       --nStacksMax=<4-byte signed integer> [default: 1]
           Maximum No. of 1st stage stacks

       --tStack=<8-byte real> [required]
           Duration of 1st stage stacks (sec)

       --mismatch1=<8-byte real> [default: 0.2]
           1st stage mismatch

       --gridType1=<4-byte signed integer> [default: 2]
           0=flat, 1=isotropic, 2=metric, 3=file

       --metricType1=<4-byte signed integer> [default: 1]
           0=none, 1=Ptole-analytic, 2=Ptole-numeric, 3=exact

       --skyGridFile=<string> [default: NULL]
           sky-grid file

       --dAlpha=<8-byte real> [default: 0.001]
           Resolution for flat or isotropic coarse grid

       --dDelta=<8-byte real> [default: 0.001]
           Resolution for flat or isotropic coarse grid

       --pixelFactor=<8-byte real> [default: 2]
           Semi coh. sky resolution = 1/v*pixelFactor*f*Tcoh

       --semiCohPatchX=<8-byte real> [default: 0]
           Semi coh. sky grid size (default = 1/f*Tcoh*Vepi)

       --semiCohPatchY=<8-byte real> [default: 0]
           Semi coh. sky grid size (default = 1/f*Tcoh*Vepi)

       -o, --fnameout=<string> [default: "./out/HS.dat"]
           Output fileneme

       --peakThrF=<8-byte real> [default: 2.6]
           Fstat Threshold

       --nCand1=<4-byte signed integer> [default: 5]
           No.of 1st stage candidates to be followed up

       --threshold1=<8-byte real> [default: 0]
           Threshold on significance for 1st stage (if no toplist)

       --printCand1[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Print 1st stage candidates

       --refTime=<8-byte real> [default: 0]
           Ref. time for pulsar pars [Default: mid-time]

       --ephemEarth=<string> [default: "earth00-40-DE405.dat.gz"]
           Location of Earth ephemeris file

       --ephemSun=<string> [default: "sun00-40-DE405.dat.gz"]
           Location of Sun ephemeris file

       --minStartTime1=<8-byte real> [default: 0]
           1st stage: Only use SFTs with timestamps starting from (including) this GPS time

       --maxStartTime1=<8-byte real> [default: 2147483647]
           1st stage: Only use SFTs with timestamps up to (excluding) this GPS time

       --printFstat1[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Print 1st stage Fstat vectors

DEVELOPER OPTIONS
       --blocksRngMed=<4-byte signed integer> [default: 101]
           RngMed block size

       --SSBprecision=(newtonian|relativistic|relativisticopt|DMoff) [default: relativisticopt]
           Precision for SSB transform

       --printMaps[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Print Hough maps -- for debugging

       --printGrid[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Print Hough fine grid -- for debugging

       --dumpLUT[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Print Hough look-up-tables -- for debugging

       --validateLUT[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Validate Hough look-up-tables -- for debugging

       --printStats[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Print Hough map statistics

       --Dterms=<4-byte signed integer> [default: 8]
           No.of terms to keep in Dirichlet Kernel

       --skyPointIndex=<4-byte signed integer> [default: -1]
           Only analyze this skypoint in grid

       --dopplerMax=<8-byte real> [default: 0.000105]
           Max Doppler shift

       --useToplist1[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Use toplist for 1st stage candidates?

       --df1dotRes=<8-byte real> [default: 0]
           Resolution in residual fdot values (default=df1dot/nf1dotRes)

       --correctFreqs[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: TRUE]
           Correct candidate output frequencies (ie fix bug #147). Allows reproducing 'historical results'

       --device=<4-byte signed integer> [default: -1]
           GPU device id



=================================================
--- Help output for: lalpulsar_MakeSFTDAG
=================================================
usage: lalpulsar_MakeSFTDAG [-h] -O OBSERVING_RUN [-K {RUN,AUX,SIM,DEV}]
                            [-R OBSERVING_REVISION] [-X MISC_DESC]
                            [-a ANALYSIS_START_TIME] [-b ANALYSIS_END_TIME] -f
                            DAG_FILE -G TAG_STRING -d INPUT_DATA_TYPE
                            [-x EXTRA_DATAFIND_TIME] [-M DATAFIND_MATCH] [-y]
                            -k FILTER_KNEE_FREQ -T TIME_BASELINE
                            [-p OUTPUT_SFT_PATH [OUTPUT_SFT_PATH ...]]
                            [-C CACHE_PATH] [-e CACHE_FILE] [-o LOG_PATH]
                            [-N CHANNEL_NAME [CHANNEL_NAME ...]]
                            [--allow-skipping] [-c COMMENT_FIELD]
                            [-F START_FREQ] [-B BAND] [-w WINDOW_TYPE]
                            [-P OVERLAP_FRACTION] [-m MAX_NUM_PER_NODE]
                            [-L MAX_LENGTH_ALL_JOBS] [-g SEGMENT_FILE]
                            [-l MIN_SEG_LENGTH] [-q LIST_OF_NODES]
                            [-Q NODE_PATH] [-r OUTPUT_JOBS_PER_NODE]
                            [-j DATAFIND_PATH] [-J MAKESFTS_PATH]
                            [--movesfts-path MOVESFTS_PATH] [--no-validate]
                            [-Y REQUEST_MEMORY] [-s REQUEST_DISK] -A
                            ACCOUNTING_GROUP -U ACCOUNTING_GROUP_USER [-u]
                            [-H] [-i] [-D] [-Z] [-v] [-S]

This script creates datafind.sub, MakeSFTs.sub, and a dag file that generates
SFTs based on the options given.

options:
  -h, --help            show this help message and exit
  -O OBSERVING_RUN, --observing-run OBSERVING_RUN
                        For public SFTs, observing run data the SFTs are
                        generated from, or (in the case of mock data challenge
                        data) the observing run on which the data is most
                        closely based
  -K {RUN,AUX,SIM,DEV}, --observing-kind {RUN,AUX,SIM,DEV}
                        For public SFTs, one of: "RUN" for production SFTs of
                        h(t) channels; "AUX" for SFTs of non-h(t) channels;
                        "SIM" for mock data challenge or other simulated data;
                        or "DEV" for development/testing purposes
  -R OBSERVING_REVISION, --observing-revision OBSERVING_REVISION
                        For public SFTs: revision number starts at 1, and
                        should be incremented once SFTs have been widely
                        distributed across clusters, advertised as being ready
                        for use, etc. For example, if mistakes are found in
                        the initial SFT production run after they have been
                        published, regenerated SFTs should have a revision
                        number of at least 2
  -X MISC_DESC, --misc-desc MISC_DESC
                        For private SFTs, miscellaneous part of the SFT
                        description field in the filename
  -a ANALYSIS_START_TIME, --analysis-start-time ANALYSIS_START_TIME
                        GPS start time of data from which to generate SFTs
                        (optional and unused if a segment file is given)
  -b ANALYSIS_END_TIME, --analysis-end-time ANALYSIS_END_TIME
                        GPS end time of data from which to generate SFTs
                        (optional and unused if a segment file is given)
  -f DAG_FILE, --dag-file DAG_FILE
                        filename for .dag file (should end in .dag)
  -G TAG_STRING, --tag-string TAG_STRING
                        tag string used in names of various files unique to
                        jobs that will run under the DAG
  -d INPUT_DATA_TYPE, --input-data-type INPUT_DATA_TYPE
                        input data type for use with the gw_data_find --type
                        option
  -x EXTRA_DATAFIND_TIME, --extra-datafind-time EXTRA_DATAFIND_TIME
                        extra time to subtract/add from/to start/end time
                        arguments of gw_data_find
  -M DATAFIND_MATCH, --datafind-match DATAFIND_MATCH
                        string to use with the gw_data_find --match option
  -y, --synchronize-start
                        synchronize the start times of the SFTs so that the
                        start times are synchronized when there are gaps in
                        the data
  -k FILTER_KNEE_FREQ, --filter-knee-freq FILTER_KNEE_FREQ
                        high pass filter knee frequency used on time domain
                        data before generating SFTs
  -T TIME_BASELINE, --time-baseline TIME_BASELINE
                        time baseline of SFTs (e.g., 60 or 1800 seconds)
  -p OUTPUT_SFT_PATH [OUTPUT_SFT_PATH ...], --output-sft-path OUTPUT_SFT_PATH [OUTPUT_SFT_PATH ...]
                        Path where to save the SFT files. Can specify multiple
                        options, If specifying multiple options then it is
                        required to specify the same number of output-sft-path
                        options as the number of channels. The first listed
                        channel will have the SFTs go into the first listed
                        output-sft-path. Otherwise specify only one output
                        path. If one path is specified and more than 1
                        channels are specified then --observing-run must be >=
                        1 and --observing-kind and --observing-revision must
                        be set
  -C CACHE_PATH, --cache-path CACHE_PATH
                        path to cache files that will be produced by
                        gw_data_find (default is $PWD/cache; this directory is
                        created if it does not exist and must agree with that
                        given in .sub files)
  -e CACHE_FILE, --cache-file CACHE_FILE
                        path and filename to frame cache file to use instead
                        of gw_data_find
  -o LOG_PATH, --log-path LOG_PATH
                        path to log, output, and error files (default is
                        $PWD/logs; this directory is created if it does not
                        exist and usually should be under a local file system)
  -N CHANNEL_NAME [CHANNEL_NAME ...], --channel-name CHANNEL_NAME [CHANNEL_NAME ...]
                        Name of input time-domain channel to read from frames.
                        Can specify multiple options. The number of channels
                        must be equal to the number of output-sft-path options
                        given. The first listed channel will have the SFTs go
                        to the first listed output-sft-path. Can only specify
                        one channel when generating private SFTs (--observing-
                        run=0)
  --allow-skipping      allow channels to be skipped if not in frames or too
                        low sampling frequency
  -c COMMENT_FIELD, --comment-field COMMENT_FIELD
                        comment for SFT header
  -F START_FREQ, --start-freq START_FREQ
                        start frequency of the SFTs
  -B BAND, --band BAND  frequency band of the SFTs
  -w WINDOW_TYPE, --window-type WINDOW_TYPE
                        type of windowing of time-domain to do before
                        generating SFTs, e.g. "rectangular", "hann",
                        "tukey:<beta in [0,1], required>"; (default is
                        "tukey:0.001", standard choice for LVK production
                        SFTs)
  -P OVERLAP_FRACTION, --overlap-fraction OVERLAP_FRACTION
                        overlap fraction (for use with windows; e.g., use
                        --overlap-fraction 0.5 with --window-type hann
                        windows)
  -m MAX_NUM_PER_NODE, --max-num-per-node MAX_NUM_PER_NODE
                        maximum number of SFTs to generate on one node
  -L MAX_LENGTH_ALL_JOBS, --max-length-all-jobs MAX_LENGTH_ALL_JOBS
                        maximum total amount of data to process, in seconds
                        (optional and unused if a segment file is given)
  -g SEGMENT_FILE, --segment-file SEGMENT_FILE
                        alternative file with segments to use, rather than the
                        input times
  -l MIN_SEG_LENGTH, --min-seg-length MIN_SEG_LENGTH
                        minimum length segments to process in seconds (used
                        only if a segment file is given)
  -q LIST_OF_NODES, --list-of-nodes LIST_OF_NODES
                        file with list of nodes on which to output SFTs
  -Q NODE_PATH, --node-path NODE_PATH
                        path to nodes to output SFTs; the node name is
                        appended to this path, followed by path given by the
                        -p option; for example, if -q point to file with the
                        list node1 node2 ... and the -Q /data/ -p
                        /frames/S5/sfts/LHO options are given, the first
                        output file will go into
                        /data/node1/frames/S5/sfts/LHO; the next node in the
                        list is used in constructing the path when the number
                        of jobs given by the -r option reached, and so on
  -r OUTPUT_JOBS_PER_NODE, --output-jobs-per-node OUTPUT_JOBS_PER_NODE
                        number of jobs to output per node in the list of nodes
                        given with the -q option
  -j DATAFIND_PATH, --datafind-path DATAFIND_PATH
                        string specifying the gw_data_find executable, or a
                        path to it; if not set, will use LSC_DATAFIND_PATH env
                        variable or system default (in that order)
  -J MAKESFTS_PATH, --makesfts-path MAKESFTS_PATH
                        string specifying the lalpulsar_MakeSFTs executable,
                        or a path to it; if not set, will use MAKESFTS_PATH
                        env variable or system default (in that order)
  --movesfts-path MOVESFTS_PATH
                        string specifying the lalpulsar_MoveSFTs executable,
                        or a path to it; if not set, will use MOVESFTS_PATH
                        env variable or system default (in that order)
  --no-validate         do not validate created SFTs
  -Y REQUEST_MEMORY, --request-memory REQUEST_MEMORY
                        memory allocation in MB to request from condor for
                        lalpulsar_MakeSFTs step
  -s REQUEST_DISK, --request-disk REQUEST_DISK
                        disk space allocation in MB to request from condor for
                        lalpulsar_MakeSFTs step
  -A ACCOUNTING_GROUP, --accounting-group ACCOUNTING_GROUP
                        Condor tag for the production of SFTs
  -U ACCOUNTING_GROUP_USER, --accounting-group-user ACCOUNTING_GROUP_USER
                        albert.einstein username (do not add @LIGO.ORG)
  -u, --frame-struct-type
                        DEPRECATED. No longer required; the frame channel type
                        is determined automatically
  -H, --use-hot         DEPRECATED. No longer required; the frame channel type
                        is determined automatically
  -i, --ifo             DEPRECATED. No longer required; the detector prefix is
                        deduced from the channel name
  -D, --make-gps-dirs   DEPRECATED. No longer supported
  -Z, --make-tmp-file   DEPRECATED. Default behaviour
  -v, --sft-version     DEPRECATED. No longer supported
  -S, --use-single      DEPRECATED. No longer supported


=================================================
--- Help output for: lalpulsar_MakeSFTs
=================================================

NAME
       lalpulsar_MakeSFTs - generate SFTs

SYNOPSIS
       lalpulsar_MakeSFTs --help
           Display this help page.

       lalpulsar_MakeSFTs -h
           Display a short usage string of available options.

       lalpulsar_MakeSFTs -v|--version[=verbose]
           Display (verbose) version information.

       lalpulsar_MakeSFTs [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

OPTIONS
   Input data
       -C, --frame-cache=<string> [required]
           Path to frame cache file to read frames from. 

       -k, --frame-checksums[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Validate frame checksums. Default is to only validate checksums for `--observing-kind'=RUN SFTs. 

       -N, --channel-name=<string>,... [required]
           Name(s) of channel(s) to read within a frame. 

       -s, --gps-start-time=<4-byte signed integer> [required]
           GPS time to start generating SFTs. 

       -e, --gps-end-time=<4-byte signed integer> [required]
           GPS time to end generating SFTs. 

       -x, --allow-skipping[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Channel is allowed to be skipped if it is not in frames or has too low sampling frequency. 

   SFT generation
       -t, --sft-duration=<4-byte signed integer> [default: 1800]
           SFT duration in seconds. 

       -P, --overlap-fraction=<8-byte real> [default: 0]
           Fraction of SFT duration to overlap SFTs by. Example: use `--overlap-fraction'=0.5 with `--window-type'=hann windows. 

       -f, --high-pass-freq=<8-byte real> [required]
           High pass filtering frequency in Hertz. 

       -w, --window-type=<string> [required]
           Window to apply to SFTs. See https://dcc.ligo.org/T040164/public for supported options.

           The standard window applied to LVK production SFTs is documented in `lalpulsar-MakeSFTDAG`. 

       -r, --window-param=<8-byte real> [default: 0]
           Parameter (if required) of window to apply to SFTs. 

       -F, --start-freq=<8-byte real> [default: 48]
           Start frequency of the SFTs, in Hertz. 

       -B, --band=<8-byte real> [default: 2000]
           Frequency band of the SFTs, in Hertz. 

   SFT output
       -p, --sft-write-path=<string>,... [default: "."]
           Path(s) to write SFTs to, same order as channel name(s). 

       -O, --observing-run=<4-byte unsigned integer> [required]
           For >=1, SFTs will be named following the 'public' scheme from T040164-v2, and this number should correspond to the observing run the data comes from (without the leading 'O').

           If set to 0, 'private' SFTs will be generated. 

       -K, --observing-kind=<string> [default: NULL]
           For public SFTs (`--observing-run'>=1) only, the kind of SFTs being generated: 'RUN', 'AUX', 'SIM', or 'DEV'. 

       -R, --observing-revision=<4-byte unsigned integer> [default: 0]
           For public SFTs (`--observing-run'>=1) only, the revision number of the SFT production. 

       -X, --misc-desc=<string> [default: NULL]
           For private SFTs only, a miscellaneous description field that will be included in the filenames. 

       -c, --comment-field=<string> [default: NULL]
           Comment for SFT header. 



=================================================
--- Help output for: lalpulsar_Makefakedata_v4
=================================================

NAME
       lalpulsar_Makefakedata_v4

SYNOPSIS
       lalpulsar_Makefakedata_v4 --help
           Display this help page.

       lalpulsar_Makefakedata_v4 -h
           Display a short usage string of available options.

       lalpulsar_Makefakedata_v4 -v|--version[=verbose]
           Display (verbose) version information.

       lalpulsar_Makefakedata_v4 [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

OPTIONS
       -s, --outSingleSFT[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Write a single concatenated SFT (name given by --outSFTbname)

       -n, --outSFTbname=<string> [default: NULL]
           Output SFTs: target Directory (if --outSingleSFT=false) or filename (if --outSingleSFT=true)

       -t, --TDDfile=<string> [default: NULL]
           Basename for output of ASCII time-series

       -F, --TDDframedir=<string> [default: NULL]
           Directory to output frame time-series into

       --frameDesc=<string> [default: NULL]
           Description-field entry in frame filename

       -l, --logfile=<string> [default: NULL]
           Filename for log-output

       -I, --IFO=<string> [required]
           Detector: one of 'G1','L1','H1,'H2','V1', ...

       --ephemEarth=<string> [default: "earth00-40-DE405.dat.gz"]
           Earth ephemeris file to use

       --ephemSun=<string> [default: "sun00-40-DE405.dat.gz"]
           Sun ephemeris file to use

       -G, --startTime=<seconds>[.<frac-seconds>][GPS] | <days>[.<frac-days>]MJD [default: 0]
           Start-time of requested signal in detector-frame (format 'xx.yy[GPS|MJD]')

       --duration=<4-byte signed integer> [default: 0]
           Duration of requested signal in seconds

       --timestampsFile=<string> [default: NULL]
           ALTERNATIVE: File to read timestamps from (file-format: lines with <seconds> <nanoseconds>)

       --fmin=<8-byte real> [required]
           Lowest frequency in output SFT (= heterodyning frequency)

       --Band=<8-byte real> [required]
           Bandwidth of output SFT in Hz (= 1/2 sampling frequency)

       --Tsft=<8-byte real> [default: 1800]
           Time baseline of one SFT in seconds

       --SFToverlap=<8-byte real> [default: 0]
           Overlap between successive SFTs in seconds (conflicts with --noiseSFTs or --timestampsFile)

       --window=<string> [default: NULL]
           Window function to apply to the SFTs ('rectangular', 'hann', 'tukey', etc.); when --noiseSFTs is given, required ONLY if noise SFTs have unknown window

       --windowParam=<8-byte real> [default: 0]
           Window parameter required for a few window-types (eg. 'tukey')

       -S, --refTime=<seconds>[.<frac-seconds>][GPS] | <days>[.<frac-days>]MJD [default: 0]
           Pulsar SSB reference epoch: format 'xx.yy[GPS|MJD]' [default: startTime]

       --Alpha=<radians>|<hours>:<minutes>:<seconds> [default: 0]
           Sky: equatorial J2000 right ascension (in radians or hours:minutes:seconds)

       --Delta=<radians>|<degrees>:<minutes>:<seconds> [default: 0]
           Sky: equatorial J2000 declination (in radians or degrees:minutes:seconds)

       --h0=<8-byte real> [default: 0]
           Overall signal-amplitude h0 (for emission at twice spin frequency only)

       --cosi=<8-byte real> [default: 0]
           cos(iota) of inclination-angle iota (for emission at twice spin frequency only)

       --aPlus=<8-byte real> [default: 0]
           ALTERNATIVE to {--h0,--cosi}: A_+ amplitude

       --aCross=<8-byte real> [default: 0]
           ALTERNATIVE to {--h0,--cosi}: A_x amplitude

       --psi=<8-byte real> [default: 0]
           Polarization angle psi

       --phi0=<8-byte real> [default: 0]
           Initial GW phase phi

       --Freq=<8-byte real> [default: 0]
           Intrinsic GW-frequency at refTime

       --f1dot=<8-byte real> [default: 0]
           First spindown parameter f' at refTime

       --f2dot=<8-byte real> [default: 0]
           Second spindown parameter f'' at refTime

       --f3dot=<8-byte real> [default: 0]
           Third spindown parameter f''' at refTime

       --orbitasini=<8-byte real> [default: 0]
           Projected orbital semi-major axis in seconds (a/c)

       --orbitEcc=<8-byte real> [default: 0]
           Orbital eccentricity

       --orbitTp=<seconds>[.<frac-seconds>][GPS] | <days>[.<frac-days>]MJD [default: 0]
           True epoch of periapsis passage: format 'xx.yy[GPS|MJD]'

       --orbitPeriod=<8-byte real> [default: 0]
           Orbital period (seconds)

       --orbitArgp=<8-byte real> [default: 0]
           Argument of periapsis (radians)

       -D, --noiseSFTs=<string> [default: NULL]
           Noise-SFTs to be added to signal. Possibilities are:
            - '<SFT file>;<SFT file>;...', where <SFT file> may contain wildcards
            - 'list:<file containing list of SFT files>'
           (Uses ONLY SFTs falling within (--startTime,--duration) or the set given in --timstampsFile, and ONLY within (--fmin,--Band).)

       --noiseSqrtSh=<8-byte real> [default: 0]
           Gaussian noise with single-sided PSD sqrt(Sh)

       --lineFeature[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Generate a monochromatic 'line' of amplitude h0 and frequency 'Freq'}

       -p, --parfile=<string> [default: NULL]
           Directory path for optional .par files

       --transientWindowType=<string> [default: "none"]
           Type of transient signal window to use. ('none', 'rect', 'exp').

       --transientStartTime=<8-byte real> [default: 0]
           GPS start-time 't0' of transient signal window.

       --transientTauDays=<8-byte real> [default: 0]
           Timescale 'tau' of transient signal window in days.

DEVELOPER OPTIONS
       --sourceDeltaT=<8-byte real> [default: 0]
           Source-frame sampling period. '0' implies previous internal defaults

       --generationMode=<4-byte signed integer> [default: 1]
           How to generate timeseries: 0=all-at-once (faster), 1=per-sft (slower)

       -b, --hardwareTDD[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Hardware injection: output TDD in binary format (implies generationMode=1)

       --actuation=<string> [default: NULL]
           Filname containing actuation function of this detector

       --actuationScale=<8-byte real> [default: 1]
           (Signed) scale-factor to apply to the actuation-function.

       --exactSignal[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Generate signal time-series as exactly as possible (slow).

       --randSeed=<4-byte signed integer> [default: 0]
           Specify random-number seed for reproducible noise (0 means use /dev/urandom for seeding).



=================================================
--- Help output for: lalpulsar_Makefakedata_v5
=================================================

NAME
       lalpulsar_Makefakedata_v5

SYNOPSIS
       lalpulsar_Makefakedata_v5 --help
           Display this help page.

       lalpulsar_Makefakedata_v5 -h
           Display a short usage string of available options.

       lalpulsar_Makefakedata_v5 -v|--version[=verbose]
           Display (verbose) version information.

       lalpulsar_Makefakedata_v5 [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

OPTIONS
       -s, --outSingleSFT[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: TRUE]
           Write a single concatenated SFT file instead of individual files

       -n, --outSFTdir=<string> [default: NULL]
           Output SFTs:  directory for output SFTs

       --outLabel=<string> [default: "mfdv5"]
           'misc' entry in SFT-filenames or 'description' entry of frame filenames

       -O, --outPubObsRun=<4-byte unsigned integer> [default: 0]
           if >0, names SFTs using the public filename convention with this observing run number

       -R, --outPubRevision=<4-byte unsigned integer> [default: 0]
           if `--outPubObsRun'>0, names SFTs using the public filename convention with this revision number

       -t, --TDDfile=<string> [default: NULL]
           Filename to output time-series into

       -l, --logfile=<string> [default: NULL]
           Filename for log-output

       -I, --IFOs=<string>,... [default: NULL]
           CSV list of detectors, eg. "H1,H2,L1,G1, ..." 

       --sqrtSX=<string>,... [default: NULL]
           Add Gaussian Noise: CSV list of detectors' noise-floors sqrt{Sn}

       --ephemEarth=<string> [default: "earth00-40-DE405.dat.gz"]
           Earth ephemeris file to use

       --ephemSun=<string> [default: "sun00-40-DE405.dat.gz"]
           Sun ephemeris file to use

       -G, --startTime=<seconds>[.<frac-seconds>][GPS] | <days>[.<frac-days>]MJD [default: 0]
           Start-time of requested signal in detector-frame (format 'xx.yy[GPS|MJD]')

       --duration=<4-byte signed integer> [default: 0]
           Duration of requested signal in seconds

       --timestampsFiles=<string>,... [default: NULL]
           ALTERNATIVE: File to read timestamps from (file-format: lines with <seconds> <nanoseconds>)

       --fmin=<8-byte real> [optional]
           Lowest frequency (Hz) of output SFT, and heterodyning frequency of time series written to frames; REQUIRED unless --noiseSFTs given.

           Note that, since the output time series written to frames are heterodyned at this frequency, signals at frequency 'f' will be shifted to frequency 'f - fmin'.

       --Band=<8-byte real> [optional]
           Bandwidth (Hz) of output SFT, and of time series written to frames (i.e. half the time series sampling frequency); REQUIRED unless --noiseSFTs given.

       --Tsft=<8-byte real> [default: 1800]
           Time baseline of one SFT in seconds

       --SFToverlap=<8-byte real> [default: 0]
           Overlap between successive SFTs in seconds (conflicts with --noiseSFTs or --timestampsFiles)

       --SFTWindowType=<string> [default: NULL]
           Window function to apply to the SFTs ('rectangular', 'hann', 'tukey', etc.); when --noiseSFTs is given, required ONLY if noise SFTs have unknown window

       --SFTWindowParam=<8-byte real> [default: 0]
           Window parameter required for a few window-types (eg. 'tukey')

       --injectionSources=<string>,... [default: NULL]
           Source parameters to inject for simulated signal(s).
           This is a comma-separated list of file patterns for configuration files,
           or else direct configuration strings in the following format:
             * Enclose with curly braces ('{}').
             * Give pulsar parameters as key=value pairs with a '=' separator.
             * Separate each key=value pair with a semicolon (';').
           Available parameters are:
             * Required parameters: Alpha, Delta, Freq, refTime
             * Optional parameters:
               - Injection amplitudes: either (h0, cosi) or (aPlus, aCross), psi, phi0
               - Higher-order spindowns: f1dot, f2dot, ... f6dot
               - Binary sources: orbitTp, orbitArgp, orbitasini, orbitEcc, orbitPeriod
               - Transient injections: transientWindowType, transientStartTime, transientTau
           Examples:
             * '{Alpha=0; Delta=0; Freq=50; f1dot=1e-11; f2dot=0; refTime=1000000000; h0=1.00000000e-23; cosi=0; psi=0; phi0=0;}'
             * 'file1.dat,someFiles*.txt,{Alpha=0;Delta=0;Freq=0;refTime=1000000000;},someOtherFiles[0-9].dat'

       --sourceDeltaT=<8-byte real> [default: 0]
           Source-frame sampling period. '0' implies implies defaults set in XLALGeneratePulsarSignal().

       -D, --noiseSFTs=<string> [default: NULL]
           Noise-SFTs to be added to signal. Possibilities are:
            - '<SFT file>;<SFT file>;...', where <SFT file> may contain wildcards
            - 'list:<file containing list of SFT files>'
           (Used also to set IFOs and timestamps, and frequency range unless separately specified.)

       --randSeed=<4-byte signed integer> [default: 0]
           Specify random-number seed for reproducible noise (0 means use /dev/urandom for seeding).

       -F, --outFrameDir=<string> [default: NULL]
           Output Frames: directory for output timeseries frame files

       -C, --inFrames=<string>,... [default: NULL]
           CSV list (one per IFO) of input frame cache files

       -N, --inFrChannels=<string>,... [default: NULL]
           CSV list (one per IFO) of frame channels to read timeseries from

       --outFrChannels=<string>,... [optional]
           CSV list (one per IFO) of output frame channel names [default: <inFrChannels>-<outLabel> or <IFO>:<outLabel>]



=================================================
--- Help output for: lalpulsar_MoveSFTs
=================================================
usage: lalpulsar_MoveSFTs [-h] [-p PROCESSES] [-n] [-s SOURCE_DIRECTORY]
                          [-c CHANNELS [CHANNELS ...]]
                          [-d DEST_DIRECTORY [DEST_DIRECTORY ...]]

Move SFTs between directories.

options:
  -h, --help            show this help message and exit
  -p PROCESSES, --processes PROCESSES
                        number of moving processes
  -n, --no-validate     do not validate destination SFTs
  -s SOURCE_DIRECTORY, --source-directory SOURCE_DIRECTORY
                        SFT source directory
  -c CHANNELS [CHANNELS ...], --channels CHANNELS [CHANNELS ...]
                        Channel names (must be the same number as --dest-
                        directory arguments)
  -d DEST_DIRECTORY [DEST_DIRECTORY ...], --dest-directory DEST_DIRECTORY [DEST_DIRECTORY ...]
                        SFT destination directory (must be the same number as
                        --channels arguments)


=================================================
--- Help output for: lalpulsar_PiecewiseSearch
=================================================
usage: lalpulsar_PiecewiseSearch [-h] --tbankcode TBANKCODE [--j J]
                                 [--tstart TSTART] [--trefsegfrac TREFSEGFRAC]
                                 [--noise_sqrt_Sh NOISE_SQRT_SH [NOISE_SQRT_SH ...]]
                                 [--tempsperfile TEMPSPERFILE] [--rtnsum]
                                 [--SFTFiles] [--UseLocal]
                                 [--BaseSeed BASESEED] [--Tsft TSFT] [--h0 H0]
                                 [--cosi COSI] [--psi PSI] [--phi0 PHI0]
                                 [--dt_wf DT_WF] [--Alpha ALPHA]
                                 [--Delta DELTA]
                                 [--detectors DETECTORS [DETECTORS ...]]
                                 [--dfreq DFREQ] [--sourceDeltaT SOURCEDELTAT]
                                 [--s [S]] [--fmin [FMIN]] [--fmax [FMAX]]
                                 [--nmin [NMIN]] [--nmax [NMAX]] [--Izz [IZZ]]
                                 [--ellip [ELLIP]] [--radius [RADIUS]]
                                 [--kmin [KMIN]] [--kmax [KMAX]] [--dur [DUR]]
                                 [--knots KNOTS [KNOTS ...]]
                                 [--maxmismatch [MAXMISMATCH]]
                                 [--knotnum [KNOTNUM]]
                                 [--knot_alg_dur [KNOT_ALG_DUR]]
                                 [--flags_bbox FLAGS_BBOX [FLAGS_BBOX ...]]
                                 [--flags_intbox FLAGS_INTBOX [FLAGS_INTBOX ...]]
                                 [--det_prob] [--threshold_2F]
                                 [--min_h0 MIN_H0] [--max_h0 MAX_H0]
                                 [--template_count] [--mis_hist] [--fake_data]
                                 [--inject_data] [--Fstat_mismatch]
                                 [--signal_as_template]
                                 [--iterations ITERATIONS]
                                 [--freq_bands FREQ_BANDS [FREQ_BANDS ...]]
                                 [--fstat_hist] [--data_psd]
                                 [--outbasedir OUTBASEDIR] [--logfile]
                                 [--loglevel LOGLEVEL] [--profile]
                                 [--noise_path NOISE_PATH]
                                 [--psd_path PSD_PATH] [--sft_path SFT_PATH]

options:
  -h, --help            show this help message and exit
  --tbankcode TBANKCODE
                        Specifies the tbank object to use for a search
  --j J                 The job array number on OzSTAR, to ensure unique
                        random seeds, j < 10,000
  --tstart TSTART       Start time of SFTs
  --trefsegfrac TREFSEGFRAC
                        What percentage tref occurs on each segment. E.g. if
                        1/2, then tref will be halfway through each segment
  --noise_sqrt_Sh NOISE_SQRT_SH [NOISE_SQRT_SH ...]
                        Noise level to be added to data
  --tempsperfile TEMPSPERFILE
                        The number of templates with the greatest fstats to
                        record
  --rtnsum              Whether to return the 2F stat averaged over all
                        segments
  --SFTFiles            Whether to write SFT files or have them stored in
                        memory
  --UseLocal            If selected all files will be written to local storage
                        and deleted once job finished except return values of
                        pwf.semifstatcatalogue
  --BaseSeed BASESEED   BaseSeed * 10e7 + job number * 10e3 + iterations is
                        the seed for generating random signal params
  --Tsft TSFT           The length of each SFT to be built
  --h0 H0               Strain of the injected signal
  --cosi COSI           Default injection cos-iota
  --psi PSI             Default injection psi
  --phi0 PHI0           Default injection phi0
  --dt_wf DT_WF         Sampling time for waveform generation
  --Alpha ALPHA         Right Ascension to sky position of source
  --Delta DELTA         Declination to sky position of source
  --detectors DETECTORS [DETECTORS ...]
                        Set detector being used. Options H1, V1, etc.
  --dfreq DFREQ         Frequency spacing for ComputeFstat()
  --sourceDeltaT SOURCEDELTAT
                        sourceDeltaT option for ComputeFstat()
  --s [S]               Set the s parameter
  --fmin [FMIN]         Set the fmin parameter
  --fmax [FMAX]         Set the fmax parameter
  --nmin [NMIN]         Set the nmin parameter
  --nmax [NMAX]         Set the nmax parameter
  --Izz [IZZ]           Inertia of the NS. Used to calculate default k values
  --ellip [ELLIP]       Ellipticity of NS. Used to calculate default k values
  --radius [RADIUS]     Radius of the NS. Used to calculate default k values
  --kmin [KMIN]         Set the kmin parameter. Overrides Izz, ellip and
                        radius values
  --kmax [KMAX]         Set the kmax parameter. Overrides Izz, ellip and
                        radius values
  --dur [DUR]           The maximum duration the knot algorithm to calculate
                        up to
  --knots KNOTS [KNOTS ...]
                        Use user defined knots
  --maxmismatch [MAXMISMATCH]
                        Set the mismatch parameter
  --knotnum [KNOTNUM]   Use a knotnum number of knots generated by algorithm
  --knot_alg_dur [KNOT_ALG_DUR]
                        Uses knots generated by the algorithm extending to
                        this duration
  --flags_bbox FLAGS_BBOX [FLAGS_BBOX ...]
                        Fractional bounding box padding to use on each
                        dimension
  --flags_intbox FLAGS_INTBOX [FLAGS_INTBOX ...]
                        Integer points to use for padding on each dimension
  --det_prob            If selected, does an iterations number of searches,
                        with signal h0 varying from min_h0 to max_h0. Also
                        includes h0 = 0 for computing 2F* simultaneously
  --threshold_2F        Does an iterations number of searches with no injected
                        signal. Useful for calculating 2F* without calculating
                        det_prob
  --min_h0 MIN_H0       Minimum h0 for calculating detection probabilities,
                        det_prob must be true
  --max_h0 MAX_H0       Maximum h0 for calculating detection probabilities,
                        det_prob must be true
  --template_count      Returns the template count for the parameter space.
                        Does not compute anything else
  --mis_hist            If selected with Fstat_mismatch, only returns the
                        lowest mis_match
  --fake_data           If selected, carries out a search on fake data with an
                        injected signal
  --inject_data         If selected, injects a randomly generated signal into
                        the SFTs located at the path set by . Can be selected
                        alongside other modes
  --Fstat_mismatch      If selected, determines mismatches using the 2F
                        definition, otherwise uses the metric
  --signal_as_template  If selected, the random injected signal will coincide
                        with a template
  --iterations ITERATIONS
                        Number of loops for the code to perform. For unique
                        random seeds, iterations < 1000
  --freq_bands FREQ_BANDS [FREQ_BANDS ...]
                        Defines frequency bands for search to cover. Frequency
                        bands chosen as fmin=freq_bands[j],
                        fmax=freq_bands[j+1]
  --fstat_hist          If selected, returns data on the distribution of 2Fs
                        as a histogram
  --data_psd            Use simulated data with a noise level equal to the PSD
                        of data
  --outbasedir OUTBASEDIR
                        Output base directory
  --logfile             If true, log to file; if false, log to standard output
  --loglevel LOGLEVEL   Level at which to log messages
  --profile             Profile the code
  --noise_path NOISE_PATH
                        Path to noise data.
  --psd_path PSD_PATH   Path to psd data.
  --sft_path SFT_PATH   Path to sfts.


=================================================
--- Help output for: lalpulsar_PredictFstat
=================================================

NAME
       lalpulsar_PredictFstat

SYNOPSIS
       lalpulsar_PredictFstat --help
           Display this help page.

       lalpulsar_PredictFstat -h
           Display a short usage string of available options.

       lalpulsar_PredictFstat -v|--version[=verbose]
           Display (verbose) version information.

       lalpulsar_PredictFstat [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

OPTIONS
   Output control
       --outputFstat=<string> [optional]
           Output-file (octave/matlab) for predicted F-stat value, variance and antenna-patterns

       --printFstat[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: TRUE]
           Print predicted F-stat value to terminal

       -P, --PureSignal[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           If true return 2F=SNR^2 ('pure signal without noise'). Otherwise return E[2F] = 4 + SNR^2.

   Signal parameters
       -s, --h0=<8-byte real> [optional]
           Overall GW amplitude h0 (required if `--cosi' used, alternatively use `--aPlus' and `--aCross').

       -i, --cosi=<8-byte real> [optional]
           Inclination angle of rotation axis cos(iota) (required if `--h0' used, alternatively use `--aPlus' and `--aCross').

       --aPlus=<8-byte real> [optional]
           'Plus' polarization amplitude A_+  (required if `--aCross' used, alternative to `--h0' and `--cosi').

       --aCross=<8-byte real> [optional]
           'Cross' polarization amplitude: A_x  (required if `--aPlus' used, alternative to `--h0' and `--cosi').

       --psi=<8-byte real> [default: 0]
           Polarisation angle in radians (required if `--h0', `--cosi', `--aPlus', or `--aCross' used)

       --phi0=<8-byte real> [default: 0]
           Initial GW phase phi0 in radians

       -a, --Alpha=<radians>|<hours>:<minutes>:<seconds> [default: 0]
           Sky position: equatorial J2000 right ascension (required if `--h0', `--cosi', `--aPlus', or `--aCross' used)

       -d, --Delta=<radians>|<degrees>:<minutes>:<seconds> [default: 0]
           Sky position: equatorial J2000 right declination (required if `--h0', `--cosi', `--aPlus', or `--aCross' used)

   Data and noise properties
       -D, --DataFiles=<string> [optional]
           Per-detector SFTs (for detectors, timestamps and noise-estimate). Possibilities are:
            - '<SFT file>;<SFT file>;...', where <SFT file> may contain wildcards
            - 'list:<file containing list of SFT files>'
           (Alternatives: `--assumeSqrtSX' and `--IFOs' and one of `--timestampsFiles' or `--minStartTime' and `--duration').

       -F, --Freq=<8-byte real> [optional]
           Frequency for noise-floor estimation (required if not given `--assumeSqrtSX').

       -k, --RngMedWindow=<4-byte signed integer> [default: 101]
           Running median size for noise-floor estimation (only used if not given `--assumeSqrtSX').

       --assumeSqrtSX=<string>,... [default: NULL]
           Assume stationary per-detector noise-floor sqrt(S[X]) instead of estimating (required if not given `--DataFiles').

       --IFOs=<string>,... [optional]
           CSV list of detectors, eg. "H1,L1,..." (required if not given `--DataFiles').

       --timestampsFiles=<string>,... [optional]
           CSV list of SFT timestamps files, one per detector (conflicts with `--DataFiles').

       --minStartTime=<seconds>[.<frac-seconds>][GPS] | <days>[.<frac-days>]MJD [default: 0]
           SFT timestamps must be >= this GPS timestamp.

       --maxStartTime=<seconds>[.<frac-seconds>][GPS] | <days>[.<frac-days>]MJD [default: 2147483647]
           SFT timestamps must be < this GPS timestamp (only valid with `--DataFiles').

       --duration=<8-byte real> [default: 0]
           SFT timestamps will be < `--minStartTime'+`--duration' (only valid without `--DataFiles').

       --Tsft=<8-byte real> [default: 1800]
           Time baseline of SFTs in seconds (conflicts with `--DataFiles').

   Transient signal properties
       --transientWindowType=<string> [default: "none"]
           Transient-signal window function to assume. ('none', 'rect', 'exp').

       --transientStartTime=<seconds>[.<frac-seconds>][GPS] | <days>[.<frac-days>]MJD [optional]
           GPS start-time 't0' of transient signal window.

       --transientTau=<8-byte real> [optional]
           Timescale 'tau' of transient signal window in seconds.

DEVELOPER OPTIONS
   
       --ephemEarth=<string> [default: "earth00-40-DE405.dat.gz"]
           Earth ephemeris file to use

       --ephemSun=<string> [default: "sun00-40-DE405.dat.gz"]
           Sun ephemeris file to use



=================================================
--- Help output for: lalpulsar_PrintDetectorState
=================================================

NAME
       lalpulsar_PrintDetectorState

SYNOPSIS
       lalpulsar_PrintDetectorState --help
           Display this help page.

       lalpulsar_PrintDetectorState -h
           Display a short usage string of available options.

       lalpulsar_PrintDetectorState -v|--version[=verbose]
           Display (verbose) version information.

       lalpulsar_PrintDetectorState [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

OPTIONS
       -I, --detector=<string> [required]
           Detector name (eg. H1,H2,L1,G1,etc).

       -a, --Alpha=<8-byte real> [default: 0]
           skyposition Alpha in radians, equatorial coords.

       -d, --Delta=<8-byte real> [default: 0]
           skyposition Delta in radians, equatorial coords.

       -t, --timeGPS=<8-byte real> [default: 714180733]
           GPS time at which to compute detector state

       --ephemEarth=<string> [default: "earth00-40-DE405.dat.gz"]
           Earth ephemeris file to use

       --ephemSun=<string> [default: "sun00-40-DE405.dat.gz"]
           Sun ephemeris file to use



=================================================
--- Help output for: lalpulsar_SFTclean
=================================================

NAME
       lalpulsar_SFTclean

SYNOPSIS
       lalpulsar_SFTclean --help
           Display this help page.

       lalpulsar_SFTclean -h
           Display a short usage string of available options.

       lalpulsar_SFTclean -v|--version[=verbose]
           Display (verbose) version information.

       lalpulsar_SFTclean [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

OPTIONS
       -i, --sftDir=<string> [required]
           Input SFT file pattern. Possibilities are:
            - '<SFT file>;<SFT file>;...', where <SFT file> may contain wildcards
            - 'list:<file containing list of SFT files>'

       -o, --outDir=<string> [required]
           Output SFT Directory

       --fMin=<8-byte real> [default: -1]
           start Frequency (default: full input SFTs width)

       --fMax=<8-byte real> [default: -1]
           Max Frequency  (default: full input SFTs width)

       -w, --window=<4-byte signed integer> [default: 100]
           Window size for noise floor estimation in vicinity of a line. WARNING: estimation will be compromised if SFTs are narrower than this, or if it is not much wider than any line wings.

       -m, --maxBins=<4-byte signed integer> [default: 20]
           Max. bins to clean. WARNING: If your linefiles contain very wide lines, make sure this is large enough to accommodate them.

       --linefiles=<string>,... [default: NULL]
           List of per-detector files with list of lines (each full path must start with a canonical IFO name). NOTE: The modern Advanced LIGO linefiles format is not supported. Files should first be converted into the legacy format as described in the lalpulsar SFTClean module.

       -c, --addComment=<4-byte signed integer> [default: 2]
           How to deal with comments - 0 means no comment is written at all, 1 means that the comment is taken unmodified from the input SFTs, 2 (default) means that the program appends its RCS id and command-line to the comment.

       -s, --outSingleSFT[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Write a single concatenated SFT file per IFO, instead of individual files



=================================================
--- Help output for: lalpulsar_SFTvalidate
=================================================
usage:
   lalpulsar_SFTvalidate *.sft
   ls *.sft | lalpulsar_SFTvalidate
   find -name '*.sft' | lalpulsar_SFTvalidate >valid-sfts.txt 2>errors.log


=================================================
--- Help output for: lalpulsar_Weave
=================================================

NAME
       lalpulsar_Weave - search for gravitational-wave pulsars

SYNOPSIS
       lalpulsar_Weave --help
           Display this help page.

       lalpulsar_Weave -h
           Display a short usage string of available options.

       lalpulsar_Weave -v|--version[=verbose]
           Display (verbose) version information.

       lalpulsar_Weave [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

OPTIONS
       -S, --setup-file=<string> [required]
           Setup file generated by lalpulsar_WeaveSetup; the segment list, parameter-space metrics, and other required data. 

       -o, --output-file=<string> [required]
           Output file which stores all quantities computed by lalpulsar_Weave. 

   SFT input/generation and signal generation
       -I, --sft-files=<string> [optional]
           Pattern matching the SFT files to be analysed. Possibilities are:
            - '<SFT file>;<SFT file>;...', where <SFT file> may contain wildcards
            - 'list:<file containing list of SFT files>'

       -t, --sft-timebase=<8-byte real> [optional]
           Generate SFTs with this timebase instead of loading from files. 

       -p, --sft-noise-sqrtSX=<string>,... [optional]
           Inject fake Gaussian noise with these amplitude spectral densities [sqrt(Sh)] into the generated SFTs. Arguments correspond to the detectors in the setup file given by `--setup-file'; for example, if the setup file was created with `--detectors' set to 'H1,L1', then an argument of '1.2,3.4' to this option will generate H1 SFTs with a noise sqrt(Sh) of 1.2, and L1 SFTs with a noise sqrt(Sh) of 3.4. 

       -J, --injections=<string>,... [optional]
           Source parameters to inject for simulated signal(s).
           This is a comma-separated list of file patterns for configuration files,
           or else direct configuration strings in the following format:
             * Enclose with curly braces ('{}').
             * Give pulsar parameters as key=value pairs with a '=' separator.
             * Separate each key=value pair with a semicolon (';').
           Available parameters are:
             * Required parameters: Alpha, Delta, Freq, refTime
             * Optional parameters:
               - Injection amplitudes: either (h0, cosi) or (aPlus, aCross), psi, phi0
               - Higher-order spindowns: f1dot, f2dot, ... f6dot
               - Binary sources: orbitTp, orbitArgp, orbitasini, orbitEcc, orbitPeriod
               - Transient injections: transientWindowType, transientStartTime, transientTau
           Examples:
             * '{Alpha=0; Delta=0; Freq=50; f1dot=1e-11; f2dot=0; refTime=1000000000; h0=1.00000000e-23; cosi=0; psi=0; phi0=0;}'
             * 'file1.dat,someFiles*.txt,{Alpha=0;Delta=0;Freq=0;refTime=1000000000;},someOtherFiles[0-9].dat'

       -H, --random-injection=<8-byte real>,... [optional]
           Inject a simulated signal, with phase parameters drawn randomly from the search parameter space, and with a randomly-generated polarisation angle (psi) and initial phase (phi0). The amplitude of the injection is specified by either 1 or 2 arguments to `--random-injection':
            - h0: generate a random cosine of inclination angle (cosi), then set aPlus=0.5*h0*(1+cosi^2), aCross=h0*cosi;
            - aPlus,aCross: use the given plus- and cross-polarisation amplitudes.

   Search parameter space
       -a, --alpha=<start>[,<end>|/<band>|~<plus-minus>] where <>=<radians>|<hours>:<minutes>:<seconds> [optional]
           Search parameter space in right ascension. If not specified, an all-sky search is performed; otherwise `--delta' must also be specified. Range for a partial-sky search is limited to PI radians. 

       -d, --delta=<start>[,<end>|/<band>|~<plus-minus>] where <>=<radians>|<degrees>:<minutes>:<seconds> [optional]
           Search parameter space in declination. If not specified, an all-sky search is performed; otherwise `--alpha' must also be specified. 

       -f, --freq=<start>[,<end>|/<band>|~<plus-minus>] where <>=<8-byte real> [required]
           Search parameter space in frequency, in Hertz. 

       -1, --f1dot=<start>[,<end>|/<band>|~<plus-minus>] where <>=<8-byte real> [default: 0,0]
           Search parameter space in first spindown, in Hertz/second. 

       -2, --f2dot=<start>[,<end>|/<band>|~<plus-minus>] where <>=<8-byte real> [default: 0,0]
           Search parameter space in second spindown, in Hertz/second^2. 

   Lattice tiling setup
       -s, --semi-max-mismatch=<8-byte real> [required]
           Maximum metric mismatch of the lattice tiling on which semicoherent quantities are computed, e.g. F-statistics averaged over segments. 

       -c, --coh-max-mismatch=<8-byte real> [optional]
           Maximum metric mismatch of the per-segment lattice tilings on which coherent quantities are computed, e.g. coherent F-statistics. If the search setup contains only 1 segment, then this option must not be specified. 

       -i, --interpolation[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: TRUE]
           If TRUE, perform interpolation from the semicoherent lattice tiling to the per-segment coherent lattice tilings; `--coh-max-mismatch' must also be specified in this case. If FALSE, turn off interpolation and use the same lattice tiling for both semicoherent and coherent computations; `--coh-max-mismatch' must not be specified in this case. 

   Various statistics input arguments
       --lrs-Fstar0sc=<8-byte real> [default: 0]
           (Semi-coherent) transition-scale parameter 'Fstar0sc' (=Nseg*Fstar0coh) for B_S/GL.. family of statistics.

       --lrs-oLGX=<string>,... [default: NULL]
           Per-detector line-vs-Gauss prior odds 'oLGX' (Defaults to oLGX=1/Ndet) for B_S/GL.. family of statistics.

       --nc-2Fth=<8-byte real> [default: 5.2]
           Number count: per-segment 2F threshold value.

   Output control
       -n, --toplist-limit=<4-byte unsigned integer> [default: 1000]
           Maximum number of candidates to return in an output toplist; if 0, all candidates are returned. 

       -L, --toplists=(mean2F|sum2F|log10BSGL|log10BSGLtL|log10BtSGLtL|all)[,...] [default: mean2F]
           Sets which combination of toplists to return in the output file given by `--output-file':
            - mean2F       : Average over segments of multi-detector coherent 2F statistic.
            - sum2F        : Sum over segments of multi-detector coherent 2F statistic.
            - log10BSGL    : Bayes factor 'Signal' vs 'Gaussian noise' or 'Line'.
            - log10BSGLtL  : Bayes factor 'Signal' vs 'Gaussian noise' or 'Line' or 'transient Line'..
            - log10BtSGLtL : Bayes factor 'transient Signal' vs 'Gaussian noise' or 'Line' or 'transient Line'..

       -E, --extra-statistics=none|((coh2F|coh2F_det|max2F|max2F_det|sum2F|sum2F_det|mean2F|mean2F_det|log10BSGL|log10BSGLtL|log10BtSGLtL|ncount|ncount_det|all)[,...]) [default: none]
           Sets which ('stage 0') extra statistics to compute and return in the output file given by `--output-file':
            - coh2F        : Per-segment multi-detector coherent 2F statistic.
            - coh2F_det    : Per-segment per-detector coherent 2F statistic.
            - max2F        : Maximum over segments multi-detector coherent 2F statistic.
            - max2F_det    : Maximum over segments per-detector coherent 2F statistic.
            - sum2F        : Sum over segments of multi-detector coherent 2F statistic.
            - sum2F_det    : Sum over segments of single-detector coherent 2F statistic.
            - mean2F       : Average over segments of multi-detector coherent 2F statistic.
            - mean2F_det   : Average over segments of single-detector coherent 2F statistic.
            - log10BSGL    : Bayes factor 'Signal' vs 'Gaussian noise' or 'Line'.
            - log10BSGLtL  : Bayes factor 'Signal' vs 'Gaussian noise' or 'Line' or 'transient Line'..
            - log10BtSGLtL : Bayes factor 'transient Signal' vs 'Gaussian noise' or 'Line' or 'transient Line'..
            - ncount       : Multi-detector 'Hough' number count of 'threshold crossings' heavyside(2F - 2Fth) over segments.
            - ncount_det   : Per-detector 'Hough' number count of 'threshold crossings' heavyside(2F - 2Fth) over segments.

       -R, --recalc-statistics=none|((coh2F|coh2F_det|max2F|max2F_det|sum2F|sum2F_det|mean2F|mean2F_det|log10BSGL|log10BSGLtL|log10BtSGLtL|ncount|ncount_det|all)[,...]) [default: none]
           Sets which extra *recalc* statistics to compute on final toplist without interpolation. See `--extra-statistics' for statistics descriptions.

DEVELOPER OPTIONS
   SFT input/generation and signal generation
       -V, --validate-sft-files[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Validate the checksums of the SFTs matched by `--sft-files' before loading them into memory. 

       -T, --sft-timestamps-files=<string>,... [default: NULL]
           Files containing timestamps for the generated SFTs; if not given, SFTs with contiguous timestamps are generated. Arguments correspond to the detectors in the setup file given by `--setup-file'; for example, if the setup file was created with `--detectors' set to 'H1,L1', then an argument of 't1.txt,t2.txt' to this option will read H1 timestamps from the file 't1.txt', and L1 timestamps from the file 't2.txt'. The timebase of the generated SFTs is specified by `--sft-timebase'. 

   Search parameter space
       -K, --sky-patch-count=<4-byte unsigned integer> [default: 0]
           Divide the entire sky into this number of ~equal-template-count patches. Requires `--sky-patch-index', mutually exclusive with `--alpha' and `--delta'. 

       -k, --sky-patch-index=<4-byte unsigned integer> [default: 0]
           Search the sky patch given by this index, from zero to one less than `--sky-patch-count'. Requires `--sky-patch-count', mutually exclusive with `--alpha' and `--delta'. 

       -F, --freq-partitions=<4-byte unsigned integer> [default: 1]
           Internally divide the frequency parameter space into this number of ~equal-width partitions. 

       -!, --f1dot-partitions=<4-byte unsigned integer> [default: 1]
           Internally divide the first spindown parameter space into this number of ~equal-width partitions. 

       -3, --f3dot=<start>[,<end>|/<band>|~<plus-minus>] where <>=<8-byte real> [default: 0,0]
           Search parameter space in third spindown, in Hertz/second^3. 

       -4, --f4dot=<start>[,<end>|/<band>|~<plus-minus>] where <>=<8-byte real> [default: 0,0]
           Search parameter space in fourth spindown, in Hertz/second^4. (Just in case a nearby supernova goes off!) 

       -0, --strict-spindown-bounds[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Do not add padding to spindown parameter space bounds.

   Lattice tiling setup
       -l, --lattice=(Zn=cubic|Ans=An-star=optimal) [default: Ans]
           Type of lattice used to generate the lattice tilings. 

       -j, --lattice-rand-offset[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Offset the physical parameter-space origin of the lattice tilings by a random fraction of the lattice step size. This is important when performing mismatch studies to ensure that the mismatch distribution is fully sampled. 

   F-statistic computation
       -m, --Fstat-method=(DemodGeneric|DemodOptC|DemodSSE=DemodBest|ResampGeneric=ResampBest) [default: ResampBest]
           Method used to calculate the F-statistic. 

       -w, --Fstat-run-med-window=<4-byte unsigned integer> [default: 101]
           Size of the running median window used to normalise SFTs and compute noise weight. 

       -q, --Fstat-assume-sqrtSX=<string>,... [default: NULL]
           Assume that the noise in the SFTs have known amplitude spectral densities [sqrt(Sh)], which are given by the arguments to this option, and normalise the SFTs by these given sqrt(Sh). Arguments correspond to the detectors in the setup file given by `--setup-file'; for example, if the setup file was created with `--detectors' set to 'H1,L1', then an argument of '3.2,4.3' to this option will assume that H1 SFTs contain noise with a sqrt(Sh) of 3.2, and L1 SFTs contain noise with a sqrt(Sh) of 4.3. If this option is not given, the SFTs are normalised using noise sqrt(Sh) estimated from the SFTs themselves. 

       --Fstat-Dterms=<4-byte unsigned integer> [default: 8]
           Number of Dirichlet kernel terms to use in computing the F-statistic. May not be available for all F-statistic methods. 

       --Fstat-SSB-precision=(newtonian|relativistic|relativisticopt|DMoff) [default: relativisticopt]
           Precision in calculating the barycentric transformation. 

   Output control
       --mean2F-hgrm[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Output a histogram of all mean multi-Fstatistics computed by the search. 

       -M, --segment-info[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Output various information regarding the segment list, e.g. number of SFTs within each segment. 

   Checkpointing
       -C, --ckpt-output-file=<string> [default: NULL]
           File to which to periodically write checkpoints of output results. 

       -z, --ckpt-output-period=<8-byte real> [default: 0]
           Write checkpoints of output results after this time period (in seconds) has elapsed. 

       --ckpt-output-exit=<8-byte real> [default: 0]
           Write a checkpoint of output results after this fraction of the search has been completed, then exit. Arguments to this option must be in the range [0,1]. (This option is only really useful for testing the checkpointing feature.) 

   Esoterica
       -e, --rand-seed=<4-byte unsigned integer> [default: 0]
           Random seed used to initialise random number generators. 

       --simulate-search[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Simulate search; perform all search actions apart from computing any results. If SFT parameters (i.e. `--sft-files' or `--sft-timebase') are supplied, simulate search with full memory allocation, i.e. with F-statistic input data, cached coherent results, etc. Otherwise, perform search with minimal memory allocation, i.e. do not allocate memory for any data or results. 

       --time-search[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Collect and output detailed timing information from various stages of the search pipeline. 

       --cache-max-size=<4-byte unsigned integer> [default: 0]
           Limit the size of the internal caches, used to store intermediate results, to this number of items per segment. If zero, the caches will grow in size to store all items that are still required. Has no effect when performing a fully-coherent single-segment search, or a non-interpolating search. 

       --cache-all-gc[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           If TRUE, try to instead remove as many items as possible, provided that they are no longer required. If FALSE, whenever an item is added to the internal caches, at most one item that may no longer be required is removed. Has no effect when performing a fully-coherent single-segment search, or a non-interpolating search. 



=================================================
--- Help output for: lalpulsar_WeaveCompare
=================================================

NAME
       lalpulsar_WeaveCompare - compare result files produced by lalpulsar_Weave

SYNOPSIS
       lalpulsar_WeaveCompare --help
           Display this help page.

       lalpulsar_WeaveCompare -h
           Display a short usage string of available options.

       lalpulsar_WeaveCompare -v|--version[=verbose]
           Display (verbose) version information.

       lalpulsar_WeaveCompare [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

OPTIONS
       -S, --setup-file=<string> [required]
           Setup file generated by lalpulsar_WeaveSetup; the segment list, parameter-space metrics, and other required data. 

       -1, --result-file-1=<string> [required]
           First result file produced by lalpulsar_Weave for comparison. 

       -2, --result-file-2=<string> [required]
           Second result file produced by lalpulsar_Weave for comparison. 

   Comparison options
       -p, --sort-by-semi-phys[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Sort toplist items by semicoherent physical coordinates, instead of serial number. 

       -f, --round-param-to-dp=<4-byte unsigned integer> [default: 0]
           Round parameter-space points to the given number of decimal places (must be >0, or zero to disable). 

       -e, --round-param-to-sf=<4-byte unsigned integer> [default: 0]
           Round parameter-space points to the given number of significant figures (must be >0, or zero to disable). 

   Tolerances
       -u, --unmatched-item-tol=<8-byte real> [default: 0]
           When comparing toplists, allow this fraction of items to be umatched to an item in the other toplist (must in in range [0, 1]). 

       -m, --param-tol-mism=<8-byte real> [default: 0.001]
           Allowed tolerance on mismatch between parameter-space points (must be >0, or zero to disable comparison). 

       -r, --result-tol-L1=<8-byte real> [default: 0.055]
           Allowed tolerance on relative error between mismatch between result vectors using L1 (sum of absolutes) norm. Must be within range [0,2]. 

       -s, --result-tol-L2=<8-byte real> [default: 0.045]
           Allowed tolerance on relative error between mismatch between result vectors using L2 (root of sum of squares) norm. Must be within range [0,2]. 

       -a, --result-tol-angle=<8-byte real> [default: 0.04]
           Allowed tolerance on angle between result vectors, in radians. Must be within range [0,PI]. 

       -x, --result-tol-at-max=<8-byte real> [default: 0.05]
           Allowed tolerance on relative errors at maximum component of each result vector. Must be within range [0,2]. 

       -n, --toplist-limit=<4-byte unsigned integer> [default: 0]
           Maximum number of candidates to compare in an output toplist; if 0, all candidates are compared. 



=================================================
--- Help output for: lalpulsar_WeaveConcat
=================================================

NAME
       lalpulsar_WeaveConcat - concatenate result files produced by lalpulsar_Weave

SYNOPSIS
       lalpulsar_WeaveConcat --help
           Display this help page.

       lalpulsar_WeaveConcat -h
           Display a short usage string of available options.

       lalpulsar_WeaveConcat -v|--version[=verbose]
           Display (verbose) version information.

       lalpulsar_WeaveConcat [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

OPTIONS
       -i, --input-result-files=<string>,... [required]
           Input result files produced by lalpulsar_Weave for concatenation. 

       -o, --output-result-file=<string> [required]
           Output concatenated result file. 

       -n, --toplist-limit=<4-byte unsigned integer> [default: 0]
           Maximum number of candidates to return in an output toplist; if 0, all candidates are returned. 



=================================================
--- Help output for: lalpulsar_WeaveSetup
=================================================

NAME
       lalpulsar_WeaveSetup - create setup file for use with lalpulsar_Weave

SYNOPSIS
       lalpulsar_WeaveSetup --help
           Display this help page.

       lalpulsar_WeaveSetup -h
           Display a short usage string of available options.

       lalpulsar_WeaveSetup -v|--version[=verbose]
           Display (verbose) version information.

       lalpulsar_WeaveSetup [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

OPTIONS
       -o, --output-file=<string> [required]
           Output file while stores the segment list, parameter-space metrics, and other data required by lalpulsar_Weave, e.g. ephemerides. 

   Segment list input/generation
       -L, --segment-list=<string> [default: NULL]
           Loads the start and end times of each segment from this file. Format is:
             # comment
             <segment-start-time-GPS> <segment-end-time-GPS> [number-of-SFTs-in-segment]
             ...

       -t, --first-segment=<start>[,<end>|/<band>|~<plus-minus>] where <>=<seconds>[.<frac-seconds>][GPS] | <days>[.<frac-days>]MJD [default: 0,0]
           Generate segments; the range of the first segment is specified by this option. 

       -n, --segment-count=<4-byte unsigned integer> [default: 1]
           Generate this many segments by translating the first segment in time by its span, i.e. so that segments are contiguous and non-overlapping. Must be at least 1. 

       -I, --sft-files=<string> [optional]
           Pattern matching the SFT files to be analysed; used to discard empty segments. Possibilities are:
            - '<SFT file>;<SFT file>;...', where <SFT file> may contain wildcards
            - 'list:<file containing list of SFT files>'

   Parameter-space metric computation
       -r, --ref-time=<seconds>[.<frac-seconds>][GPS] | <days>[.<frac-days>]MJD [optional]
           Reference time for the search, including the parameter-space metrics computed here, and the parameter space and output of lalpulsar_Weave. If omitted, the mid-point between the start of the first segment and the end of the last segment is used. 

       -d, --detectors=<string>,... [required]
           Comma-separated list of 2-character detector names (e.g. H1,L1,...) for which the parameter-space metrics are computed. Note that the detector names are always sorted, since their order impacts the interpretation of some options to lalpulsar_Weave. 

       -s, --spindowns=<4-byte unsigned integer> [default: 1]
           Maximum number of spindowns for which the parameter-space metrics are computed. Must be at least 1. This option limits the size of the spindown parameter space given to lalpulsar_Weave. 

DEVELOPER OPTIONS
   Segment list input/generation
       -g, --segment-gap=<8-byte real> [default: 0]
           When generating segments, increase the translation of the first segment by this amount (in seconds). A positive value gives non-contiguous segments; a negative value gives overlapping segments. 

   Parameter-space metric computation
       -m, --detector-motion=<string> [default: "spin+orbit"]
           Specify what detector motion to assume when computing the parameter-space metrics. The only interesting options are:
            - 'spin+orbit'       use the full ephemeris of the Earth's orbit;
            - 'spin+ptoleorbit': use a Ptolemaic approximation of the Earth's orbit.

       -E, --ephem-earth=<string> [default: "earth00-40-DE405.dat.gz"]
           Earth ephemeris file, used to compute the parameter-space metrics and by lalpulsar_Weave. 

       -S, --ephem-sun=<string> [default: "sun00-40-DE405.dat.gz"]
           Sun ephemeris file, used to compute the parameter-space metrics and by lalpulsar_Weave. 



=================================================
--- Help output for: lalpulsar_WriteSFTsfromSFDBs
=================================================

NAME
       lalpulsar_WriteSFTsfromSFDBs

SYNOPSIS
       lalpulsar_WriteSFTsfromSFDBs --help
           Display this help page.

       lalpulsar_WriteSFTsfromSFDBs -h
           Display a short usage string of available options.

       lalpulsar_WriteSFTsfromSFDBs -v|--version[=verbose]
           Display (verbose) version information.

       lalpulsar_WriteSFTsfromSFDBs [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

OPTIONS
       -i, --file-pattern=<string> [required]
           String of SFDB files (possibly from more than one detector, separated by a ;)

       -s, --timeStampsStarting=<string> [default: NULL]
           File(s) containing the starting timestamps of science segments (possibly from more than one detector, separated by a ;)

       -f, --timeStampsFinishing=<string> [default: NULL]
           File(s) containing the starting timestamps of science segments (possibly from more than one detector, separated by a ;)

       --fmin=<8-byte real> [required]
           Lowest frequency to extract from SFTs

       --fmax=<8-byte real> [required]
           Highest frequency to extract from SFTs

       -d, --outSFTnames=<string> [default: NULL]
           Single SFT output custom path(s) (possibly from more than one detector, separated by a ;). Ignored if outSingleSFT is FALSE. Only use either outSFTnames or outSFTdir

       -n, --outSFTdir=<string> [default: NULL]
           Directory for officially-named output SFTs. Only use either outSFTnames or outSFTdir.

       --outSingleSFT[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: TRUE]
           Write a single concatenated SFT file instead of individual files (default: TRUE)



=================================================
--- Help output for: lalpulsar_compareFstats
=================================================

NAME
       lalpulsar_compareFstats

SYNOPSIS
       lalpulsar_compareFstats --help
           Display this help page.

       lalpulsar_compareFstats -h
           Display a short usage string of available options.

       lalpulsar_compareFstats -v|--version[=verbose]
           Display (verbose) version information.

       lalpulsar_compareFstats [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

OPTIONS
       -1, --Fname1=<string> [required]
           Path and basefilename for first Fstats file

       -2, --Fname2=<string> [required]
           Path and basefilename for second Fstats file

       --tol-param=<8-byte real> [default: 1.192092895507812e-05]
           tolerance on relative error between parameter values

       --tol-L1=<8-byte real> [default: 0.055]
           tolerance on relative error between vectors using L1 norm, between [0,2]

       --tol-L2=<8-byte real> [default: 0.045]
           tolerance on relative error between vectors using L2 norm, between [0,2]

       --tol-angle=<8-byte real> [default: 0.04]
           tolerance on angle between the two vectors in radians, between [0,pi]

       --tol-atMax=<8-byte real> [default: 0.05]
           tolerance on single-sample relative error *at* respective maximum, between [0,2]



=================================================
--- Help output for: lalpulsar_compareSFTs
=================================================

NAME
       lalpulsar_compareSFTs

SYNOPSIS
       lalpulsar_compareSFTs --help
           Display this help page.

       lalpulsar_compareSFTs -h
           Display a short usage string of available options.

       lalpulsar_compareSFTs -v|--version[=verbose]
           Display (verbose) version information.

       lalpulsar_compareSFTs [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

OPTIONS
       -1, --sftBname1=<string> [required]
           Path and basefilename for SFTs1. Possibilities are:
            - '<SFT file>;<SFT file>;...', where <SFT file> may contain wildcards
            - 'list:<file containing list of SFT files>'

       -2, --sftBname2=<string> [required]
           Path and basefilename for SFTs2. Possibilities are:
            - '<SFT file>;<SFT file>;...', where <SFT file> may contain wildcards
            - 'list:<file containing list of SFT files>'

       -V, --verbose[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Verbose output of differences

       -q, --quiet[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           No output of differences even on failure

       -e, --relErrorMax=<8-byte real> [default: 0.0001]
           Maximal relative error acceptable to 'pass' comparison



=================================================
--- Help output for: lalpulsar_create_time_correction_ephemeris
=================================================


=================================================
--- Help output for: lalpulsar_crosscorr_v2
=================================================
2025-06-18 18:47:32.9904 (21050) [CRITICAL]: Starting time

NAME
       lalpulsar_crosscorr_v2

SYNOPSIS
       lalpulsar_crosscorr_v2 --help
           Display this help page.

       lalpulsar_crosscorr_v2 -h
           Display a short usage string of available options.

       lalpulsar_crosscorr_v2 -v|--version[=verbose]
           Display (verbose) version information.

       lalpulsar_crosscorr_v2 [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

OPTIONS
       --startTime=<4-byte signed integer> [required]
           Desired start time of analysis in GPS seconds (SFT timestamps must be >= this)

       --endTime=<4-byte signed integer> [required]
           Desired end time of analysis in GPS seconds (SFT timestamps must be < this)

       --maxLag=<8-byte real> [default: 0]
           Maximum lag time in seconds between SFTs in correlation

       --inclAutoCorr[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Include auto-correlation terms (an SFT with itself)

       --fStart=<8-byte real> [default: 100]
           Start frequency in Hz

       --fBand=<8-byte real> [default: 0.1]
           Frequency band to search over in Hz 

       --alphaRad=<8-byte real> [default: 0]
           Right ascension for directed search (radians)

       --deltaRad=<8-byte real> [default: 0]
           Declination for directed search (radians)

       --refTime=<8-byte real> [default: 0]
           SSB reference time for pulsar-parameters [Default: midPoint]

       --orbitAsiniSec=<8-byte real> [default: 0]
           Start of search band for projected semimajor axis (seconds) [0 means not a binary]

       --orbitAsiniSecBand=<8-byte real> [default: 0]
           Width of search band for projected semimajor axis (seconds)

       --orbitPSec=<8-byte real> [default: 0]
           Binary orbital period (seconds) [0 means not a binary]

       --orbitPSecBand=<8-byte real> [default: 0]
           Band for binary orbital period (seconds) 

       --orbitTimeAsc=<8-byte real> [default: 0]
           Start of orbital time-of-ascension band in GPS seconds

       --orbitTimeAscBand=<8-byte real> [default: 0]
           Width of orbital time-of-ascension band (seconds)

       --ephemEarth=<string> [default: "earth00-40-DE405.dat.gz"]
           Earth ephemeris file to use

       --ephemSun=<string> [default: "sun00-40-DE405.dat.gz"]
           Sun ephemeris file to use

       --sftLocation=<string> [required]
           Filename pattern for locating SFT data. Possibilities are:
            - '<SFT file>;<SFT file>;...', where <SFT file> may contain wildcards
            - 'list:<file containing list of SFT files>'

       --rngMedBlock=<4-byte signed integer> [default: 50]
           Running median block size for PSD estimation

       --numBins=<4-byte signed integer> [default: 1]
           Number of frequency bins to include in calculation

       --mismatchF=<8-byte real> [default: 0.1]
           Desired mismatch for frequency spacing

       --mismatchA=<8-byte real> [default: 0.1]
           Desired mismatch for asini spacing

       --mismatchT=<8-byte real> [default: 0.1]
           Desired mismatch for periapse passage time spacing

       --mismatchP=<8-byte real> [default: 0.1]
           Desired mismatch for period spacing

       --spacingF=<8-byte real> [default: 0]
           Desired frequency spacing

       --spacingA=<8-byte real> [default: 0]
           Desired asini spacing

       --spacingT=<8-byte real> [default: 0]
           Desired periapse passage time spacing

       --spacingP=<8-byte real> [default: 0]
           Desired period spacing

       --numCand=<4-byte signed integer> [default: 1]
           Number of candidates to keep in toplist

       --linesToCleanFilenames=<string> [default: NULL]
           Comma-separated list of line files

       --pairListInputFilename=<string> [default: NULL]
           Name of file from which to read list of SFT pairs

       --pairListOutputFilename=<string> [default: NULL]
           Name of file to which to write list of SFT pairs

       --resampPairListOutputFilename=<string> [default: NULL]
           Name of file to which to write list of Tshort pairs

       --sftListOutputFilename=<string> [default: NULL]
           Name of file to which to write list of SFTs (for sanity checks)

       --tShortListOutputFilename=<string> [default: NULL]
           Name of file to which to write list of Tshorts (for sanity checks)

       --sftListInputFilename=<string> [default: NULL]
           Name of file to which to read in list of SFTs (for sanity checks)

       --gammaAveOutputFilename=<string> [default: NULL]
           Name of file to which to write aa+bb weights (for e.g., false alarm estimation)

       --resampGammaAveOutputFilename=<string> [default: NULL]
           Name of file to which to write aa+bb weights for Tshort pairs (for e.g., false alarm estimation)

       --gammaCircOutputFilename=<string> [default: NULL]
           Name of file to which to write ab-ba weights (for e.g., systematic error)

       --resampGammaCircOutputFilename=<string> [default: NULL]
           Name of file to which to write ab-ba weights for Tshort pairs (for e.g., systematic error)

       --toplistFilename=<string> [default: "toplist_crosscorr.dat"]
           Output filename containing candidates in toplist

       --logFilename=<string> [default: NULL]
           Output a meta-data file for the search

       --resamp[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Use resampling

       --tShort=<8-byte real> [default: 0]
           Resampling tShort for time series subdivisions pre-FFT

       --testShortFunctions[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Use alternative functions for resampMultiPairs with tShort

       --testResampNoTShort[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Use resampling without tShort (for e.g., comparison in gapless Gaussian data)

       --alignTShorts[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Make sure tShort segments from different detectors are aligned

       --accurateResampMetric[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Use more accurate calculation of metric for resampling

       --Dterms=<4-byte signed integer> [default: 8]
           Number of Dirichlet terms for resampling sinc interpolation

       --allowedMismatchFromSFTLength=<8-byte real> [default: 0.1]
           override default value in XLALFstatCheckSFTLengthMismatch() (only relevant for resamp)

       --inclSameDetector[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: TRUE]
           Cross-correlate a detector with itself at a different time (if inclAutoCorr, then also same time)

       --treatWarningsAsErrors[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: TRUE]
           Abort program if any warnings arise (for e.g., zero-maxLag radiometer mode)

       --injectionSources=<string>,... [default: NULL]
           CSV file list containing sources to inject or '{Alpha=0;Delta=0;...}'

       --useLattice[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Use latticeTiling for template placement

       --useShearedPorb[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Use sheared period coordinate for template placement

       --unresolvedPorbMismatch=<8-byte real> [default: 0]
           If maximum mismatch in period direction is less than this, only one point compensate in overall mismatch

       --reallocatePorbMismatch[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Compensate for unresolved period with actual mismatch in that direction.  (Otherwise use mismatch threshold, which is more conservative.)

       --latticeType=(Zn=cubic|Ans=An-star=optimal) [default: Ans]
           Type of lattice used for template placement

       --mismatchMax=<8-byte real> [default: 0]
           maximum mismatch to use for the lattice 

       --orbitPSecCenter=<8-byte real> [default: 0]
            Center of prior ellipse for binary orbital period (seconds) 

       --orbitPSecSigma=<8-byte real> [default: 0]
           One-sigma semiaxis for binary orbital period (seconds) 

       --orbitTimeAscCenter=<8-byte real> [default: 0]
           Center of prior ellipse for orbital time-of-ascension in GPS seconds

       --orbitTimeAscSigma=<8-byte real> [default: 0]
           One-sigma semiaxis for orbital time of ascension (seconds)

       --orbitTPEllipseRadius=<8-byte real> [default: 3.3]
           Radius in sigma for Tasc-Porb search ellipse

       --LatticeOutputFilename=<string> [default: NULL]
           Name of file to which to write lattice



=================================================
--- Help output for: lalpulsar_dumpSFT
=================================================

NAME
       lalpulsar_dumpSFT

SYNOPSIS
       lalpulsar_dumpSFT --help
           Display this help page.

       lalpulsar_dumpSFT -h
           Display a short usage string of available options.

       lalpulsar_dumpSFT -v|--version[=verbose]
           Display (verbose) version information.

       lalpulsar_dumpSFT [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

OPTIONS
       -i, --SFTfiles=<string> [required]
           File-pattern for input SFTs. Possibilities are:
            - '<SFT file>;<SFT file>;...', where <SFT file> may contain wildcards
            - 'list:<file containing list of SFT files>'

       -H, --headerOnly[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Output only SFT headers

       -d, --dataOnly[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Output only SFT data, no header info

       -t, --timestampsOnly[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Output only timestamps, in timestamps-file format

       -N, --Nmax=<4-byte unsigned integer> [default: 4294967295]
           When run on multiple SFTs, exit after this many



=================================================
--- Help output for: lalpulsar_fits_header_getval
=================================================


=================================================
--- Help output for: lalpulsar_fits_header_list
=================================================


=================================================
--- Help output for: lalpulsar_fits_overview
=================================================


=================================================
--- Help output for: lalpulsar_fits_table_list
=================================================


=================================================
--- Help output for: lalpulsar_frequency_evolution
=================================================


=================================================
--- Help output for: lalpulsar_heterodyne
=================================================


=================================================
--- Help output for: lalpulsar_knope
=================================================
usage: lalpulsar_knope [-h] [--condor-submit] [-r RUNPATH] [-p PULSARLIST]
                       inifile

Setup a Condor DAG file to run the known pulsar search pipeline based on
information given in config.ini. The user must specify the configuration file
for the script to run.

positional arguments:
  inifile               The configuation (.ini) file

options:
  -h, --help            show this help message and exit
  --condor-submit       Automatically submit the Condor DAG
  -r RUNPATH, --run-path RUNPATH
                        Set the directory to run the pipeline in (overwrites
                        any value in the config.ini file)
  -p PULSARLIST, --pulsar PULSARLIST
                        A pulsar name to search for rather than all pulsars
                        given in a parameter file directory (this can be
                        specified multiple times to search for more than one
                        pulsar).


=================================================
--- Help output for: lalpulsar_knope_automation_script
=================================================


=================================================
--- Help output for: lalpulsar_knope_collate_results
=================================================
usage: lalpulsar_knope_collate_results [-h] inifile

This script will collate results pages from multiple pulsars into a signal table.

positional arguments:
  inifile     The configuration (.ini) file

options:
  -h, --help  show this help message and exit

An example configuration file could contain the following:

# a section containing output information
[output]
path = path_to_output_directory  # the path to the output directory to contain the page [required]

# a section containing input directory information
[input]
path = path_to_input_directory   # the path to the directory in which the individual results page directories live [required]

# a section containing general information for the output table
[general]
detectors = ['H1', 'L1', 'Joint']   # a list of detctors (including 'Joint') whose results will be output
sort_value = name                   # the pulsar parameter on which to sort the results (default: 'name') [Allowed: 'name', 'freq', 'ra', 'dec', 'sdlim', 'hul', 'ell', 'sdrat', 'dist']
sort_direction = ascending          # sort in ascending or decending order (default: 'ascending')
results = ['h0ul', 'ell']            # a list of result parameters to output (default: ['h0ul'] - the h0 upper limit) [Allowed: 'h0ul', 'ell', 'sdrat', 'q22', 'bsn', 'bci', 'bcin', 'C21ul', 'C22ul']
parameters = ['f0rot', 'ra', 'dec'] # a list of pulsar parameters to output (default: ['f0rot'] - the pulsar's rotation frequency) [Allowed: 'f0rot', 'f0gw', 'f1rot', 'f1gw', 'sdlim', 'ra', 'dec', 'dist']


=================================================
--- Help output for: lalpulsar_knope_result_page
=================================================
usage: lalpulsar_knope_result_page [-h] inifile

This script will create a results page for a single pulsar from the known pulsar analysis pipeline. A configuration (.ini) file is required.

positional arguments:
  inifile     The configuration (.ini) file

options:
  -h, --help  show this help message and exit

An example configuration file could contain the following:

# a section for general analysis information
[general]
parfile = 'path_to_par_file'  # the path to the pulsar parameter file
detectors = ['H1', 'L1']      # a list of the detectors to use
with_joint = True             # a boolean stating whether to also add the joint multi-detector analysis
joint_only = False            # a boolean stating whether to only output the joint multi-detector analysis
with_background = False       # a boolean stating whether to include background analyses
injection = False             # a boolean stating whether this pulsar is a software/hardware injection
upper_limit = 95              # the percentage credible upper limit value
credible_interval = [95]      # a list of the percentage credible intervals for output statistics
use_gw_phase = False          # a boolean stating whether to assume the initial phase parameter is the rotational, or gravitational wave (l=m=2), phase (e.g. if looking a hardware injections)
harmonics = [2]               # a list of the frequency harmonics used in this analysis
model_type = waveform         # either 'waveform' (default) or 'source' specify the parameterisation
biaxial = False               # set whether the signal searched for was from a biaxial source
priorfile = 'path_to_prior'   # the path to the prior file used in the analysis (if given priors will be plotted)

# a section for parameter estimation files
[parameter_estimation]
posteriors = {'H1': 'path_to_H1_posteriors', 'L1': 'path_to_L1_posteriors', 'Joint': 'path_to_Joint_posteriors'}            # a dictionary (keyed on detectors) pointing to the locations of posterior sample files
background = {'H1': 'path_to_H1_background_dir', 'L1': 'path_to_L1_background_dir', 'Joint': 'path_to_Joint_backgroud_dir'} # a dictionary (keyed on detectors) pointing to directories containing the background posterior files

# a section for pre-processed data information
[data]
files = {'H1': 'path_to_H1_data', 'L1': 'path_to_L1_data'} # a dictionary (keyed on detectors) pointing to the locations (or lists of locations for multiple harmonics) of pre-processed data files

# a section for the output location for this pulsar
[output]
path = 'path_to_output_base_directory' # the path to the base directory in which the results page will be created
indexpage = 'path_to_index_page'       # an optional path (relative to the base directory) to the index page containing results from multiple pulsars

# a section for plotting options
[plotting]
all_posteriors = False  # a boolean stating whether to show joint posterior plots of all parameters (default: False)
subtract_truths = False # a boolean stating whether to subtract the true/heterodyned value from any phase parameters to centre the plot at zero for that value
show_contours = False   # a boolean stating whether to show probabilty contours on 2D posterior plots (default: False)
eps_output = False      # a boolean stating whether to also output eps versions of figures (png figures will automatically be produced)
pdf_output = False      # a boolean stating whether to also output pdf versions of figures (png figures will automatically be produced)


=================================================
--- Help output for: lalpulsar_parameter_estimation_nested
=================================================


=================================================
--- Help output for: lalpulsar_spec_avg
=================================================

NAME
       lalpulsar_spec_avg - Normalize and average SFTs and compute spectrogram from SFTs for Fscan

SYNOPSIS
       lalpulsar_spec_avg --help
           Display this help page.

       lalpulsar_spec_avg -h
           Display a short usage string of available options.

       lalpulsar_spec_avg -v|--version[=verbose]
           Display (verbose) version information.

       lalpulsar_spec_avg [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

DESCRIPTION
       Provide SFTs to this program for computing normalized and averaged spectra and spectrogram saved as ASCII data files for use by Fscan

OPTIONS
       -p, --SFTs=<string> [required]
           SFT location/pattern. Possibilities are:
            - '<SFT file>;<SFT file>;...', where <SFT file> may contain wildcards
            - 'list:<file containing list of SFT files>'

       -I, --IFO=<string> [required]
           Detector

       -s, --startGPS=<4-byte signed integer> [required]
           Starting GPS time (SFT timestamps must be >= this)

       -e, --endGPS=<4-byte signed integer> [required]
           Ending GPS time (SFT timestamps must be < this)

       -f, --fMin=<8-byte real> [required]
           Minimum frequency in Hz

       -F, --fMax=<8-byte real> [required]
           Maximum frequency in Hz

       -w, --blocksRngMed=<4-byte signed integer> [default: 101]
           Running Median window size

       -d, --outputDir=<string> [default: "."]
           Output directory for data files

       -o, --outputBname=<string> [default: NULL]
           Base name of output files

       -r, --freqRes=<8-byte real> [default: 0.1]
           Spectrogram freq resolution in Hz

       -b, --subband=<8-byte real> [default: 100]
           Subdivide the output normalized average spectra txt files into these subbands

       -t, --timeBaseline=<8-byte real> [required]
           The time baseline of sfts in seconds

       -x, --allow-skipping[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Allow to exit without an error if no SFTs are found

       -H, --header=<string> [default: NULL]
           Header line in the output file; if not provided then no header line will be made



=================================================
--- Help output for: lalpulsar_spec_avg_long
=================================================

NAME
       lalpulsar_spec_avg_long - Arithmetic and noise-weighted averge spectrum and persistency from SFTs for Fscan

SYNOPSIS
       lalpulsar_spec_avg_long --help
           Display this help page.

       lalpulsar_spec_avg_long -h
           Display a short usage string of available options.

       lalpulsar_spec_avg_long -v|--version[=verbose]
           Display (verbose) version information.

       lalpulsar_spec_avg_long [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

DESCRIPTION
       Provide SFTs to this program for computing arithmetic and noise-weighted average spectra and  persistency of frequency bins above background, optionally track frequency bins above threshold or specific frequency bins, saved as ASCII data files for use by Fscan

OPTIONS
       -p, --SFTs=<string> [required]
           SFT location/pattern. Possibilities are:
            - '<SFT file>;<SFT file>;...', where <SFT file> may contain wildcards
            - 'list:<file containing list of SFT files>'

       -I, --IFO=<string> [required]
           Detector (e.g., H1)

       -s, --startGPS=<4-byte signed integer> [required]
           Starting GPS time (SFT timestamps must be >= this time)

       -e, --endGPS=<4-byte signed integer> [required]
           Ending GPS time (SFT timestamps must be < this time)

       -f, --fMin=<8-byte real> [required]
           Minimum frequency

       -F, --fMax=<8-byte real> [required]
           Maximum frequency

       -w, --blocksRngMean=<4-byte signed integer> [default: 21]
           Running Median window size

       -d, --outputDir=<string> [default: "."]
           Output directory for data files

       -o, --outputBname=<string> [default: NULL]
           Base name of output files

       -t, --timeBaseline=<8-byte real> [required]
           The time baseline of sfts

       -T, --persistAvgSeconds=<4-byte signed integer> [default: 0]
           Time baseline in seconds for averaging SFTs to measure the persistency, must be >= timeBaseline (cannot also specify --persistAveOption)

       -E, --persistAvgOption=<4-byte signed integer> [default: 32766]
           Choose one of 1 = day, 2 = week, or 3 = month averaging for measuring the persistency (cannot also specify --persistAvgSeconds)

       -z, --persistSNRthresh=<8-byte real> [default: 3]
           SNR of lines for being present in the data

       --lineFreq=<string>,... [default: NULL]
           CSV list of line frequencies (e.g., --lineFreq=21.5,22.0). If set, then an output file with all GPS start times of SFTs with float values of number of standard deviations above the mean (>0 indicates above mean). Be careful that the CSV list of values are interpreted as floating point values

       -a, --autoTrack=<8-byte real> [default: 4.940656458412465e-324]
           If specified, also track any frequency whose persistency is >= this threshold within range [0,1]

       -x, --allow-skipping[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Allow to exit without an error if no SFTs are found

       -H, --header=<string> [default: NULL]
           Header line in the output file; if not provided then no header line will be made



=================================================
--- Help output for: lalpulsar_spec_coherence
=================================================

NAME
       lalpulsar_spec_coherence - Compute coherence between two channels from SFTs for Fscan

SYNOPSIS
       lalpulsar_spec_coherence --help
           Display this help page.

       lalpulsar_spec_coherence -h
           Display a short usage string of available options.

       lalpulsar_spec_coherence -v|--version[=verbose]
           Display (verbose) version information.

       lalpulsar_spec_coherence [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

DESCRIPTION
       Provide SFTs to this program for computing coherence between two channels, saved as ASCII data file for use by Fscan

OPTIONS
       -p, --ChASFTs=<string> [required]
           SFT location/pattern. Possibilities are:
            - '<SFT file>;<SFT file>;...', where <SFT file> may contain wildcards
            - 'list:<file containing list of SFT files>'

       -q, --ChBSFTs=<string> [required]
           SFT location/pattern. Possibilities are:
            - '<SFT file>;<SFT file>;...', where <SFT file> may contain wildcards
            - 'list:<file containing list of SFT files>'

       -s, --startGPS=<4-byte signed integer> [required]
           Starting GPS time (SFT timestamps must be >= this)

       -e, --endGPS=<4-byte signed integer> [required]
           Ending GPS time (SFT timestamps must be < this)

       -f, --fMin=<8-byte real> [required]
           Minimum frequency

       -F, --fMax=<8-byte real> [required]
           Maximum frequency

       -d, --outputDir=<string> [default: "."]
           Output directory for data files

       -o, --outputBname=<string> [default: NULL]
           Base name of output files

       -t, --timeBaseline=<8-byte real> [required]
           The time baseline of sfts

       -x, --allow-skipping[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Allow to exit without an error if no SFTs are found

       -H, --header=<string> [default: NULL]
           Header line in the output file; if not provided then no header line will be made



=================================================
--- Help output for: lalpulsar_splitSFTs
=================================================


=================================================
--- Help output for: lalpulsar_ssbtodetector
=================================================


=================================================
--- Help output for: lalpulsar_synthesizeBstatMC
=================================================

NAME
       lalpulsar_synthesizeBstatMC

SYNOPSIS
       lalpulsar_synthesizeBstatMC --help
           Display this help page.

       lalpulsar_synthesizeBstatMC -h
           Display a short usage string of available options.

       lalpulsar_synthesizeBstatMC -v|--version[=verbose]
           Display (verbose) version information.

       lalpulsar_synthesizeBstatMC [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

OPTIONS
       -s, --h0Nat=<8-byte real> [default: 0]
           Overall GW amplitude h0 in *natural units*: h0Nat = h0 sqrt(T/Sn) 

       --h0NatBand=<8-byte real> [default: 0]
           Randomize amplitude within [h0, h0+h0Band] with uniform prior

       --SNR=<8-byte real> [default: 0]
           Alternative: adjust h0 to obtain signal of exactly this optimal SNR

       -i, --cosi=<8-byte real> [default: 0]
           cos(inclination angle). If not set: randomize within [-1,1].

       --psi=<8-byte real> [default: 0]
           polarization angle psi. If not set: randomize within [-pi/4,pi/4].

       --phi0=<8-byte real> [default: 0]
           initial GW phase phi_0. If not set: randomize within [0, 2pi]

       --A=<8-byte real> [required]
           Antenna-pattern matrix MNat_mu_nu: component {1,1} = A = <|a|^2>

       --B=<8-byte real> [required]
           Antenna-pattern matrix MNat_mu_nu: component {2,2} = B = <|b|^2>

       --C=<8-byte real> [required]
           Antenna-pattern matrix MNat_mu_nu: component {1,2} = C = <Re(b a*)>

       --E=<8-byte real> [default: 0]
           Antenna-pattern matrix MNat_mu_nu: component {1,4} = E = <Im(b a*)>

       -N, --numDraws=<8-byte real> [default: 1]
           Number of random 'draws' to simulate for F-stat and B-stat

       -o, --outputStats=<string> [default: NULL]
           Output file containing 'numDraws' random draws of lnL, 2F and B

       -m, --integrationMethod=<4-byte signed integer> [default: 0]
           2D Integration-method: 0=Gauss-Kronod, 1=Monte-Carlo(Vegas)

       -M, --numMCpoints=<8-byte real> [default: 10000]
           Number of points to use in Monte-Carlo integration

       -S, --SignalOnly[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           No noise-draws: will result in non-random 'signal only' values for F and B



=================================================
--- Help output for: lalpulsar_synthesizeLVStats
=================================================

NAME
       lalpulsar_synthesizeLVStats

SYNOPSIS
       lalpulsar_synthesizeLVStats --help
           Display this help page.

       lalpulsar_synthesizeLVStats -h
           Display a short usage string of available options.

       lalpulsar_synthesizeLVStats -v|--version[=verbose]
           Display (verbose) version information.

       lalpulsar_synthesizeLVStats [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

OPTIONS
       -a, --Alpha=<8-byte real> [default: -1]
           Sky position alpha (equatorial coordinates) in radians [Default:allsky]

       -d, --Delta=<8-byte real> [default: 0]
           Sky position delta (equatorial coordinates) in radians [Default:allsky]

       --fixedh0Nat=<8-byte real> [default: -1]
           Alternative 1: if >=0 fix the GW amplitude: h0/sqrt(Sn)

       --fixedSNR=<8-byte real> [default: -1]
           Alternative 2: if >=0 fix the optimal SNR of the injected signals

       --fixedh0NatMax=<8-byte real> [default: -1]
           Alternative 3: if >=0 draw GW amplitude h0 in [0, h0NatMax ] (FReg prior)

       --fixedRhohMax=<8-byte real> [default: -1]
           Alternative 4: if >=0 draw rhoh=h0*(detM)^(1/8) in [0, rhohMax] (canonical F-stat prior)

       -i, --cosi=<8-byte real> [default: 0]
           cos(inclination angle). If not set: randomize within [-1,1].

       --psi=<8-byte real> [default: 0]
           polarization angle psi. If not set: randomize within [-pi/4,pi/4].

       --phi0=<8-byte real> [default: 0]
           initial GW phase phi_0. If not set: randomize within [0, 2pi]

       --AmpPriorType=<4-byte signed integer> [default: 0]
           Enumeration of types of amplitude-priors: 0=physical, 1=canonical

       -I, --IFOs=<string>,... [default: "H1"]
           Comma-separated list of detectors, eg. "H1,H2,L1,G1, ..." 

       --lineIFO=<string> [default: NULL]
           Insert a line (signal in this one IFO, pure gaussian noise in others), e.g. "H1"

       --dataStartGPS=<4-byte signed integer> [default: 814838413]
           data start-time in GPS seconds

       --dataDuration=<4-byte signed integer> [default: 31558150]
           data-span to generate (in seconds)

       --computeBSGL[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: TRUE]
           Compute line-robust statistic (BSGL)

       --Fstar0=<8-byte real> [default: -3.402823466385289e+38]
           BSGL: transition-scale parameter 'Fstar0'

       --oLGX=<string>,... [default: NULL]
           BSGL: prior per-detector line-vs-Gauss odds, length must be numDetectors. (Defaults to oLGX=1/Ndet)

       --sqrtSX=<string>,... [default: NULL]
           Per-detector noise PSD sqrt(SX). Only ratios relevant to compute noise weights. Defaults to 1,1,...

       -N, --numDraws=<4-byte signed integer> [default: 1]
           Number of random 'draws' to simulate

       --randSeed=<4-byte signed integer> [default: 0]
           GSL random-number generator seed value to use

       -o, --outputStats=<string> [default: NULL]
           Output file containing 'numDraws' random draws of stats

       --outputAtoms=<string> [default: NULL]
           Output F-statistic atoms into a file with this basename

       --outputInjParams=<string> [default: NULL]
           Output injection parameters into this file

       --outputMmunuX[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Write the per-IFO antenna pattern matrices into the parameter file

       -S, --SignalOnly[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Signal only: generate pure signal without noise

       --useFReg[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           use 'regularized' Fstat (1/D)*e^F (if TRUE) for marginalization, or 'standard' e^F (if FALSE)

       --ephemEarth=<string> [default: "earth00-40-DE405.dat.gz"]
           Earth ephemeris file to use

       --ephemSun=<string> [default: "sun00-40-DE405.dat.gz"]
           Sun ephemeris file to use

DEVELOPER OPTIONS
       --TAtom=<4-byte signed integer> [default: 1800]
           Time baseline for Fstat-atoms (typically Tsft) in seconds.



=================================================
--- Help output for: lalpulsar_synthesizeTransientStats
=================================================

NAME
       lalpulsar_synthesizeTransientStats

SYNOPSIS
       lalpulsar_synthesizeTransientStats --help
           Display this help page.

       lalpulsar_synthesizeTransientStats -h
           Display a short usage string of available options.

       lalpulsar_synthesizeTransientStats -v|--version[=verbose]
           Display (verbose) version information.

       lalpulsar_synthesizeTransientStats [@<config-file>] [<options>...]
           Run the program. Options are parsed from, if given:
           - Configuration file <config-file>: format is INI file style, one <option>=<value> pair per line.
           - Command line <options>: format is --<option>=<value>, --<option> <value>, or -<short-option> <value>.

OPTIONS
       -a, --Alpha=<8-byte real> [default: -1]
           Sky position alpha (equatorial coordinates) in radians [Default:allsky]

       -d, --Delta=<8-byte real> [default: 0]
           Sky position delta (equatorial coordinates) in radians [Default:allsky]

       --fixedh0Nat=<8-byte real> [default: -1]
           Alternative 1: if >=0 fix the GW amplitude: h0/sqrt(Sn)

       --fixedSNR=<8-byte real> [default: -1]
           Alternative 2: if >=0 fix the optimal SNR of the injected signals

       --fixedh0NatMax=<8-byte real> [default: -1]
           Alternative 3: if >=0 draw GW amplitude h0 in [0, h0NatMax ] (FReg prior)

       --fixedRhohMax=<8-byte real> [default: -1]
           Alternative 4: if >=0 draw rhoh=h0*(detM)^(1/8) in [0, rhohMax] (canonical F-stat prior)

       -i, --cosi=<8-byte real> [default: 0]
           cos(inclination angle). If not set: randomize within [-1,1].

       --psi=<8-byte real> [default: 0]
           polarization angle psi. If not set: randomize within [-pi/4,pi/4].

       --phi0=<8-byte real> [default: 0]
           initial GW phase phi_0. If not set: randomize within [0, 2pi]

       --AmpPriorType=<4-byte signed integer> [default: 0]
           Enumeration of types of amplitude-priors: 0=physical, 1=canonical

       -I, --IFOs=<string>,... [default: "H1"]
           Comma-separated list of detectors, e.g. "H1,H2,L1,G1, ..." 

       --dataStartGPS=<4-byte signed integer> [default: 814838413]
           data start-time in GPS seconds

       --dataDuration=<4-byte signed integer> [default: 31558150]
           data-span to generate (in seconds)

       --timestampsFiles=<string>,... [default: NULL]
           ALTERNATIVE: file(s) to read timestamps from (file-format: lines with <seconds> [<nanoseconds>]; nanoseconds currently ignored; only 1 detector/file currently supported)

       --injectWindow-type=<string> [default: "rect"]
           Type of transient window to inject ('none', 'rect', 'exp')

       --injectWindow-tauDays=<8-byte real> [default: 1]
           Shortest transient-window timescale to inject, in days

       --injectWindow-tauDaysBand=<8-byte real> [default: 13]
           Range of transient-window timescale to inject, in days

       --injectWindow-t0Days=<8-byte real> [default: 0]
           Earliest start-time of transient window to inject, as offset in days from dataStartGPS

       --injectWindow-t0DaysBand=<8-byte real> [default: 323.2563657407408]
           Range of GPS start-time of transient window to inject, in days [Default:dataDuration-3*tauMax]

       --searchWindow-type=<string> [default: "rect"]
           Type of transient window to search with ('none', 'rect', 'exp') [Default:injectWindow]

       --searchWindow-tauDays=<8-byte real> [default: 1]
           Shortest transient-window timescale to search, in days [Default:injectWindow]

       --searchWindow-tauDaysBand=<8-byte real> [default: 13]
           Range of transient-window timescale to search, in days [Default:injectWindow]

       --searchWindow-t0Days=<8-byte real> [default: 0]
           Earliest start-time of transient window to search, as offset in days from dataStartGPS [Default:injectWindow]

       --searchWindow-t0DaysBand=<8-byte real> [default: 323.2563657407408]
           Range of GPS start-time of transient window to search, in days [Default:injectWindow]

       --searchWindow-dtau=<4-byte signed integer> [default: 1800]
           Step-size for search/marginalization over transient-window timescale, in seconds [Default:TAtom]

       --searchWindow-dt0=<4-byte signed integer> [default: 1800]
           Step-size for search/marginalization over transient-window start-time, in seconds [Default:TAtom]

       --computeFtotal[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Also compute 'total' F-statistic over the full data-span

       -N, --numDraws=<4-byte signed integer> [default: 1]
           Number of random 'draws' to simulate

       --randSeed=<4-byte signed integer> [default: 0]
           GSL random-number generator seed value to use

       -o, --outputStats=<string> [default: NULL]
           Output file containing 'numDraws' random draws of stats

       --outputAtoms=<string> [default: NULL]
           Output F-statistic atoms into a file with this basename

       --outputFstatMap=<string> [default: NULL]
           Output F-statistic over 2D parameter space {t0, tau} into file with this basename

       --outputInjParams=<string> [default: NULL]
           Output injection parameters into this file

       --outputPosteriors=<string> [default: NULL]
           output posterior pdfs on t0 and tau (in octave format) into this file 

       -S, --SignalOnly[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           Signal only: generate pure signal without noise

       --useFReg[=(TRUE|FALSE)|(YES|NO)|(1|0)] [default: FALSE]
           use 'regularized' Fstat (1/D)*e^F (if TRUE) for marginalization, or 'standard' e^F (if FALSE)

       --ephemEarth=<string> [default: "earth00-40-DE405.dat.gz"]
           Earth ephemeris file to use

       --ephemSun=<string> [default: "sun00-40-DE405.dat.gz"]
           Sun ephemeris file to use

DEVELOPER OPTIONS
       --TAtom=<4-byte signed integer> [default: 1800]
           Time baseline for Fstat-atoms (typically Tsft) in seconds.

DEPRECATED OPTIONS
       --IFO
           Detector: 'G1','L1','H1,'H2', 'V1', ... (use --IFOs instead)



=================================================
--- Help output for: lalpulsar_version
=================================================


=================================================
--- Help output for: lalsim-bh-qnmode
=================================================


=================================================
--- Help output for: lalsim-bh-ringdown
=================================================


=================================================
--- Help output for: lalsim-bh-sphwf
=================================================


=================================================
--- Help output for: lalsim-burst
=================================================


=================================================
--- Help output for: lalsim-detector-noise
=================================================


=================================================
--- Help output for: lalsim-detector-strain
=================================================


=================================================
--- Help output for: lalsim-inject
=================================================


=================================================
--- Help output for: lalsim-inspiral
=================================================


=================================================
--- Help output for: lalsim-ns-eos-table
=================================================


=================================================
--- Help output for: lalsim-ns-mass-radius
=================================================


=================================================
--- Help output for: lalsim-ns-params
=================================================


=================================================
--- Help output for: lalsim-sgwb
=================================================


=================================================
--- Help output for: lalsim-unicorn
=================================================


=================================================
--- Help output for: lalsimulation_version
=================================================


